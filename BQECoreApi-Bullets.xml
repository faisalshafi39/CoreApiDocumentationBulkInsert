<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BQECore.Api</name>
    </assembly>
    <members>
        <member name="T:BQECore.Api.BundleConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:BQECore.Api.BundleConfig.RegisterBundles(System.Web.Optimization.BundleCollection)">
            <summary>
             // For more information on Bundling, visit http://go.microsoft.com/fwlink/?LinkId=254725
            </summary>
            <param name="bundles"></param>
        </member>
        <member name="T:BQECore.Api.FilterConfig">
            <summary>
            
            
            </summary>
        </member>
        <member name="M:BQECore.Api.FilterConfig.RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)">
            <summary>
            
            
            </summary>
            <param name="filters"></param>
        </member>
        <member name="T:BQECore.Api.RouteConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:BQECore.Api.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)">
            <summary>
            
            </summary>
            <param name="routes"></param>
        </member>
        <member name="T:BQECore.Api.WebApiConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:BQECore.Api.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:BQECore.Api.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:BQECore.Api.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:BQECore.Api.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:BQECore.Api.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:BQECore.Api.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:BQECore.Api.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:BQECore.Api.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:BQECore.Api.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:BQECore.Api.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BQECore.Api.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:BQECore.Api.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:BQECore.Api.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:BQECore.Api.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:BQECore.Api.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:BQECore.Api.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,BQECore.Api.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,BQECore.Api.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:BQECore.Api.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},BQECore.Api.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:BQECore.Api.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:BQECore.Api.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:BQECore.Api.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageSampleKey.#ctor(BQECore.Api.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:BQECore.Api.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:BQECore.Api.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:BQECore.Api.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,BQECore.Api.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:BQECore.Api.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:BQECore.Api.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:BQECore.Api.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:BQECore.Api.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:BQECore.Api.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:BQECore.Api.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BQECore.Api.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:BQECore.Api.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:BQECore.Api.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:BQECore.Api.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:BQECore.Api.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:BQECore.Api.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:BQECore.Api.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BQECore.Api.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:BQECore.Api.AuthMessageHandler">
            <summary>
            
            </summary>
        </member>
        <member name="P:BQECore.Api.AuthMessageHandler.Principal">
            <summary>
            
            </summary>
        </member>
        <member name="M:BQECore.Api.AuthMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="F:BQECore.Api.Authorization.APIResponse.myhttpResponse">
            <summary>
            
            </summary>
        </member>
        <member name="M:BQECore.Api.Authorization.APIResponse.SetHeaderValue(System.String)">
            <summary>
            
            </summary>
            <param name="pMessage"></param>
        </member>
        <member name="M:BQECore.Api.Authorization.APIResponse.SetHeaderValue(System.Int32,ParameterType)">
            <summary>
            Sets the API response header
            </summary>
            <param name="noOfRecordEffected">The number of records effected in the database.</param>
            <param name="pParameterType">The type of operation done on the database.</param>
        </member>
        <member name="M:BQECore.Api.Authorization.APIResponse.SetHeaderValue(System.Int32,System.Int32)">
            <summary>
            Sets the API response header with number of record saved and number of record failed
            </summary>
            <param name="noOfRecordSaved">number of record(s) Saved successfully.</param>
            <param name="noOfRecordFailed">number of record(s) failed.</param>
        </member>
        <member name="M:BQECore.Api.Authorization.APIResponse.SetHeaderValue(System.Exception)">
            <summary>
            set the custom header base on exception code
            </summary>
            <param name="e">exception of type System.Exceptio</param>
        </member>
        <member name="M:BQECore.Api.Authorization.APIResponse.GetHeaderValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.AppIDHandler.LoadControllerMapping(System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:BQECore.Api.SubscriptionMessageHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:BQECore.Api.SubscriptionMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.Security.SecurityException">The caller does not have the permission required to set the principal. </exception>
        </member>
        <member name="M:BQECore.Api.SubscriptionMessageHandler.LoadControllerMapping(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:BQECore.Api.Controllers.AdminPortalLanderController">
            <summary>
            Class AdminPortalLanderController.
            </summary>
            <seealso cref="T:BQECore.Api.Controllers.HostLanderController" />
        </member>
        <member name="P:BQECore.Api.Controllers.AdminPortalLanderController.IsValidRequest">
            <summary>
            Gets a value indicating whether this instance is valid request.
            </summary>
            <value><c>true</c> if this instance is valid request; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BQECore.Api.Controllers.AdminPortalLanderController"/> class.
            </summary>
            <exception cref="T:BQECore.Model.BQEException">Invalid request pass</exception>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.ResetSecurityProfile(BQECoreSharedLib.HostUser)">
            <summary>
            Resets the security profile.
            </summary>
            <param name="user">Takes HostUser as Param</param>
            <returns>BQECoreSharedLib.HostUser.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.SaveCustomReport(BQECore.Model.CustomReport,System.Boolean)">
            <summary>
            Saves the custom report.
            </summary>
            <param name="report">The report.</param>
            <param name="overwrite">if set to <c>true</c> [overwrite].</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.SaveCustomInvoice(BQECore.Model.CustomInvoiceTemplate,System.Boolean)">
            <summary>
            Saves the custom invoice.
            </summary>
            <param name="invoice">The invoice.</param>
            <param name="overwrite">if set to <c>true</c> [overwrite].</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.DeleteReports(System.Guid[])">
            <summary>
            Deletes the reports.
            </summary>
            <param name="ids">The ids.</param>
            <returns>IEnumerable&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.DeleteInvoiceTemplates(System.Guid[])">
            <summary>
            Deletes the invoice templates.
            </summary>
            <param name="ids">The ids.</param>
            <returns>IEnumerable&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.CustomInvoiceTemplates">
            <summary>
            gets Custom Invoice templates.
            </summary>
            <returns>IEnumerable&lt;InvoiceTemplateList&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.InvoiceTemplates(BQECore.Model.BQEParameters)">
            <summary>
            Invoices the templates.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;InvoiceTemplateList&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.ReportGroups(BQECore.Model.BQEParameters)">
            <summary>
            Reportses the specified parameters.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;Report&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.CleanCompany(BQECoreSharedLib.CleanCompanyOption)">
            <summary>
            Cleans the company.
            </summary>
            <param name="cleanFileRetainAllUser">The clean file retain all user.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.ProfileList(BQECore.Model.BQEParameters)">
            <summary>
            GetSecurityTemplateList : This Api is used to get list of Security Templates.
            </summary>
            <param name="param">The parameter.</param>
            <returns>List{System.Web.Mvc.SelectListItem}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.RefreshAfterCleanCompany(System.Collections.Generic.List{BQECoreSharedLib.DataObject})">
            <summary>
            Refreshes the after clean company.
            </summary>
            <param name="table">The table.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.SaveDefaultsList(System.Collections.Generic.List{BQECoreSharedLib.DataObject})">
            <summary>
            Saves the defaults list.
            </summary>
            <param name="table">The table.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.PostDashBoardAfterCleanCompany(System.Collections.Generic.List{BQECoreSharedLib.DataObject})">
            <summary>
            Posts the dash board after clean company.
            </summary>
            <param name="table">The table.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.HostLinkedUsers(BQECore.Model.EmployeeVendorParameter)">
            <summary>
            Hosts the linked users.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;HostLinkedUser&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.CreateBackup(BQECoreSharedLib.CompanyBackup)">
            <summary>
            Creates the backup.
            </summary>
            <param name="companyBackup">The company backup.</param>
            <returns>CompanyBackup.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.DownloadBackup(BQECoreSharedLib.CompanyBackup)">
            <summary>
            Downloads the backup.
            </summary>
            <param name="companyBackup">The company backup.</param>
            <returns>System.Web.Mvc.FileContentResult.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.DeleteBackup(System.String)">
            <summary>
            Deletes the backup.
            </summary>
            <param name="backupFileLocation">The backup file location.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.ExecuteSql(BQECoreSharedLib.QueryHelper)">
            <summary>
            Executes the SQL.
            </summary>
            <param name="query">The query.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.GetLogFiles">
            <summary>
            Gets the log files.
            </summary>
            <returns>List&lt;LogFile&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.GetLogFile(System.String)">
            <summary>
            Gets the log file.
            </summary>
            <param name="filePath">The file path.</param>
            <returns>System.Web.Mvc.FileContentResult.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.DeleteLogFile(System.String)">
            <summary>
            Deletes the log file.
            </summary>
            <param name="filePath">The file path.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.GetDataForSubscriptionMigration(System.Guid)">
            <summary>
            Gets the data for subscription migration.
            </summary>
            <param name="id">The identifier.</param>
            <returns>List&lt;DataObject&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.SaveDataForSubscriptionMigration(BQECoreSharedLib.DataObject)">
            <summary>
            Saves the data for subscription migration.
            </summary>
            <param name="dobject">The dobject.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.UpdateRecordsAfterSubscriptionMigrate">
            <summary>
            Updates the records after subscription migrate.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.GetEmplistSubscriptionMigration">
            <summary>
            Gets the emplist subscription migration.
            </summary>
            <returns>List&lt;SingleValue&lt;Guid&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AdminPortalLanderController.DeleteEmployeeRecordsAfterSubscriptionMigrate(System.Collections.Generic.List{BQECore.Model.SingleValue{System.Guid}})">
            <summary>
            Deletes the employee records after subscription migrate.
            </summary>
            <param name="list">The list.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.AccountReconciliationController">
            <API>
            <API_Name>Account Reconciliation</API_Name>
            <API_Description>
             Reconciliation of accounts refers to the process of ensuring that two sets of records for the same account are in agreement.
             It is a standard accounting procedure to reconcile your accounts to ensure there is no discrepancy between your bank registers in the accounting system and actual bank statements.
             This is done by making sure the balances match at the end of a particular accounting period.To ensure the reliability of the financial records, 
             reconciliations must be performed for all balance sheet accounts(like gas, credit card, bank accounts, etc.) on a regular and ongoing basis.
             The general rule is that any account that is being maintained separately needs to be reconciled periodically to ensure correct balances across the two systems.
             Allows you to retrieve account reconciliations
             Allows you to retrive account balance
             Allows you to create account reconciliation
             Allows you to update account reconciliation
             Allows you to undo account reconciliation
             </API_Description>
             <summary>
             Class AccountReconciliationController.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.AccountReconciliationController.Reconciliations(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>Reconciliations</Endpoint_Name>
             <summary>
             This API is used to RETRIEVE account reconcillations. We pass BQE parameters as parameter in the request header.
              </summary>
             <param name="parameters">It takes BQEParameters as Parameter.</param>
             <returns>returns  IEnumerable AccountReconciliation Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountReconciliationController.AccountReconciliationList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>AccountReconciliationList</Endpoint_Name>
             <summary>
             This API is used to RETRIEVE account reconciliation list. It takes BQE parameters as parameter in the request header.
             </summary>
             <param name="parameters">It takes BQEParameters as Parameter.</param>
             <returns>returns  IEnumerable AccountReconciliationList Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountReconciliationController.GetNewAccountReconciliation(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetNewAccountReconciliation</Endpoint_Name>
             <summary>
             This API is used to RETRIEVE new account reconciliation model object. We pass account_ID as parameter
             </summary>
             <param name="id">It takes Account_ID as Param </param>
             <returns>returns  AccountReconciliation Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountReconciliationController.GetAccountReconciliationEntries(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>GetAccountReconciliationEntries</Endpoint_Name>
            <summary>This API method is used to RETRIEVE account reconciliation entries. We pass BQE parameters in the request header
            </summary>
            <param name="param">It takes param as parameters</param>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountReconciliationController.GetAccountBeginningBalance(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAccountBeginningBalanc</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE beginning balance of an account. We pass Account_ID as parameter.
             </summary>
             <param name="id">It takes Account_ID  as parameter</param>
             <returns>System.Decimal.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountReconciliationController.GetAccountBalance(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAccountBalance</Endpoint_Name>
             <summary>
             This API method id used to RETRIEVE account balance.  We pass Account_ID as parameter
             </summary>
             <param name="id">It takes Account_ID as parameter</param>
             <returns>returns  DateTime Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountReconciliationController.GetLastReconciliationDate(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetLastReconciliationDate</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE last reconciliation date.  We pass Account_ID as parameter.
             </summary>
             <param name="id">Represents Account_ID as parameter</param>
             <returns>returns  DateTime Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountReconciliationController.GetReconciliationEntries(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetReconciliationEntries</Endpoint_Name>
             <summary>
             This API is used to RETRIEVE reconciliation entries. We pass Account_ID as parameter
             </summary>
             <param name="id">It takes Account_ID as parameter</param>
             <returns>returns  IEnumerable ReconciliationEntry </returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountReconciliationController.GetReconcililedItems(System.Guid)">
            <Endpoint>
            <Verb></Verb>
            <Endpoint_Name>GetReconcililedItems</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE reconcililed items. We pass reconciliation_ID as parameter.
             </summary>
             <param name="reconciliation_ID">It takes reconciliation_ID as parameter</param>
             <returns>AccountReconciliation.</returns>
             </Endpoint>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.AccountReconciliationController.GetLastReconciliation(System.Guid)" -->
        <member name="M:BQECore.Api.Controllers.AccountReconciliationController.PostAccountReconciliation(BQECore.Model.AccountReconciliation)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>ostAccountReconciliation</Endpoint_Name>
             <summary>
              This API method is used to CREATE account reconciliation. We pass AccountReconciliation as 'value' in the body of the request.
             </summary>
             <param name="value">It takes AccountReconciliation as parameter</param>
             <returns>AccountReconciliation.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountReconciliationController.PutAccountReconciliation">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutAccountReconciliation</Endpoint_Name>
             <summary>
             This API method is used to  UPDATE account reconciliation.
             </summary>
             <returns>AccountReconciliation.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountReconciliationController.UndoLastReconciliation(System.String)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>UndoLastReconciliation</Endpoint_Name>
             <summary>
             This API method is used to undo last reconciliation. We pass AccountList_ID as parameter.
             </summary>
             <param name="id">It takes AccountList_ID as parameter</param>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.ActivityController">
            <API>
            <API_Name>Activity</API_Name>
            <API_Description>
            Activity Items, also known as service items, are a list of common activities and tasks you perform when working on a project.
            The properties of an activity are defined in the Activity screen, which are then inherited by the time entries, budgets, fee schedules,
            task allocations, etc.Although an unlimited number of activities can be created,
            we recommend that you keep the list as short as possible to ease the time entry task.
            Allows you to retrieve a specific or a list of activities
            Allows you to create activity model
            Allows you to update activity model
            Allows you to delete activity model.
             </API_Description>
             <summary>
             ActivityController Inherits ApiController
             This class Controls all API Calls for Activity
             Module.
             </summary>
             </API>
             <seealso>
                 <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.Activity}</cref>
             </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.ActivityController.Module">
            <inheritdoc />
            <summary>
            GetModule: This API method is used to RETRIEVE a module.
            </summary>
            <value>The module.</value>&gt;
        </member>
        <member name="M:BQECore.Api.Controllers.ActivityController.Fill">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>Fill</Endpoint_Name>
            <API>Fill</API>
             <summary>
             This API method is used to fill this instance.
             </summary>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ActivityController.GetActivity(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetActivity</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a speciifc activity.  We pass Activity_ID or ActivityID as parameter in for of Activity List
             </summary>
             <param name="id">It takes Activity ID as Parameter.</param>
             <returns>Activity Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ActivityController.Activities(BQECore.Model.ActivityListparameter)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>Activities</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE list of activities based on the filter passed. We pass parameters in the request header.
             </summary>
             <param name="parameters"></param>
             <returns></returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ActivityController.ActivityCompact(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>ActivityCompact</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all the activities in the form of activity for dropdown list. We pass BQE parameters as parameter in the request header.
             </summary>
             <param name="parameters">It takes BQEParameters as Parameter</param>
             <returns>ActivityForDropdown List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ActivityController.PostActivity(BQECore.Model.Activity)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostActivity</Endpoint_Name>
             <summary>
             This API method is used to CREATE activity model. We pass activity as parameter.
             </summary>
             <param name="value">It takes Activity as parameter</param>
             <returns>Activity.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ActivityController.PutActivity">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutActivity</Endpoint_Name>
             <summary>
             This API method is used to UPDATE activity model.
             </summary>
             <returns>Activity</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ActivityController.DeleteActivity(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteActivity</Endpoint_Name>
             <summary>
             This API method is used to DELETE an activity. We pass Activity_ID as parameter.
             </summary>
             <param name="id">It takes Activity_ID as parameter</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ActivityController.DeleteActivities(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteActivities</Endpoint_Name>
             <summary>
             This API method is used to DELETE activities. We pass an array of Activity_ID as parameter
             </summary>
             <param name="ids">It takes Array of Activity_ID as Parameter </param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ActivityController.BatchChange(BQECore.Model.ActivityBatchChange)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchChange</Endpoint_Name>
             <summary>
             This API method is used to make UPDATE to a batch of activities. we pass ActivityBatchChange as Parameter of type BatchChange containing fields that need to be batch updated.
             </summary>
             <param name="value">It takes ActivityBatchChange as Parameter of type BatchChange </param>
             <returns>BQEResource.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ActivityController.FullBatchChange(BQECore.Model.FullActivityBatchChange)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>ullBatchChange</Endpoint_Name>
             <summary>
             This API method is used to make full batch UPDATE to activities. We pass FullActivityBatchChang as parameter.
             </summary>
             <param name="value">It takes FullActivityBatchChange as Parameter </param>
             <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ActivityController.BatchDeleteActivities(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteActivities</Endpoint_Name>    
             <summary>
             This API method is used to batch DELETE  list of activities. We pass ids as parameter
             </summary>
             <param name="ids">It takes BatchDelete as Parameter</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ActivityController.ActivitySummaryInfo(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>ActivitySummaryInfo</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE activity summary information. We pass BQE parameters as parameter in the request header.
             </summary>
             <param name="parameters">It takes BQEParameters as Parameter</param>
             <returns>SummaryInfo.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ActivityController.MergeActivity(BQECore.Model.BatchMerge)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>MergeActivity</Endpoint_Name>
             <summary>
             This API method is used to handle merge of multiple ID's. We paas BatchMerge as parameter.
             </summary>
             <param name="batchMerge">It takes BatchMerge as Parameter.</param>
             <returns>List of APIResponse</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ActivityController.PostOnBoardActivities(System.Collections.Generic.List{BQECore.Model.OnBoardActivity})">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>PostOnBoardActivities</Endpoint_Name>
             <summary>
              This API method is used to CREATE activites for an industry that has been set in the on board settings. It takes activities as parameter. 
             </summary>
             <param name="activities">It takes List of OnBoardActivity as Parameter </param>
             <returns>System.Int32.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ActivityController.ActivityList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>ActivityList</Endpoint_Name>
             <summary>
             ActivityList: This API method is used to RETRIEVE list of activities based on some parameters. We pass BQE parameters in the body of the request.
             </summary>
             <param name="parameters">It takes BQEParameters as Parameter</param>
             <returns>List&lt;ActivityList&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.AllocateController">
            <API>
            <API_Name>Allocate</API_Name>
            <API_Description>
            Allocation is a powerful project management and resource scheduling feature in Core. 
            It allows you to allocate tasks (activities) and expenses to your employees for various projects with a stated duration of time.
            Allows you retreive allocation list
            Allows you to create allocate model
            Allows you to delete allocate model
            Allows you to update allocate model
            </API_Description>
             <summary>
             Class AllocateController.
             </summary>
             </API>
             <seealso>
              <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.AllocateHoursUnits}</cref>
             </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.AllocateList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>AllocateList</Endpoint_Name>
             <summary>
             This API method is used to allocate the list.
             </summary>
             <param name="parameters">Represents the parameters Passed.</param>
             <returns>IEnumerable&lt;AllocateList&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.Allocations(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>Allocations</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE allocations list.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{Allocate}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.GetItem(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetItem</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE an item. We pass id as parameter.
             </summary>
             <param name="id">Represents the identifier passed.</param>
             <returns>Allocate.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.Forecast(BQECore.Model.ForecastParameter)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>Forecast</Endpoint_Name>
             <summary>
             This API method is used to forecast specified parameters.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>ForecastHeader.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.SaveCompactAllocate(BQECore.Model.CompactAllocate)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API method is used to CREATE compact allocate.
             </summary>
             <param name="allocate">Represents the allocate parameter passed.</param>
             <returns>System.Int32.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.AvailablePredecessorTask(BQECore.Model.TaskFollows)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>AvailablePredecessorTask</Endpoint_Name>
             <summary>
              This API is used to RETRIEVE available predecessor task for allocation
             </summary>
             <param name="task">Represents the allocation's ID of type GUID to get predecessor task</param>
             <returns>IEnumerable{Allocate}.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.AvailablePredecessorTasks(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>vailablePredecessorTasks</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE available predecessor tasks for allocation
             </summary>
             <param name="parameters">Represents the parameter</param>
             <returns> </returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.AllocationFromProjectBudget(BQECore.Model.CopyAllocate)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>AllocationFromProjectBudget</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE available predecessor task for an allocation from buget of a project.
             </summary>
             <param name="allocate">Represents the allocate parameter.</param>
             <returns>IEnumerable{Allocate}.</returns>
             </Endpoint>
             Project_ID
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.PostAllocate(BQECore.Model.Allocate)">
             POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostAllocate</Endpoint_Name>       
             <summary>
             This API method is used to CREATE allocate model. It takes EmployeeProjectData Model as parameter
             </summary>
             <param name="value">Represents the value.</param>
             <returns>Allocate.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.PutAllocate">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutAllocate</Endpoint_Name>
             <summary>
             This API method is used to UPDATE allocate model
             </summary>
             <returns>Allocate.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.GetTaskEndDate(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetTaskEndDate</Endpoint_Name>
             GetTaskEndDate api/values/5
             <summary>
             This API method is used to RETRIEVE task end date. We pass id as parameter.
             </summary>
             <param name="id">Represents the identifier.</param>
             <returns>Object.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.TaskConflicts(BQECore.Model.Allocate)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>TaskConflicts</Endpoint_Name>
             <summary>
              This API method is used to check if a task is in conflict with other Tasks
             </summary>
             <param name="allocate">Represents the allocate parameter.</param>
             <returns>true if conflict occurs</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.DeleteAllocate(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteAllocate</Endpoint_Name>
            <API>Allocate</API> 
             <summary>
              This API method is used to DELETE an allocated entry. We pass id as parameter
             </summary>
             <param name="id">Represents the identifier.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.DeleteAllocates(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteAllocates</Endpoint_Name>
             <summary>
              This API method is used to DELETE list of allocated models. We pass ids as parameter.
             </summary>
             <param name="ids">Represents the identifiers.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.BatchDeleteAllocate(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteAllocate</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE allocate. We pass ids as parameter.
             </summary>
             <param name="ids">Represents the identifiers.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.CopyFromProject(BQECore.Model.CopyAllocateFromProject)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>CopyFromProject</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE control units from a project.
             </summary>
             <param name="allocateFromProject">REpresents the allocate from project parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.AllocateController.AvailableProjects(BQECore.Model.BQEParameters)" -->
        <member name="M:BQECore.Api.Controllers.AllocateController.GetForecastParameter">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetForecastParameter</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE the forecast parameter.
             </summary>
             <returns></returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AllocateController.GanttChart(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>GanttChart</Endpoint_Name>
             <summary>
             This API method is used to RETREIVE gantt chart. We pass BQE parameters in the request header.
             </summary>
             <param name="parameters"> Represents the parameters</param>
             <returns></returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.ApiHealthController">
            <summary>
            Class ApiHealthController.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.ApiHealthController.GetApiVersion">
            <summary>
            Gets the API version.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.AuditController">
            <API>
            <API_Name>Audit</API_Name>
            <API_Description> 
            Allows you to retrieve aspecific audit or a list of audits
             </API_Description>
             <summary>
             Class AuditController.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.AuditController.GetAudit(ModuleNames,System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAudit</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE audit. We pass Entity and User_ID as parameters.
             </summary>
             <param name="Entity">Represents the entity parameter.</param>
             <param name="User_ID">Represents the user identifier.</param>
             <returns>List of Audit Models</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AuditController.AuditList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>AuditList</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE a specific audit. We pass BQE parameters in the request header as parameters.
             </summary>
             <param name="parameters">Represents the parameter passed.</param>
             <returns>List of Audit Models</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AuditController.GetAudit(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAudit</Endpoint_Name>
             <summary>
             GetAudit : This API method is used to RETRIEVE a spcific audit. We pass User_ID as parameter.
             </summary>
             <param name="User_ID">Represents the user identifier.</param>
             <returns>List of Audit Models</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.BankFeedsController">
            <API>
            <API_Name>Cloud Feed</API_Name>
            <API_Description>
            Cloud feeds allow you to automatically import account transactions from your bank or financial institution into Core.
            Core offers you the ability to connect to your bank, credit card, investment and liability accounts to download transactions.
            Allows you to create bank feed entry
            Allows you to retrieve a specific or a list of bank feed transactions
            Allows you to create bank feed model
            Allows you to update bank feed model
             </API_Description>
             <summary>
             BankController Inherits ApiController
             This class Controls all API Calls for BankFeeds
             Module.
             </summary>
             </API>
             <seealso>
                 <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.BankFeeds}</cref>
             </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.BankFeedsController.SaveBankFeed(BQECore.Model.BankFeeds)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>SaveBankFeed</Endpoint_Name>
             <summary>
             This API method is used to CREATE a simple bank feed entry. We pass bankfeed as parameter
             </summary>
             <param name="bankFeed">Represents the parameter passed.</param>
             <returns>Number of records added</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BankFeedsController.BankFeedsWithTransactions(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>BankFeedsWithTransactions</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE all bank feeds or filtered bank feeds with matched tansactions based on filters. 
              We pass BQE parameters in the request header as parameters.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>IEnumerable{BankFeeds}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BankFeedsController.BankFeeds(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>BankFeeds</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE all bank feeds or filtered bank feeds based on filters.
              We pass BQE parameters in the request header as parameters.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>IEnumerable{BankFeeds}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BankFeedsController.FindMatch(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>FindMatch</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE corresponding bank feed with list Of transactions.
             </summary>
             <param name="id">Represents the identifier passed as parameter.</param>
             <para>Transactions of Type List{MatchingTransaction}</para>
             <returns>Single{BankFeedsMatchedTransaction}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BankFeedsController.GetBankFeed(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetBankFeed</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE a specific bank feed. We pass BankFeed_ID as parameter.
             </summary>
             <param name="BankFeed_ID">Represents the bank feed identifier passed as parameter.</param>
             <returns>IEnumerable{BankFeeds}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BankFeedsController.MatchTransaction(BQECore.Model.BankFeedsMatchedTransaction)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>MatchTransaction</Endpoint_Name>
             <summary>
              This API method is used to match transaction.
             </summary>
             <param name="bankFeed">Represents the bank feed parameter.</param>
             <returns>System.Int32.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BankFeedsController.TransferTransaction(BQECore.Model.BankFeedsMatchedTransaction)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>TransferTransaction</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE a transfer feed.
             </summary>
             <param name="bankFeed"> Represents the bank feed parameter.</param>
             <returns>IEnumerable{BankFeeds}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BankFeedsController.PutBankFeed">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutBankFeed</Endpoint_Name>
             <summary>
             This API method is used to UPDATE a bank feed.
             </summary>
             <returns>IEnumerable{BankFeeds}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BankFeedsController.BatchChange(BQECore.Model.BankFeedBatchAction)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchChange</Endpoint_Name>
             <summary>
             This API method is used to batch UPDATE bank feed transaction.
             </summary>
             <param name="bankFeed">Represents the bank feed parameter.</param>
             <returns>BQEResource.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.BenefitController">
            <API>
            <API_Name>Benefit</API_Name>
            <API_Description>
            Allows you to retrieve a specific or a list of benefit entries
            Allows you to create benefit entry
            Allows you to update benefit model
            Allows you to delete benefit model
             </API_Description>
             <summary>
             BenefitController Inherits ApiController
             This class Controls all API Calls for Benefit
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.BenefitController.GetBenefit(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetBenefit</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific benefit entry. We pass Benefit_id as parameter in the request body.
             </summary>
             <param name="id">The parameter passed is Benefit_id</param>
             <returns>Benefit.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BenefitController.Benefits(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>Benefits</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE list of benefits. We pass BQE parameters in the request header as parameters.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>IEnumerable{Benefit}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BenefitController.PostBenefit(BQECore.Model.Benefit)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostBenefit</Endpoint_Name>
             <summary>
             This API method is used to CREATE new benefit entry. It takes Benefit Model as parameter
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>Benefit.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BenefitController.PutBenefit">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutBenefit</Endpoint_Name>
             <summary>
              This API method is used to UPDATE benefit model.
             </summary>
             <returns>Benefit.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BenefitController.DeleteBenefit(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteBenefit</Endpoint_Name>
             <summary>
              This API method is used to DELETE a specific benefit model. We pass id as parameter.
             </summary>
             <param name="id">Represents the identifier passed in parameter.</param>
             <returns>System.Int32.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BenefitController.DeleteBenefits(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteBenefits</Endpoint_Name>
             <summary>
              This API method is used to DELETE a list of benefit models. We pass ids as parameters.
             </summary>
             <param name="ids">Represents the identifiers passed in parameters.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BenefitController.BatchDeleteBenefit(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDelete</Endpoint_Name>
             <summary>
              This API method is used to batch DELETE benefit models. We pass ids as parameters.
             </summary>
             <param name="ids">represents the identifers.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.BudgetController">
            <API>
            <API_Name>Budget</API_Name>
            <API_Description>
            Budgets are used to define cost and revenue benchmarks in a company. 
            Budgets are a good way to track the expected revenue or cost of a project against the actual.
            Unlike estimates, budgets are meant to be used internally by a firm.
            Allows you to retrieve budget compact list
            Allows you to retrieve service and expense details of a budget
            Allows you to retrieve if a budget is in use or not
            Allows you to create a budget model
            Allows you to update a budget model
            Allows you to delete a specific or a list of budgets
            Allows you to perform operations on budget service line and budget expense line items
             </API_Description>
             <summary>
             BudgetController Inherits ApiController
             This class Controls all API Calls for Budget
             Module.
             </summary>
             </API>
             <seealso>
                 <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.Budget}</cref>
             </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.BudgetController.Module">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>Module</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE module.
             </summary>
             <value>The module.</value>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BQECore.Api.Controllers.BudgetController"/> class.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.BudgetCompact(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>BudgetCompact</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all or filtered budget compact list.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>List of budget objects with filtered columns</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.GetBudgetCompact(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetBudgetCompact</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all or filtered budget compact list based on Employee ID.
             </summary>
             <param name="id">Employee ID represents the unique identifier passed in parameter.</param>
             <returns>List of Budget Compact</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.BudgetList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>BudgetList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all or filtered budget with properties as in budget list model
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>List of budget list objects</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.Budgets(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>Budgets</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all or filtered budgets.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>List of budget objects</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.GetBudget(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetBudget</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE budget object based on ID. We pass BudgetID as parameter.
             </summary>
             <param name="id">Represents the BudgetID passed in parameter</param>
             <returns>Budget</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.GetCumulativeBudget(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetCumulativeBudget</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a cumulative budget for main projects
             </summary>
             <param name="project_ID">Represents the parameter passed</param>
             <returns></returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.BudgetServiceDetails(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>BudgetServiceDetails</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE service details of a budget. We pass BQE parameters in the request header as parameter.
             </summary>
             <param name="parameters">Represents BQEParameters passed</param>
             <returns>IEnumerable{BudgetActivity}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.CumulativeBudgetServiceDetails(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE cumulative service details of a budget.
             </summary>
             <param name="parameters">Represents the parameter passed</param>
             <returns></returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.BudgetExpenseDetails(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>BudgetExpenseDetails</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE expense details of a budget. We pass BQE parameters in the request header as parameter.
             </summary>
             <param name="parameters">Represents BQEParameters passed</param>
             <returns>IEnumerable{BudgetExpense}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.CumulativeBudgetExpenseDetails(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name> CumulativeBudgetExpenseDetails</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE cumulative expense details of a budget.
             </summary>
             <param name="parameters">Represents the parameter passed</param>
             <returns></returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.GetIsBudgetInUse(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetIsBudgetInUse</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE if a budget is in use. We pass Budget_ID as parameter
             </summary>
             <param name="id">Represents the Budget_ID passed as parameter</param>
             <returns>true if in use</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.PostBudget(BQECore.Model.Budget,System.Guid)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostBudget</Endpoint_Name>
             <summary>
             This API method is used to CREATE budget model. We pass BudgetModel and Budget_ID as parameters.
             </summary>
             <param name="value">Represents budget model parameter</param>
             <param name="id">Represents budget_ID passed as parameter</param>
             <returns>Budget.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.PutBudget">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutBudget</Endpoint_Name>
             <summary>
             This API method is used to UPDATE budget model.
             </summary>
             <returns>Budget.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.DeleteBudget(System.Guid,System.String)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteBudget</Endpoint_Name>
             <summary>
             This API method is used to DELETE budget.
             </summary>
             <param name="budgetID">The budget identifier.</param>
             <param name="model">The model.</param>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.DeleteBudgets(System.Guid[],System.String)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteBudgets</Endpoint_Name>
             <summary>
              This API method is used to DELETE a list of budgets. We pass ids and model as paramter.
             </summary>
             <param name="ids">Represents the Unique identifiers passed in the parameters.</param>
             <param name="model">Represents the model in the parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.BatchDeleteBudget(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteBudget</Endpoint_Name>
             <summary>
             This API method is used to DELETE budget in a batch. We pass ids as parameters.
             </summary>
             <param name="ids">Represents the unique identifiers.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.BudgetFromEstimate(BQECore.Model.MergeArgs)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>BudgetFromEstimate</Endpoint_Name>
             <summary>
             This API method is used to CREATE budget from estimate.
             </summary>
             <param name="args">Represents the arguments passed in the parameter.</param>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.GetBudgetSummary(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetBudgetSummary</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE budget summary object. We pass Budget_ID as parameter.
             </summary>
             <param name="budget_ID">Represents the unique budget identifier.</param>
             <returns>BudgetSummary</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.GetBudgetServiceItem(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetBudgetServiceItem</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a budget activity object. Budget activity objects are the services added in a budget. We pass BudgetID as parameter.
             </summary>
             <param name="id">Represents the BudgetID passed in parameter</param>
             <returns>BudgetActivity</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.PostBudgetServiceItem(BQECore.Model.BudgetActivity)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostBudgetServiceItem</Endpoint_Name>
             <summary>
             This API method is used to CREATE budget activity line item model.
             </summary>
             <param name="value">Represents the value passed in the parameter.</param>
             <returns>BudgetActivity.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.PutBudgetServiceItem">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutBudgetServiceItem</Endpoint_Name>
             <summary>
             This API method is used to UPDATE budget activity line item model.
             </summary>
             <returns>BudgetActivity.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.DeleteBudgetServiceItem(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteBudgetServiceItem</Endpoint_Name>
             <summary>
             This API method is used to DELETE budget service line item
             </summary>
             <param name="id">Represents the identifier passed in parameters.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.DeleteBudgetServiceItem(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteBudgetServiceItem</Endpoint_Name>
             <summary>
              This API method is used to DELETE a list of  budget service line items. We pass ids as parameter
             </summary>
             <param name="ids">Represents the identifiers.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.BatchDeleteBudgetActivity(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteActivity</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE budget activity. We pass ids as parameter
             </summary>
             <param name="ids">Represents the identifiers passed.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.GetBudgetExpenseItem(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetBudgetExpenseItem</Endpoint_Name>
             <summary>
             This API method is use to RETRIEVE a budget expense object.We pass id as parameter.
             </summary>
             <param name="id">Represents the BudgetID passed in parameter.</param>
             <returns>BudgetExpense</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.PostBudgetExpenseItem(BQECore.Model.BudgetExpense)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostBudgetExpenseItem</Endpoint_Name>
             <summary>
              This API method is used to CREATE budget expense line item model.
             </summary>
             <param name="value">Represents the value passed in parameter.</param>
             <returns>BudgetExpense.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.PutBudgetExpenseItem">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutBudgetExpenseItem</Endpoint_Name>
             <summary>
              This API method is used to UPDATE budget expense line item model.
             </summary>
             <returns>BudgetExpense.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.DeleteBudgetExpenseItem(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteBudgetExpenseItem</Endpoint_Name>
             <summary>
             This API method is used to DELETE a specific budget expense line item. We pass id as parameter.
             </summary>
             <param name="id">Represents the identifier passed.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.DeleteBudgetExpenseItem(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteBudgetExpenseItem</Endpoint_Name>
             <summary>
             This API method is used to DELETE a list of  budget expense line items. We pass ids as parameter.
             </summary>
             <param name="ids">Represents the identifiers passed as parameters.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.BatchDeleteBudgetExpenseItem(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name> BatchDeleteBudgetExpenseItem</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE budget expense item. We pass ids as parameter.
             </summary>
             <param name="ids">Represents the identifiers passed as parameters.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.BudgetAssignedVendors(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>BudgetAssignedVendors</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE budgeted employees or vendors for a particular budget/estimate.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>IEnumerable&lt;VendorCompact&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.BudgetAssignedClients(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>BudgetAssignedClients</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE  list of clients having a specific budget/estimate assigned.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>IEnumerable&lt;ClientCompact&gt;.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.ClientAssignedBudgets(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a list of budgets assigned to a specific client. We pass Client_ID as parameter
             </summary>
             <param name="Client_ID">Represents the client identifier.</param>
             <returns>IEnumerable&lt;BudgetCompact&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.ProjectAssignedBudgets(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This Method is used to return the budgets assigned to a project.
             </summary>
             <param name="id">Project_ID</param>
             <returns>IEnumerable&lt;BudgetCompact&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.ProjectAssignedBudgets(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>ProjectAssignedBudgets</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE budgets assigned to a project.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>IEnumerable&lt;BudgetCompact&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.UpdateDefaults(BQECore.Model.BudgetActivity,System.Boolean)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>UpdateDefaults[Activity]</Endpoint_Name>
             <summary>
             This API method is used to UPDATE budget activity with default rates and properties. We pass budgetActivity and ratesFromActivity as parameters
             </summary>
             <param name="budgetActivity">BudgetActivity model to be updated represents the first parameter passed.</param>
             <param name="ratesFromActivity">represents the second parameter passed, if set to <c>true</c> [rates from activity].</param>
             <returns>BudgetActivity.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.UpdateDefaults(BQECore.Model.BudgetExpense)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>UpdateDefaults[Expense]</Endpoint_Name>
             <summary>
              This API method is used to UPDATE budget expense with default rates and properties. We pass budgetExpense as parameter.
             </summary>
             <param name="budgetExpense">Represents the BudgetExpense model to be updated.</param>
             <returns>BudgetExpense.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.EmailBudgetEstimate(BQECore.Model.BatchReportEmail,System.Boolean)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>EmailBudgetEstimate</Endpoint_Name>
             <summary>
              This API method is used CREATE an email of budget/estimate report to be sent to the client.
             </summary>
             <param name="batchReportEmail">Represents the batch report email</param>
             <param name="isBudget">Represents a boolean value</param>
             </Endpoint>
             <returns></returns>
        </member>
        <member name="M:BQECore.Api.Controllers.BudgetController.GetBudgetEmailReport(System.Guid,ModuleNames)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetBudgetEmailReport</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE object containing budget report along with email properties.
             </summary>
             <param name="Budget_ID">Represents the budget identifier passed as parameter..</param>
             <returns>EmailReport.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.BillingReviewController">
            <API>
            <API_Name>Billing Review</API_Name>
            <API_Description>
            Managing accounts receivable is one of the most important function of Core.
            All projects with billable time and expenses, or that are set up for recurring billing, eventually need to be billed to the clients.
            <ul>
			<li>Allows you to retrieve a specific or  a list of bills for time and expense entry</li>
            <li>Allows you to update billing review model</li>
            <li>Allows you to update billing review object</li>
            <li>Allows you to update billing review model</li>
            <li>Allows you to retrieve data in .csv format</li>
             </ul>
			 </API_Description>
             <summary>
             BillingReviewController Inherits ApiController
             This class Controls all API Calls for BillingReview
             Module.
             </summary>
             </API>
             <seealso>
                 <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.BillingReview}</cref>
             </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.BillingReviewController.Module">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>Module</Endpoint_Name>
             <summary>
             This API method is used to RETRIVE a module.
             </summary>
             <value>The module.</value>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingReviewController.BillingReviews(BQECore.Model.BillingReviewParameter)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>BillingReviews</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE bill for time or expense entries based on filter condition.
             We pass BQE parameters in the request body as parameters.       
             </summary>
             <param name="bqeParameters">Represents the parameters passed.</param>
             <returns>BillingReview List</returns>
             </Endpoint>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.BillingReviewController.GetBillingReviewItem(BQECore.Model.BillingReviewParameter)" -->
        <member name="M:BQECore.Api.Controllers.BillingReviewController.AddProjectInBillingReview(BQECore.Model.BillingReviewParameter)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>AddProjectInBillingReview</Endpoint_Name>
             <summary>
              This API method is used to CREATE additional project in billing review based on filter condition.
             </summary>
             <param name="bqeParameters">Represents the parameters passed.</param>
             <returns>BillingReview List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingReviewController.PostBillingReview(System.Collections.Generic.List{BQECore.Model.BillingReview})">
             POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostBillingReview</Endpoint_Name>
             <summary>
             This API method is used to CREATE billing review model. It takes BillingReview Model as parameter
             </summary>
             <param name="value">Represents the value passed in parameter.</param>
             <returns>ICollection{BillingReview}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingReviewController.PutBillingReviews(System.Collections.Generic.List{BQECore.Model.BillingReview})">
             POST api/values
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutBillingReviews</Endpoint_Name>
             <summary>
              This API method is used to UPDATE a list of billing reviews. It takes a list of BillingReviews Model as parameter
             </summary>
             <param name="value">Represents the list of billing reviews passed in parameter.</param>
             <returns>ICollection{BillingReview}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingReviewController.PutEditedBillingReview(BQECore.Model.BillingReview,System.Boolean)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEditedBillingReview</Endpoint_Name>
             <summary>
             This API method isused to UPDATE billing review object
             </summary>
             <param name="br">The first parameter represents the model of billing review</param>
             <param name="autoApplyRetainer">The second parameter if set to <c>true</c> [automatic apply retainer].</param>
             <returns>BillingReview.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingReviewController.PutBillingReviews(System.Collections.Generic.List{BQECore.Model.BillingReview},System.Guid,System.Boolean)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutBillingReviews</Endpoint_Name>
             <summary>
             This API method is used to UPDATE list of related billing reviews, if a field is changed.
             </summary>
             <param name="billingReviews">The first parameters represents the billing reviews.</param>
             <param name="projectId">The second parameter represents the project identifier.</param>
             <param name="autoApplyRetainer">The third parameter if set to <c>true</c> [automatic apply retainer].</param>
             <returns>IEnumerable&lt;BillingReview&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingReviewController.PutInterimBillingReview(BQECore.Model.BillingReview)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutInterimBillingReview</Endpoint_Name>
             <summary>
             This API method is used to UPDATE billing review object on time and expense update.
             </summary>
             <param name="br">Represents the model of billing review</param>
             <returns>BillingReview.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingReviewController.BillingReviewSummaryInfo(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>BilingReviewSummaryInfo</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE billing review summary information.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>SummaryInfoBillingReview.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingReviewController.ExportToCsv(BQECore.Model.BillingReviewParameter)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>ExportToCsv</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE data in CSV format. Csv is a simple format used to store tabular data, such as spreadsheet or database.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>IEnumerable&lt;System.Object&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingReviewController.UpdateTimeEntries(BQECore.Model.TimeEntryBatchUpdate)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>UpdateTimeEntries</Endpoint_Name>
             <summary>
              This API method is used to UPDATE the write up or write down multiplier of time entries from billing review.
             </summary>
             <param name="value">Represents the value passed in parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.BillingReviewController.TimeEntries(BQECore.Model.BQEParameters)" -->
        <member name="M:BQECore.Api.Controllers.BillingReviewController.ExpenseLogs(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>ExpenseLogs</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a list of expense log entries.
             </summary>
             <param name="parameters">The parameters represents the request parameters.</param>
             <returns>list of ExpenseLog entries matching the FilterCondition</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingReviewController.PutTimeEntry">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutTimeEntry</Endpoint_Name>
             <summary>
             This API method is used to UPDATE time entry.
             </summary>
             <returns>Updated TimeEntry.</returns>
             </Endpoint>
             <exception cref="T:System.Web.Http.HttpResponseException"></exception>
             <exception cref="T:System.Net.Http.HttpResponseMessage"></exception>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingReviewController.PutExpenseLog">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutExpenseLog</Endpoint_Name>
             <summary>
             This API method is used to UPDATE expense log.
             </summary>
             <returns>The updated ExpenseLog model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingReviewController.BatchUpdateTimeEntries(BQECore.Model.TimeEntryBatchUpdate)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchUpdateTimeEntries</Endpoint_Name>
             <summary>
             This API method is used to do batch UPDATE on activities
             </summary>
             <param name="value">of type BatchChange containing fields to batch update</param>
             <returns>BQEResource.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingReviewController.BatchUpdateExpenseLogs(BQECore.Model.ExpenseLogBatchUpdate)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchUpdateExpenseLog</Endpoint_Name>
             <summary>
             This API method is used to do batch UPDATE on expense logs.
             </summary>
             <param name="batchUpdate">Represents the batch update.</param>
             <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.BillingScheduleController">
            <API>
            <API_Name>Billing Schedule</API_Name>
            <API_Description>
            Billing Schedule allows you to define and schedule expected billings for a project over its life or just the initial period.
            You might do so for projects with milestone billing
            Allows you to retrieve a specific billing schedule
            Allows you to retrieve a specific or a list of billing schedule details
            Allows you to update billing schedule model
            Allows yout to delete a specific or a list of billing schedule model
            </API_Description>
             <summary>
             Class BillingScheduleController.
             </summary>
             </API>
             <seealso>
                 <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.BillingSchedule}</cref>
             </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.BillingScheduleController.Module">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>Module</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE the module.
             </summary>
             <value>The module.</value>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingScheduleController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BQECore.Api.Controllers.BillingScheduleController"/> class.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingScheduleController.GetBillingSchedule(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetBillingSchedule</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific billing schedule. We pass BillingScheduleDetail id as parameter.
             </summary>
             <param name="id">Represents the BillingScheduleDetail id passed as parameter of type GUID</param>
             <returns>BillingScheduleDetail Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingScheduleController.BillingSchedules(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>BillingSchedules</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE a list of filtered billing schedule details. We pass BQE parameters in the request header.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>BillingScheduleDetail List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingScheduleController.BillingScheduleCompact(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>BillingScheduleCompact</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE filtered list of billing schedule details.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>BillingScheduleDetail List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingScheduleController.GetProjectBillingSchedules(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetProjectBillingsSchedules</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE billing schedule details of a specific Project. We pass the id of the project as parameter.
             </summary>
             <param name="id">Project id represents the parameter passed of type GUID</param>
             <returns>BillingScheduleDetail List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingScheduleController.PostBillingSchedule(BQECore.Model.BillingSchedule)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostBillingSchedule</Endpoint_Name>
             <summary>
              This API method is used to CREATE new billing schedule.
             </summary>
             <param name="value">Represents the object parameter of type billing schedule</param>
             <returns>BillingScheduleDetail.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingScheduleController.PutBillingSchedule">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutBillingSchedule</Endpoint_Name>
             <summary>
             This API method is used to UPDATE billing schedule model.
             </summary>
             <returns>BillingScheduleDetail.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingScheduleController.DeleteBillingSchedule(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteBillingSchedule</Endpoint_Name>
             <summary>
             This API method is used to DELETE a specific billing schedule model. We pass id as parameter.
             </summary>
             <param name="id">Represents the unique identifier passed as parameter..</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingScheduleController.DeleteBillingSchedule(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteBillingScheduleList</Endpoint_Name>
             <summary>
             This API method is used to DELETE a list of billing schedule model. We pass ids as parameter.
             </summary>
             <param name="ids">Represents the identifiers passed as parameters.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingScheduleController.BatchDeleteBillingSchedule(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteBillingSchedule</Endpoint_Name>
             <summary>
              This API method is used to batch DELETE billing schedule. We pass ids as parameter.
             </summary>
             <param name="ids">Represents the identifiers passed as parameters.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingScheduleController.ProcessedBillingScheduleLine(BQECore.Model.BillingScheduleAPIHelper)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>ProcessedBillingScheduleLine</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE processed billing schedule line.
             Calculations are done on changing a particular field value of the Object and returned back.
             </summary>
             <param name="value">Represents billing sSchedule detail object to be processed</param>
             <returns>Processed BillingScheduleDetail Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingScheduleController.PutBillingScheduleLineItemOrder(System.Guid,EnumUpDown)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutBillingScheduleLineItemOrder</Endpoint_Name>
             <summary>
              This API method is used to UPDATE priority number of line item. We pass BillingSchedule_ID or BillingScheduleID as parameter.
             </summary>
             <param name="billingScheduleDetailID">Represents the billing schedule detail identifier.</param>
             <param name="upDown">Represents the order Up down.</param>
             <returns>ResponseCode.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingScheduleController.GetBillingScheduleDetailSummary(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetBillingScheduleDetailSummary</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE summary of billing schedule details. We pass projectID as parameter.
             </summary>
             <param name="projectID">Represents the project identifier passed as parameter.</param>
             <returns>BillingScheduleDetailSummary Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillingScheduleController.GetTotalBillingScheduleLines">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetTotalBillingScheduleLines</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE total number of billing schedule lines.
             </summary>
             <returns>Count of BillingSchedule Lines</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.CheckController">
            <API>
            <API_Name>Check</API_Name>
            <API_Description>
            Core allows you to write checks and make payments to clients, employees and vendors.
            When you write checks, Core automatically posts that amount in the Expense Entries screen.
            These expenses can be marked up and then billed to the clients.
            Allows you to create a check object
            Allows you to retrieve a specific or a list of checks
            Allows you to retrieve next available check number
            Allows you to create check model
            Allows you to update check model
            Allows you to void or unvoid a check
            Allows you to delete a specific or a list of checks
             </API_Description>
             <summary>
             CheckController Inherits ApiController
             This class Controls all API Calls for Check
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.NewCheckFromReimbursables(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>NewCheckFromReimbursables</Endpoint_Name>
             <summary>
             This API method is used to CREATE a new check object. We pass BQE parameters 
             </summary>
             <param name="parameters">Represents the parameters passed in the request.</param>
             <returns>Check.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.Checks(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>Checks</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE list of checks in this collection.
             </summary>
             <param name="parameters">Represents options for controlling the operation.</param>
             <returns>An enumerator that allows foreach to be used to process the checks in this collection.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.GetPrintChecks(BQECore.Model.PrintCheckParameter)">
            <Endpoint>
            <Verb></Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE a list of checks for printing in this collection.
             </summary>
             <param name="parameters">Represents print check parameter</param>
             <returns>An enumerator that allows for each to be used to process the checks in this collection.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.GetCheck(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetChecks</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific check.
             </summary>
             <param name="id">Represents the unique identifier.</param>
             <returns>The check.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.GetAvailableCheckNumber(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAvailableCheckNumber</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE next available check number.
             </summary>
             <param name="id">Represents the unique identifier.</param>
             <returns>The available check number.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.PostCheck(BQECore.Model.Check)">
             POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostCheck</Endpoint_Name>
             <summary>
             This API method is used to CREATE a check model. It takes Check Model as parameter
             </summary>
             <param name="value">Represents the value passed in the parameter.</param>
             <returns>Check.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.PutCheck">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutCheck</Endpoint_Name>
             <summary>
             This API method is used to UPDATE check model.
             </summary>
             <returns>Check.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.DeleteCheck(System.Guid,System.String)">
            <Endpoint>
            <Verb></Verb>
            <Endpoint_Name>DeleteCheck</Endpoint_Name>
             <summary>
             This API method is used to DELETE a check.
             </summary>
             <param name="id">Represents the unique identifier.</param>
             <param name="model">Represents the UserInteraction Model.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.BatchDeleteChecks(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteChecks</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE checks
             </summary>
             <param name="ids">Represents The unique identifiers passed.</param>t
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.DeleteChecks(System.Guid[],System.String)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteChecks</Endpoint_Name>
             <summary>
             This API method is used to DELETE a list of checks
             </summary>
             <param name="ids">Represents the unique identifiers.</param>
             <param name="model">Represents the model.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.UpdateDefaults(BQECore.Model.Check)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>UpdateDefaults</Endpoint_Name>
             <summary>
             This API method id used to UPDATE the check line items with default rates and accounts.
             </summary>
             <param name="check">Represents the check model to be updated.</param>
             <returns>Check.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.VoidCheck(System.Guid,System.String)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>VoidCheck</Endpoint_Name>
             <summary>
             This API method is used to void a particular check.
             </summary>
             <param name="id">Represents the unique identifier.</param>
             <param name="model">Represents the model.</param>
             <returns>Check.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.VoidChecks(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Verb>PUT</Verb>
            <Endpoint_Name>VoidChecks</Endpoint_Name>
             <summary>
             This API method is used to DELETE checks in a batch.
             </summary>
             <param name="batchDelete">Represents the batch delete parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.UnVoidCheck(System.Guid)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>UnVoidCheck</Endpoint_Name>
             <summary>
             This API method id used to unvoid a particular check.
             </summary>
             <param name="id">Represents the unique identifier.</param>
             <returns>Check.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.BatchUnvoidChecks(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchUnvoidChecks</Endpoint_Name>
             <summary>
             This API method is used to unvoid checks in a batch. 
             </summary>
             <param name="batchDelete">The batch delete.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.UpdateCheckNumbers(System.Collections.Generic.List{BQECore.Model.AssignCheckNumber})">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>UpdateCheckNumbers</Endpoint_Name>
             <summary>
             This API method is used to UPDATE check numbers for given checks.
             </summary>
             <param name="checkNumbers">Represents the check numbers.</param>
             <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.BatchUpdateChecksNumber(System.Collections.Generic.List{BQECore.Model.CheckBatchUpdate})">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>BatchUpdateChecksNumber</Endpoint_Name>
             <summary>
             This API method is used to UPDATE check numbers for given checks  in a batch.
             </summary>
             <param name="batchUpdate">Represents the batch update.</param>
             <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.SaveCheckTemplate(BQECore.Model.CheckTemplate)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>SaveCheckTemplate</Endpoint_Name>
             <summary>
             This API method is used to CREATE a new check template object.
             </summary>
             <param name="checkTemplate">Represents check template</param>
             <returns>Integer</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.UpdateCheckTemplate(BQECore.Model.CheckTemplate)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>UpdateCheckTemplate</Endpoint_Name>
             <summary>
             This API method is used to UPDATE the check template.
             </summary>
             <param name="checkTemplate">Represents the check template</param>
             <returns>Integer</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.DeleteCheckTemplate(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API method is used to DELETE the check template. We pass CheckTemplate_ID as parameter.
             </summary>
             <param name="CheckTemplate_ID">CheckTemplate_ID</param>
             <returns>Integer</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.GetCheckTemplate(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetCheckTemplate</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific check template. We pass CheckTemplate_ID as parameter.
             </summary>
             <param name="CheckTemplate_ID">CheckTemplate_ID</param>
             <returns>CheckTemplate Object</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CheckController.GetCheckTemplates(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>GetCheckTemplates</Endpoint_Name>
             <summary>
             This API method is used to RETREIEV  list of check templates.
             </summary>
             <param name="parameters">Represents the parameters passed </param>
             <returns>List of CheckTemplates</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.AccountController">
            <API>
            <API_Name>Account</API_Name>
            <API_Description>
            Allows you to retrieve a single or a list of accounts
            Allows you to create account model
            Allows you to update account model
            Allows you to delete account model
             </API_Description>
             <summary>
             AccountListController Inherits ApiController
             This class Controls all API Calls for AccountList
             Module.
             </summary>
             </API>
             <seealso cref="T:BQECore.Api.Controllers.ApiHelperController" />
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.Fill">
            <Endpoint>
            <Verb>Get</Verb>
            <Endpoint_Name>Get Fill</Endpoint_Name>   
             <summary>
             This API method id used to fills this instance.
             </summary>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.GetAccount(System.Guid)">
            <Endpoint>
            <verb>GET</verb>
            <Endpoint_Name>Account</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific account. We pass Account_ID as parameter.
             </summary>
             <param name="id">It takes Account_ID as parameter .</param>
             <returns>Account Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.GetAccountListByAccountTypeName(System.String)">
            <Endpoint>
            <verb>GET</verb>
            <Endpoint_Name>GetAccountListbyAccountType</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a list of  accounts based on certain type. We pass id as parameter, where 'id' represents AccountTypeName.
             </summary>
             <param name="id">It takes AccountTypeName as parameter</param>
             <returns>List of Accounts</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.Accounts(BQECore.Model.BQEParameters)">
            <Endpoint>
            <verb>GET</verb>
            <verb>POST</verb>
            <Endpoint_Name>Accounts</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE accounts. We can also use this method post all or filtered accounts based on filters. We pass BQE parameters as parameter in the request header.
             </summary>
             <param name="parameters">It takes BQEParameters as Parameter.</param>
             <returns>IEnumerable{AccountList}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.BalanceSheetAccountList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <verb>POST</verb>
            <Endpoint_Name>BalanceSheetAccountList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE accounts used in fund transfer based on filters. We pass BQE parameters as parameter in the request body.
             </summary>
             <param name="parameters">It takes BQEParameters as Parameter.</param>
             <returns>IEnumerable{AccountList}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.GetAccountCompact(BQECore.Model.BQEParameters)">
            <Endpoint>
            <verb>POST</verb>
            <Endpoint_Name>GetAccountCompact</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE accounts for drop-down. We pass BQE parameters as parameter in the request body.
             </summary>
             <param name="parameters">It takes BQEParameters as Parameter.</param>
             <returns>IEnumerable{AccountListForDropdown}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.GetAccountCompactWithoutHierarchy(BQECore.Model.BQEParameters)">
            <Endpoint>
            <verb>POST</verb>
            <Endpoint_Name>GetAccountCompactWithoutHierarchy</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE account compact list without hierarchy . We pass BQE parameters as parameter in the request body.
             </summary>
             <param name="parameters">It takes BQEParameters as Parameter.</param>
             <returns>IEnumerable&lt;AccountCompact&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.AccountCompactWithoutUndepositedAccounts(BQECore.Model.BQEParameters)">
            <Endpoint>
            <verb>POST</verb>
            <Endpoint_Name>AccountCompactWithoutUndepositedAccounts</Endpoint_Name>       
             <summary>
             This API method is used to RETRIEVE accounts for drop-down  without undeposited accounts. We pass BQE parameters as parameters in the request body.
             </summary>
             <param name="parameters">It takes BQEParameters as Parameter.</param>
             <returns>IEnumerable{AccountListForDropdown}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.AccountListHierarchyView(BQECore.Model.BQEParameters)">
            <Endpoint>
            <verb>POST</verb>
            <Endpoint_Name>AccountListHierarchyView</Endpoint_Name>    
             <summary>
             This API method is used to RETRIEVE all accounts or filtered accounts based on filters in hierarchical view. It takes BQE parameters in the request body.
             </summary>
             <param name="parameters">It takes BQEParameters as Parameter.</param>
             <returns>IEnumerable{AccountList}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.PostAccountList(BQECore.Model.Account)">
             POST API/values
            <Endpoint>
            <verb>POST</verb>
            <Endpoint_Name>PostAccountList</Endpoint_Name>      
             <summary>
             This API method is used to CREATE account list model. It takes AccountList Model as parameter
             </summary>
             <param name="value">It takes Account Object as parameter </param>
             <returns>AccountList.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.BatchUpdateAccount(BQECore.Model.AccountBatchUpdate)">
            <Endpoint>
            <verb>PUT</verb>
            <Endpoint_Name>BatchUpdateAccount</Endpoint_Name>
             <summary>
             This API method is used to batch UPDATE accounts. It takes batchUpdate as parameter.
             </summary>
             <param name="batchUpdate">It takes batchUpdate as parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.PutAccountList">
             PUT API
            <Endpoint>
            <verb>PUT</verb>
            <Endpoint_Name>PutAccountList</Endpoint_Name>
             <summary>
             This API method is used to UPDATE account list .
             </summary>
             <returns>AccountList.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.DeleteAccountLists(System.Guid[])">
            <Endpoint>
            <verb>DELETE</verb>
            <Endpoint_Name>DeleteAccountLists</Endpoint_Name>
             <summary>
             This API method is used to DELETE  account lists. It takes an array of AccountList_ID as parameter.
             </summary>
             <param name="ids">It takes array of AccountList_ID as parameter</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.BatchDeleteAccounts(BQECore.Model.BatchDelete)">
            <Endpoint>
            <verb>PUT</verb>
            <Endpoint_Name>BatchDeleteAccounts</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE list of accounts. 
             </summary>
             <param name="ids">It takes BatchDelete as parameter</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.DeleteAccountList(System.Guid)">
            <Endpoint>
            <verb>DELETE</verb>
            <Endpoint_Name>DeleteAccountList</Endpoint_Name>
             <summary>
             This API method is used to DELETE account list entry.  We pass AccountList_ID as parameter.
             </summary>
             <param name="id">It takes AccountList_ID as parameter</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.GetAccountTypeList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <verb>GET</verb>
            <verb>POST</verb>
            <Endpoint_Name>GetAccountTypeList</Endpoint_Name>
            <method>Get</method>
            <API></API>
             <summary>
             This API method is used to RETRIEVE account type list. We post BQE parameters as parameter in the request header to get the list.
             </summary>
             <param name="parameters">It takes BQEParameters as Parameter.</param>
             <returns>AccountTypeList</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.GetAccountType(System.Guid)">
            <Endpoint>
            <verb>GET</verb>
            <Endpoint_Name>GetAccountType</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE an account type object. We pass accountType_ID as parameter.
             </summary>
             <param name="id">It takes accountType_ID as parameter</param>
             <returns>AccountTypeList</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.Balance(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>Balance</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE balance for a specific parameter. We pass BQE parameters as parameter in the request header.
             </summary>
             <param name="param">It takes BQEParameters as parameter.</param>
             <returns>Decimal.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.AccountSummary(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>AccountSummary</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE account summary model. We pass BQE parameters as parameter in the request header.
             </summary>
             <param name="param">It takes BQEParameters as Parameter</param>
             <returns>AccountSummary</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.MergerAccount(BQECore.Model.MergeArgs)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>MergerAccount</Endpoint_Name>
             <summary>
             MergerAccount: This API method merges one account into another.
             </summary>
             <param name="args">It takes MergeArgs as parameter.</param>
             <returns>Boolean.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountController.RebuildAccounting(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>RebuildAccounting</Endpoint_Name>
             <summary>
             This API method is responsible for rebuild accounting. We pass BQE parameters as parameter in the request body.
             </summary>
             <param name="bqeparam">It takes BQEParameters as Parameter</param>
             <returns>RebuildAccountingResponse.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.AccountPoolListController">
            <API>
            <API_Name>Account Pool List</API_Name>
            <API_Descripiton>
            Allows you to retrieve a specific or a list of account pool
            Allows you to create account pool list model
            Allows you to update account pool list model
            Allows you to delete account pool list model
             </API_Descripiton>
             <summary>
             AccountPoolListController Inherits ApiController
             This class Controls all API Calls for AccountPoolList
             Module.
             </summary>
             </API>
             <seealso>
                 <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.AccountPoolListSecurity}</cref>
             </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountPoolListController.GetAccountPool(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAccountPool</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific account pool. We pass AccountPoolList_ID as parameter.
             </summary>
             <param name="id">It takes AccountPoolList_ID as parameter</param>
             <returns>AccountPoolList Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountPoolListController.AccountPoolList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>AccountPoolList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE account pool list. We pass BQE parameters as parameter in the request header.
             </summary>
             <param name="parameters">It takes BQEParameters as Parameter.</param>
             <returns>IEnumerable{AccountPoolList}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountPoolListController.PostAccountPoolList(BQECore.Model.AccountPool)">
             POST API/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostAccountPoolList</Endpoint_Name>
             <summary>
             This API method is used to CREATE account pool list model. It takes value as parameter
             </summary>
             <param name="value">It takes AccountPool as parameter </param>
             <returns>AccountPoolList.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountPoolListController.PutAccountPoolList">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutAccountPoolList</Endpoint_Name>
            <summary>
             This API method is used to UPDATE account pool list model.
             </summary>
             <returns>AccountPoolList.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountPoolListController.DeleteAccountPoolList(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteAccountPoolList</Endpoint_Name>
             <summary>
             This API Method is used to DELETE account pool list entry. We pass AccountPoolList_ID as parameter.
             </summary>
             <param name="id">It takes AccountPoolList_ID as parameter</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountPoolListController.DeleteAccountPoolLists(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteAccountPoolLists</Endpoint_Name>
             <summary>
             This API method is used to DELETE  account pool lists. We pass an array of AccountPoolList_ID as parameter.
             </summary>
             <param name="ids">It takes Array of AccountPoolList_ID as parameter</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountPoolListController.BatchDeleteAccountPoolLists(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteAccountPoolLists</Endpoint_Name>    
             <summary>
             This API method is used to batch DELETE account pool lists. We pass id as parameter
             </summary>
             <param name="ids">It takes BatchDelete as parameter</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountPoolListController.BatchChange(BQECore.Model.NoteCategoryBatchUpdate)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchChange</Endpoint_Name>
             <summary>
             This API method is used to do a batch UPDATE to account pools. 
             </summary>
             <param name="value">It takes NoteCategoryBatchUpdate as parameter </param>
             <returns>BQEResource.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AccountPoolListController.PutAccountPoolLineNumber(System.Guid,System.Int32)">
            <Endpoint></Endpoint>
            <Verb></Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             Updates the LineNumber of particular CostPool and updates below or above costpool LineNumber's.
             </summary>
             <param name="accountPoolID"></param>
             <param name="sortPosition"></param>
             <returns></returns>
        </member>
        <member name="T:BQECore.Api.Controllers.AddressController">
            <API>
            <API_Name>Address</API_Name>
            <API_Description>
            Allows you to retrieve address
            Allows you to create address model
            Allows you to update address model
            Allows you to delete communication
            </API_Description>
             <summary>
             AddressController Inherits ApiController
             This class Controls all API Calls for Activity
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.AddressController.GetAddress(System.Guid,ModuleNames)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAddress</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE address accociated with an entity. We pass Entity_ID as id and ModuleNames as id1 in parameters.
             </summary>
             <param name="id">It takes Entity_ID as  first parameter</param>
             <param name="id1">It takes ModuleNames as second parameter</param>
             <returns>IEnumerable{Address}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AddressController.GetDefaultAddress(System.Guid,ModuleNames)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>etDefaultAddress</Endpoint_Name>
            <summary>This API method is used to RETRIEVE default address. </summary>
            <param name="id">It takes id as parameter</param>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AddressController.GetAddressByType(System.Guid,ModuleNames,System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAddressByType</Endpoint_Name>
             <summary>
              This API is used to RETRIEVE address associated with an entity based on address type. We pass Entity_ID as id and ModuleNames as id1 in parameters.
             </summary>
             <param name="id">It takes Entity_ID as first parameter</param>
             <param name="id1">It takes ModuleNames as second parameter</param>
             <param name="addressType">It takes type of address e.g, Home, Office etc as third parameter</param>
             <returns>Address.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AddressController.PutEntityAddress(BQECore.Model.EntityAddress)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEntityAddress</Endpoint_Name>
             <summary>
             This API method is used to UPDATE  entity address.
             </summary>
             <param name="address">It takes EntityAddress as Parameter</param>
             <returns>IEnumerable&lt;Address&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AddressController.DeleteCommunication(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteCommunication</Endpoint_Name>
             <summary>
             This API method is used to DELETE a communication record. We pass Communication_ID as parameter.
             </summary>
             <param name="Communication_ID">It takes Communication_ID as Parameter</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AddressController.DeleteCommunications(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteCommunications</Endpoint_Name>
             <summary>
             This API method is used to DELETE  communications. We pass an array of Communication_ID as parameter.
             </summary>
             <param name="ids">It takes Array of Communication_ID as Parameter </param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AddressController.BatchDeleteCommunications(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb></Verb>
            <Endpoint_Name>atchDeleteCommunications</Endpoint_Name>    
             <summary>
             This API method is used to batch DELETE communications. We pass Ids as parameters.
             </summary>
             <param name="ids">It takes BatchDelete as Parameter </param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AddressController.PutCommunicationItemOrder(System.Guid,EnumUpDown)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutCommunicationItemOrder</Endpoint_Name>
             <summary>
             This API is used to UPDATE sort order number of line items. We pass Communication_ID and upDown as parameters.
             </summary>
             <param name="Communication_ID">It takes Communication_ID as  first Parameter</param>
             <param name="upDown">It takes EnumUpDown as second Parameter.</param>
             <returns>ResponseCode.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AddressController.PutCommunicationSortOrder(System.Guid,System.Int32)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutCommunicationSortOrder</Endpoint_Name>
             <summary>
             PutCommunicationSortOrder: This API method is used to UPDATE sort order of communication line items. We pass Communication_ID and SortPosition as parameters.
             </summary>
             <param name="Communication_ID">It takes Communication_ID as first  Parameter.</param>
             <param name="sortposition">It takes sortposition as second Parameter</param>
             <returns>Boolean.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.AgentController">
            <API>
            <API_Name>Agent</API_Name>
            <API_Description>
            Allows you to retrieve a specific or a list of monitor profiles
            Allows you to retrieve a specific agent or a list
            Allows you to create a monitor profile and an agent
            Allows you to delete a monitor profile
            Allows yopu to update a monitor profile
             </API_Description>
             <summary>
             AgentController Inherits ApiController
             This class Controls all API Calls for Agent
             Module.
             </summary>
            </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.GetProfile(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetProfile</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific monitor profile. We pass id as parameter.
             We pass MonitorProfile_ID as parameter
             </summary>
             <param name="id">Represents the identifier.</param>
             <returns>MonitorProfile Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.GetAgent(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAgent</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE an agent. We pass id as parameter.
             </summary>
             <param name="id">Represents the identifier.</param>
             <returns>Agent.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.Profiles(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>Profiles</Endpoint_Name>
            <method>Get</method>
            <API>Profiles List</API>
             <summary>
             This API method is used to RETRIEVE monitor profiles list.  We pass BQEParameters as parameter in the request header.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable of MonitorProfile Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.CompactList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>CompactList</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE agent list.  We pass BQEParameters as parameter in the request header.
             </summary>
             <param name="parameters">The parameters.</param>
             <returns>IEnumerable of Agent Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.DeleteMonitorProfiles(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteMonitorProfiles</Endpoint_Name>
             <summary>
             This API method is used to DELETE monitor profiles. We pass an array of Activity_ID as parameter.
             </summary>
             <param name="ids">Represents array of Activity_ID</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.DeleteMonitoringProfile(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteMonitoringProfile</Endpoint_Name>
             <summary>
             This API method is used to DELETE  monitoring profile. We pass id as parameter.
             </summary>
             <param name="id">Represents the identifier.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.PostProfile(BQECore.Model.MonitorProfile)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostProfile</Endpoint_Name>
             <summary>
              This API method is used to CREATE monitor profile model.  It takes MonitorProfile model as parameter
             </summary>
             <param name="value">Represents the value.</param>
             <returns>Agent.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.PostAgent(BQECore.Model.Agent)">
            <Endpoint></Endpoint>
            <Verb></Verb>
            <Endpoint_Name>PostAgent</Endpoint_Name>
             <summary>
              This API method is used to CREATE a new agent.
             </summary>
             <param name="agent">It takes agent as parameter</param>
             <returns>Agent.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.PutAgent(BQECore.Model.Agent)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutAgent</Endpoint_Name>
             <summary>
             This API method is used to UPDATE an agent.
             </summary>
             <param name="agent">Represents the agent.</param>
             <returns>Agent.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.PutProfile">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutProfile</Endpoint_Name>
             <summary>
              This API method is used to UPDATE monitor profile model.
             </summary>
             <returns>Agent.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.DeleteAgent(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteAgent</Endpoint_Name>
             <summary>
             This Api is used to delete MonitorProfile model
             </summary>
             <param name="id">The identifier.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.DeleteAgents(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteAgents</Endpoint_Name>
             <summary>
             This API is used for batch DELETE of MonitorProfiles
             </summary>
             <param name="ids">The ids.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.BatchDeleteAgents(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteAgents</Endpoint_Name>    
             <summary>
             This API method is used to batch DELETE agents. we pass ids as parameter.
             </summary>
             <param name="ids">Represents the identifiers.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.PostDuplicateMonitorProfile(System.Guid,System.String)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostDuplicateMonitorProfile</Endpoint_Name>
             <summary>
              This API method is used to duplicate existing monitoring profile. We pass MonitorProfile_ID and NewProfileName as parameter to CREATE duplicate monitor profile.
             </summary>
             <param name="MonitorProfile_ID">The first parameter represents the monitor profile identifier.</param>
             <param name="NewProfileName">The second parameter represents new name of the profile.</param>
             <returns>MonitorProfile.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.BeginTimeMonitoring(BQECore.Model.Setting.BasicEmailSettings)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>BeginTimeMonitoring</Endpoint_Name>
             <summary>
             This API method is used to start time monitoring.
             </summary>
             <param name="emailsetting">Represents the emailsetting parameter.</param>
             <returns>System.Int32.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.EnableTimeMonitoring">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>EnableTimeMonitoring</Endpoint_Name>
             <summary>
              This API method is used to enable time monitoring.
             </summary>
             <returns>System.Int32.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AgentController.DisableTimeMonitoring">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>DisableTimeMonitoring</Endpoint_Name>
             <summary>
              This API method is used to disable time monitoring.
             </summary>
             <returns>System.Int32.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.ClassController">
            <API>
            <API_Name>Class List</API_Name>
            <API_Description>
            Allows you to retrieve list of classes in the class list
            Allows you to retrieve a specific or a list of classes
            Allows you to create class entry
            Allows you to update class model
            Allows you to delete class model
             </API_Description>
             <summary>
             ActivityController Inherits ApiController
             This class Controls all API Calls for Activity
             Module.
             </summary>
             </API>
             <seealso>
                 <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.ClassList}</cref>
             </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.ClassController.Module">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>Module</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE the module.
             </summary>
             <value>The module.</value>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClassController.Classes(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>Classes</Endpoint_Name>
             <summary>
             This API method id used to RETRIEVE list of classes in the class list.
             </summary>
             <param name="parameters">Represents the parameters passed .</param>
             <returns>IEnumerable{ClassList}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClassController.ClassList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>ClassList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE class list's list.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>IEnumerable{ClassList}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClassController.GetClass(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetClass</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE particular class entry by sending ClassList_ID as parameter.
             </summary>
             <param name="id">Represents the ClassList_id passed as Guid</param>
             <returns>ClassList.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClassController.PostClass(BQECore.Model.ClassList)">
             POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostClass</Endpoint_Name>
             <summary>
             This API method is used to CREATE new class entry. It takes ClassList Model as parameter
             </summary>
             <param name="value">Rpresents the value passed.</param>
             <returns>ClassList.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClassController.PutClass">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutClass</Endpoint_Name>
             <summary>
             This API method is used to UPDATE class model
             </summary>
             <returns>ClassList.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClassController.PutBatchClassList(BQECore.Model.ClassCategoryBatchUpdate)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>PUT</Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API method id used to UPDATE the class list in a batch.
             </summary>
             <param name="batchUpdate">Represents the batch update.</param>
             <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClassController.DeleteClass(System.String)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteClass</Endpoint_Name>
             <summary>
             This API method is used to DELETE class model. We pass id as parameter.
             DELETE api/values/5
             </summary>
             <param name="id">The identifier.</param>
             <returns>System.Int32.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClassController.DeleteClasses(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteClasses</Endpoint_Name>
             <summary>
             This API method is used to DELETE a list of classes. We pass ids as parameter.
             </summary>
             <param name="ids">Represents the unique identifiers passed .</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClassController.BatchDeleteClasses(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteClasses</Endpoint_Name>
             <summary>
             This API method id used to DELETE classes in a batch. The parameter passed are ids.
             </summary>
             <param name="ids">Represents the unique identifiers passed .</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.DefaultsSetterController">
            <API>
            <API_Name>Default Setter</API_Name>
            <API_Description>
            Allows you to post the defaults
            Allows you to update custom label mask
             </API_Description>
             <summary>
             Class DefaultsSetterController.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.DefaultsSetterController.PostDefaults(BQECore.Model.DataObject)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostDefaults</Endpoint_Name>
             <summary>
             This API method is used to posts defaults.
             </summary>
             </Endpoint>
             <param name="dataobject">Represents the data object parameter.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.DefaultsSetterController.UpdateCustomLabelMasks(System.Collections.Generic.Dictionary{System.String,System.String})">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>UpdateCustomLabelMasks</Endpoint_Name>
             <summary>
             This API method is used to update custom label masks.
             </summary>
             </Endpoint>
             <param name="settings">Represents the settings parameter.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.DefaultsSetterController.PostDefaultsFromCoreMaster(BQECoreSharedLib.CoreMasterTable)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostDefaultsFromCoreMaster</Endpoint_Name>
             <summary>
             This API method is used to post defaults from core master.
             </summary>
             <param name="CoreMasterTable">Represents the core master table parameter.</param>
             <returns>CoreMasterCategoryEnum.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.FavouriteController">
            <summary>
            FavouriteController Inherits ApiController
            This class Controls all API Calls for Favourite
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.FavouriteController.GetFavourite(System.Guid)">
            <summary>
            GetFavourite : This API is used to get particular Favourite.
            We pass Favourite_ID  as parameter
            in for of Favourite List
            </summary>
            <param name="id">Favourite ID.</param>
            <returns>Favourite Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FavouriteController.GetFavouriteDetaillisListbyUserId(System.Guid)">
            <summary>
            Gets the favourite detaillis listby user identifier.
            </summary>
            <param name="userid">The userid.</param>
            <returns>List&lt;FavouriteDetail&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FavouriteController.GetFavouritebyUserId(System.Guid)">
            <summary>
            Gets the favouriteby user identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Favourite.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FavouriteController.PostFavourite(BQECore.Model.Favourite)">
            <summary>
            POST api/values
            This Api is used to save Favourite Model.
            it takes Favourite Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>Favourite.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FavouriteController.PutFavourite">
            <summary>
            PUT api/values/5
            This Api is used to update Favourite Model
            </summary>
            <returns>Favourite.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FavouriteController.DeleteFavourite(System.Guid)">
            <summary>
            This Api is used to delete Favourite model
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.FavouriteController.Favourites(BQECore.Model.BQEParameters)">
            <summary>
            This Api is used to get list of Favourites
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;Favourite&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FavouriteController.PutLineNumberSortOrder(System.Guid,System.Int32,System.Guid)">
            <summary>
            Puts the line number sort order.
            </summary>
            <param name="id">The identifier.</param>
            <param name="id1">The id1.</param>
            <param name="id2">The id2.</param>
            <returns>Favourite.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FavouriteController.DeleteFavouriteDetail(System.Guid)">
            <summary>
            Deletes the favourite detail.
            </summary>
            <param name="favouritedetail_id">The favouritedetail identifier.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.FeedRuleController">
            <summary>
            Class FeedRuleController.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.FeedRuleController.PostFeedRule(BQECore.Model.FeedRule)">
            <summary>
            Posts the feed rule.
            </summary>
            <param name="feedRule">The feed rule.</param>
            <returns>FeedRule.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeedRuleController.PutFeedRule(BQECore.Model.FeedRule)">
            <summary>
            Puts the feed rule.
            </summary>
            <param name="feedRule">The feed rule.</param>
            <returns>FeedRule.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeedRuleController.DeleteFeedRule(System.Guid)">
            <summary>
            Deletes the feed rule.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.FeedRuleController.GetFeedRule(System.Guid)">
            <summary>
            Gets the feed rule.
            </summary>
            <param name="id">The identifier.</param>
            <returns>FeedRule.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeedRuleController.FeedRuleList(BQECore.Model.BQEParameters)">
            <summary>
            Feeds the rule list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;CompactFeedRule&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeedRuleController.BatchDeleteFeedRules(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete feed rules.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeedRuleController.PutLineNumberSortOrder(System.Guid,System.Int32)">
            <summary>
            Puts the line number sort order.
            </summary>
            <param name="id">The identifier.</param>
            <param name="id1">The id1.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeedRuleController.BatchUpdateFeedRuleStatus(BQECore.Model.FeedRuleUpdateStatus)">
            <summary>
            Batches the update feed rule status.
            </summary>
            <param name="feedRule">The feed rule.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.IntegrationScheduleController">
            <summary>
            IntegrationScheduleController Inherits ApiSecurityController
            This class Controls all API Calls for IntegrationSchedule
            Module.
            </summary>
            <seealso cref="T:BQECore.Model.Security.Integration" />
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationScheduleController.GetList(BQECore.Model.BQEParameters)">
            <summary>
            GetIntegrationScheduleList: This API is used to get All IntegrationSchedule
            </summary>
            <param name="parameters"><seealso cref="T:BQECore.Model.BQEParameters"/></param>
            <returns>List of <seealso cref="T:BQECore.Model.IntegrationSchedule"/></returns>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationScheduleController.GetItem(System.Guid)">
            <summary>
            Gets a single item of Integration schedule
            </summary>
            <param name="id">IntegrationSchedule identifier</param>
            <returns><seealso cref="T:BQECore.Model.IntegrationSchedule"/></returns>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationScheduleController.PostIntegrationSchedule">
            <summary>
            POST api/values
            This Api is used to save IntegrationSchedule Model.
            it takes IntegrationSchedule Model as parameter
            </summary>
            <param name="value"><seealso cref="T:BQECore.Model.IntegrationSchedule"/>.</param>
            <returns><seealso cref="T:BQECore.Model.IntegrationSchedule"/>.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationScheduleController.PutIntegrationSchedule">
            <summary>
            POST api/values
            This Api is used to Update IntegrationSchedule Model.
            it takes IntegrationSchedule Model as parameter
            </summary>
            <param name="value"><seealso cref="T:BQECore.Model.IntegrationSchedule"/>.</param>
            <returns><seealso cref="T:BQECore.Model.IntegrationSchedule"/>.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationScheduleController.DeleteReportSchedule(System.Guid)">
            <summary>
            This Method is used to delete IntegrationSchedule
            </summary>
            <param name="id">The identifier.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.LEDESController">
            <summary>
            Class LEDESController.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.LEDESController.Export(BQECore.Model.LedesOptions)">
            <summary>
            Provides LEDES in XML/TEXT format
            </summary>
            <param name="exportModel">The export model.</param>
            <returns>Task&lt;System.String&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LEDESController.PostLedesMapping(BQECore.Model.LedesMapping)">
            <summary>
            This Api saves LedesMapping Model.
            </summary>
            <param name="ledesMapping">LedesMapping</param>
            <returns>LedesMapping</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LEDESController.PutLedesMapping">
            <summary>
            This Api Updates an existing LedesMapping Model.
            </summary>
            <returns>LedesMapping</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LEDESController.GetLedesMapping(System.Guid)">
            <summary>
            This APi Gets an Existing LedesMapping Model
            </summary>
            <param name="id">The identifier.</param>
            <returns>LedesMapping</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LEDESController.DeleteLedesMapping(System.Guid)">
            <summary>
            This Api Deletes an existing LedesMapping if any.
            </summary>
            <param name="id">LedesMapping_ID</param>
        </member>
        <member name="M:BQECore.Api.Controllers.LEDESController.LedesMappingList(BQECore.Model.BQEParameters)">
            <summary>
            This Api gets the list of LedesMapping based on BQEParameters
            </summary>
            <param name="parameters">BQEParameters</param>
            <returns>IEnumerable&lt;LedesMapping&gt;</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LEDESController.CopyLedesMapping(BQECore.Model.CopyLedesMapping)">
            <summary>
            This Api copies the LedesMapping from Source to target.
            </summary>
            <param name="copyMapping"></param>
            <returns></returns>
        </member>
        <member name="T:BQECore.Api.Controllers.ReadOnlySettingsController">
            <summary>
            Class ReadOnlySettingsController.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.ReadOnlySettingsController.GetTimeExpenseSetting">
            <summary>
            Gets the time expense setting.
            </summary>
            <returns>Setting.TimeExpenseSetting.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReadOnlySettingsController.GetUserInterfaceSetting">
            <summary>
            Gets the user interface setting.
            </summary>
            <returns>Setting.UserInterfaceSetting.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReadOnlySettingsController.GetTaxSetting">
            <summary>
            Gets the tax setting.
            </summary>
            <returns>Setting.TaxSetting.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReadOnlySettingsController.GetSecuritySetting">
            <summary>
            Gets the security setting.
            </summary>
            <returns>Setting.SecuritySetting.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReadOnlySettingsController.GetMasterInformationSetting">
            <summary>
            Gets the master information setting.
            </summary>
            <returns>Setting.MasterInformationSetting.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReadOnlySettingsController.GetTimeAndExpenseSetting(System.Guid,System.String)">
            <summary>
            Appearances the setting.
            </summary>
            <param name="User_ID">The user_ identifier.</param>
            <param name="App_ID">The app_ identifier.</param>
            <returns>Preference.TimeExpensePreferences.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReadOnlySettingsController.GetGeneralSetting(System.Guid,System.String)">
            <summary>
            Appearances the setting.
            </summary>
            <param name="User_ID">The user_ identifier.</param>
            <param name="App_ID">The app_ identifier.</param>
            <returns>Preference.GeneralPreferences.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReadOnlySettingsController.CustomLabels(BQECore.Model.BQEParameters)">
            <summary>
            This Api is used to get  filtered CustomLabels based
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{CustomLabel}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReadOnlySettingsController.NoteCategoryCompactWithoutSecurity(BQECore.Model.BQEParameters)">
            <summary>
            Get List of NoteCategories, without checking for Security.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;NoteCategory&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.IntegrationController">
            <summary>
            Class IntegrationController.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.Integration}</cref>
            </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationController.GetSyncLog(BQECore.Model.BQEParameters)">
            <summary>
            Gets the synchronize log.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;SyncLog&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationController.GetConnectionHistory">
            <summary>
            Gets the connection history.
            </summary>
            <returns>IEnumerable&lt;ConnectionHistory&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationController.PostConnectionHistory(BQECore.Model.ConnectionHistory)">
            <summary>
            Posts the connection history.
            </summary>
            <param name="value">The value.</param>
            <returns>ConnectionHistory.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationController.RecordMappings(BQECore.Model.BQEParameters)">
            <summary>
            Records the mappings.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;IntegrationLink&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationController.UnMappedCoreRecords(BQECore.Model.BQEParameters)">
            <summary>
            Uns the mapped core records.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;IntegrationLink&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationController.UnMappedThirdPartyRecords(BQECore.Model.BQEParameters)">
            <summary>
            Uns the mapped third party records.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;IntegrationLink&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationController.LinkRecords(System.Collections.Generic.IEnumerable{BQECore.Model.IntegrationLink})">
            <summary>
            Links the records.
            </summary>
            <param name="linkedRecords">The linked records.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationController.IntegrationProjectAccountList(BQECore.Model.BQEParameters)">
            <summary>
            Get the settings.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;IntegrationProjectAccount&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationController.CreateProjectAccountsMapping(System.Collections.Generic.IEnumerable{BQECore.Model.IntegrationProjectAccount})">
            <summary>
            Save the Project accounts.
            </summary>
            <param name="projectAccounts">The project Accounts.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationController.AddProjectAccountMapping(BQECore.Model.IntegrationProjectAccount)">
            <summary>
            Save the Project accounts.
            </summary>
            <param name="projectAccounts">The project Accounts.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationController.DeleteAccountMapping(BQECore.Model.BQEParameters)">
            <summary>
            This API is used for batch DELETE of IntegrationProjectAccount
            </summary>
            <param name="parameters">parameters</param>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationController.DeleteAccountMapping(System.Guid)">
            <summary>
            This API is used for batch DELETE of IntegrationProjectAccount
            </summary>
            <param name="ids">IntegrationProjectAccounts_ID</param>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationController.DeleteLinks(System.Guid[])">
            <summary>
            This API is used for batch DELETE of IntegrationLink
            </summary>
            <param name="ids">Array of IntegrationLink_ID</param>
        </member>
        <member name="M:BQECore.Api.Controllers.IntegrationController.DeleteSyncLog(System.Int32)">
            <summary>
            This Method is used to delete Sync Log
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="T:BQECore.Api.Controllers.InvoiceReviewController">
            <summary>
            Class InvoiceReviewController.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.InvoiceReview}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.InvoiceReviewController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.Invoices(BQECore.Model.InvoiceParameter)">
            <summary>
            GetInvoiceList : This Api is used to get the list of all the invoices based
            on filter condition provided
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>InvoiceCompact Model List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.InvoiceCompactList(BQECore.Model.InvoiceParameter)">
            <summary>
            GetInvoiceList : This Api is used to get the compact list of all the invoices based
            on filter condition provided
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>InvoiceCompact Model List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.VoidInvoicesList(BQECore.Model.BQEParameters)">
            <summary>
            Voids the invoices list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;InvoiceList&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.BatchUpdateInvoices(BQECore.Model.InvoiceBatchUpdate)">
            <summary>
            This Api is used to do Batch Change to Invoices
            </summary>
            <param name="value">of type BatchChange containing fields to batch update</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.GetMemo(System.Guid,System.Guid)">
            <summary>
            Gets the memo.
            </summary>
            <param name="id">The identifier.</param>
            <param name="id1">The id1.</param>
            <returns>Memo.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.CreateLateFeeInvoice(BQECore.Model.LateFeeInvoice)">
            <summary>
            This Api is used to create Late Fee Invoice.
            </summary>
            <param name="value">of type LateFeeInvoice containing invoices to create Late Fee for</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.GetInvoicesHistory(BQECore.Model.BQEParameters)">
            <summary>
            This API gets the Invoices History of the Project
            Usage: GetVendorTransactionHistory/Value_Project_ID ? id2 = Value_ProjectHistoryViewBy
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.InvoiceTotals(BQECore.Model.BQEParameters)">
            <summary>
            Invoice Totals
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>Invoice field Totals.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.GetInvoice(System.String)">
            <summary>
            This Api is used to get a particular invoice.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Invoice.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.GetInvoiceDetailSummary(System.String)">
            <summary>
            This Api is used to get a invoice details summary.
            </summary>
            <param name="id">Can be Invoice_ID or InvoiceNumber</param>
            <returns>InvoiceDetailSummary.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.GetVoidInvoiceDetailSummary(System.Guid)">
            <summary>
            This Api is used to get invoice details summary for an invoice that is void.
            </summary>
            <param name="InvoiceArchive_ID">The invoice archive identifier.</param>
            <returns>InvoiceDetailSummary.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.PostInvoice(BQECore.Model.Invoice)">
            <summary>
            PostInvoice: This Api is used for creating an Invoice.
            </summary>
            <param name="invoice">The invoice to be saved.</param>
            <returns>No Of Records Affected.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.PutInvoice">
            <summary>
            PUT api/values/5
            This Method is used to update TransactionTable Model
            </summary>
            <returns>TransactionTable.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.InvoiceSummary(BQECore.Model.BQEParameters)">
            <summary>
            Invoices the summary.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>InvoiceSummary.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.DeleteInvoice(System.Guid)">
            <summary>
            This Method is used to delete a Invoice.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.DeleteInvoices(System.Guid[])">
            <summary>
            This API is used to DELETE a list of Invoice Model
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.BatchDeleteInvoice(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete invoice.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.VoidInvoice(System.Guid[])">
            <summary>
            This Method is used to Void an Invoice.
            </summary>
            <param name="InvoiceIDs">The invoice i ds.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.GetInvoiceCollections(BQECore.Model.BQEParameters)">
            <summary>
            Returns a list of InvoiceCollection models.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;InvoiceCollection&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.GetInvoiceCollectionDetail(System.Guid)">
            <summary>
            Returns InvoiceCollectionDetail for a invoiceID
            </summary>
            <param name="id">The identifier.</param>
            <returns>InvoiceCollectionDetail.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.ProcessDraftInvoices(BQECore.Model.UpdateBatch)">
            <summary>
            Returns List of APIResponse for DraftInvoices.
            </summary>
            <param name="invoices">The invoices.</param>
            <returns>List APIResponse</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.ExportToCsv(BQECore.Model.InvoiceParameter)">
            <summary>
            This Api will return data in CSV format
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.ChangeInvoice(BQECore.Model.ChangeInvoice)">
            <summary>
            Updates an Invoice.
            </summary>
            <param name="invoice">The invoice.</param>
            <returns>APIResponse&lt;PartialEntity&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.GetInvoiceReportParameter(System.Guid,System.Boolean)">
            <summary>
            This API is used to get the Report instance of an Invoice.
            </summary>
            <param name="id">The identifier.</param>
            <param name="id1">if set to <c>true</c> [id1].</param>
            <returns>Report.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.InvoiceReports(System.Collections.Generic.List{System.Guid})">
            <summary>
            This API is used to get the Report instance of an Invoice.
            </summary>
            <param name="invoiceIDs">The invoice i ds.</param>
            <returns>List&lt;Report&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.EmailInvoiceReports(BQECore.Model.BatchReportEmail)">
            <summary>
            This API is used to send the Reports to a specific entity.
            </summary>
            <param name="id1">The id1.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.GetInvoiceTemplateParameter(System.Guid)">
            <summary>
            This API is used to get the Report instance of an Invoice.
            </summary>
            <param name="id">Invoicetemplate_ID</param>
            <returns>Report.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.TransactionTotals(BQECore.Model.BQEParameters)">
            <summary>
            This API provides totals of invoices for projects/clients.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceReviewController.IsDraft(System.Guid[])">
            <summary>
            Gets whether Invoice is Draft or Not.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BQECore.Api.Controllers.InvoiceTemplateController">
            <summary>
            Class InvoiceTemplateController.
            </summary>
            <seealso cref="T:BQECore.Api.Controllers.ApiHelperController" />
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceTemplateController.Templates(BQECore.Model.BQEParameters)">
            <summary>
            This API returns all exisiting the Invoice Templates.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable of InvoiceTemplates.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceTemplateController.TemplatesByType(TemplateType)">
            <summary>
            This API returns all exisiting the Invoice Templates for a particular Template Type.
            </summary>
            <param name="type">The type.</param>
            <returns>IEnumerable of InvoiceTemplates.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceTemplateController.GetTemplate(System.Guid)">
            <summary>
            This API gets a single object against the specified identifier of Invoice Template.
            </summary>
            <param name="id">The identifier.</param>
            <returns>InvoiceTemplate.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceTemplateController.PostTemplate(BQECore.Model.InvoiceTemplate)">
            <summary>
            This API saves an instance of InvoiceTemplate.
            </summary>
            <param name="template">The template.</param>
            <returns>InvoiceTemplate.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceTemplateController.CloneInvoiceTemplate(System.Guid,System.String)">
            <summary>
            Clones InvoiceTemplate
            </summary>
            <param name="id1">The id1.</param>
            <param name="id2">The id2.</param>
            <returns>InvoiceTemplate.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceTemplateController.PutTemplate(BQECore.Model.InvoiceTemplate)">
            <summary>
            This API Updates an instance of InvoiceTemplate.
            </summary>
            <param name="template">The template.</param>
            <returns>InvoiceTemplate.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceTemplateController.DeleteTemplate(System.Guid)">
            <summary>
            This API Deletes an instance of InvoiceTemplate.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceTemplateController.DeleteTemplate(System.Guid[])">
            <summary>
            This API is used to DELETE a list of InvoiceTemplate Model
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceTemplateController.BatchDeleteInvoiceTemplate(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete invoice template.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceTemplateController.PostCustomInvoiceTemplate(BQECore.Model.CustomInvoiceTemplate,System.Boolean)">
            <summary>
            This API saves an instance of Custom Invoice Template.
            </summary>
            <param name="template">The template.</param>
            <param name="overwrite">if set to <c>true</c> [overwrite].</param>
            <returns>CustomInvoiceTemplate.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceTemplateController.DeleteInvoiceTemplates(System.Guid[])">
            <summary>
            Deletes the invoice templates.
            </summary>
            <param name="ids">The ids.</param>
            <returns>IEnumerable&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.InvoiceTemplateController.GetReportByInvoiceTemplate(System.Guid)">
            <summary>
            This Api gets the Report based on InvoiceTemplate_ID
            </summary>
            <param name="id">InvoiceTemplate_ID</param>
            <returns>Report</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.KeyValueController">
            <summary>
            Class KeyValueController.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.KeyValueController.KeyValues(BQECore.Model.BQEParameters)">
            <summary>
            This API is used to fetch all the Key Values.
            </summary>
            <param name="parameters">Filters if Any.</param>
            <returns>IEnumerable of KeyValues</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.KeyValueController.GetKeyValue(System.String)">
            <summary>
            This API is used to fetch a Key Value.
            </summary>
            <param name="id">The identifier.</param>
            <returns>KeyValue instance</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.KeyValueController.PostKeyValue(BQECore.Model.KeyValue)">
            <summary>
            This API is used to save a Key Value.
            </summary>
            <param name="value">The value.</param>
            <returns>KeyValue instance</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.KeyValueController.PostKeyValues(System.Collections.Generic.List{BQECore.Model.KeyValue})">
            <summary>
            This API is used to save the collection of Key Value pairs.
            </summary>
            <param name="keyValuePairs">The key value pairs.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.KeyValueController.PutKeyValue(BQECore.Model.KeyValue)">
            <summary>
            This API is used to update a Key Value.
            </summary>
            <param name="value">The value.</param>
            <returns>KeyValue instance</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.KeyValueController.PutKeyValues(System.Collections.Generic.List{BQECore.Model.KeyValue})">
            <summary>
            This API is used to update the collection of Key Value pairs.
            </summary>
            <param name="keyValuePairs">The key value pairs.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.KeyValueController.DeleteKeyValue(System.String)">
            <summary>
            This API is used to Delete a Key Value.
            </summary>
            <param name="id">Key Value Setting name</param>
            <returns>KeyValue instance</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.LastSyncDateController">
            <summary>
            Class LastSyncDateController.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.LastSyncDateController.GetLastSyncDate">
            <summary>
            Gets the last synchronize date.
            </summary>
            <returns>LastSyncDate.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LastSyncDateController.LastUpdated(ModuleNames)">
            <summary>
            Returns the Last Update Stats for a table in database
            </summary>
            <param name="id">The identifier.</param>
            <returns>LastUpdate.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.MYOBController">
            <summary>
            MYOBController Inherits ApiController
            This class Controls all API Calls for MYOB Sync
            Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.Integration}</cref>
            </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetAccountRightConsumerAppToken">
            <summary>
            Gets the account right consumer application token.
            </summary>
            <returns>OAuthToken.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetOAuthInfo">
            <summary>
            Gets the o authentication information.
            </summary>
            <returns>MYOBOAuthInfo.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.RefreshoAuthToken(BQECore.Model.ThirdPartySetting)">
            <summary>
            Refreshoes the authentication token.
            </summary>
            <param name="myobSettings">The myob settings.</param>
            <returns>MYOBOAuthInfo.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetAllFromMyobAccountRight(BQECore.Model.BQEParameters)">
            <summary>
            Gets the list of all the entities from MyobAccountRight.
            </summary>
            <param name="parameters">Expects the BQEParameters<seealso cref="T:BQECore.Model.BQEParameters"/></param>
            <returns>Returns List of <seealso cref="T:BQECore.Api.Authorization.APIResponse" /> Including the List of <seealso cref="T:BQECore.Model.IntegrationLink"/> </returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetActivity(BQECore.Model.BQEParameters)">
            <summary>
            Gets the activity.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetExpense(BQECore.Model.BQEParameters)">
            <summary>
            Gets the expense.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetEmployees(BQECore.Model.BQEParameters)">
            <summary>
            Gets the employees.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetVendors(BQECore.Model.BQEParameters)">
            <summary>
            Gets the vendors.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetClients(BQECore.Model.BQEParameters)">
            <summary>
            Gets the clients.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetProjects(BQECore.Model.BQEParameters)">
            <summary>
            Gets the projects.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetTimeEntries(BQECore.Model.BQEParameters)">
            <summary>
            Gets the time entries.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetInvoices(BQECore.Model.BQEParameters)">
            <summary>
            Gets the invoices.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetPayments(BQECore.Model.BQEParameters)">
            <summary>
            Gets the payments.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetPurchaseOrders(BQECore.Model.BQEParameters)">
            <summary>
            Gets the purchase orders.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetVendorBills(BQECore.Model.BQEParameters)">
            <summary>
            Gets the vendor bills.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetAccounts(BQECore.Model.BQEParameters)">
            <summary>
            Gets the accounts.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetAccountsListfromAccountRight(BQECore.Model.BQEParameters)">
            <summary>
            Gets the accounts listfrom account right.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetTaxCodeListfromAccountRight(BQECore.Model.BQEParameters)">
            <summary>
            Gets the tax code listfrom account right.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetActivityListfromAccountRight(BQECore.Model.BQEParameters)">
            <summary>
            Gets the activity listfrom account right.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetExpenseListfromAccountRight(BQECore.Model.BQEParameters)">
            <summary>
            Gets the expense listfrom account right.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetClientListfromAccountRight(BQECore.Model.BQEParameters)">
            <summary>
            Gets the client listfrom account right.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetJobListfromAccountRight(BQECore.Model.BQEParameters)">
            <summary>
            Gets the job listfrom account right.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetEmployeeListfromAccountRight(BQECore.Model.BQEParameters)">
            <summary>
            Gets the employee listfrom account right.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.GetSupplierListfromAccountRight(BQECore.Model.BQEParameters)">
            <summary>
            Gets the supplier listfrom account right.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.CancelSync">
            <summary>
            Cancels the synchronize.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.SendAllToMyobAccountRight(BQECore.Model.BQEParameters)">
            <summary>
            Sends the list of all the entities from BQE Core to MyobAccountRight.
            </summary>
            <param name="parameters">Expects the BQEParameters<seealso cref="T:BQECore.Model.BQEParameters"/></param>
            <returns>Returns List of <seealso cref="T:BQECore.Api.Authorization.APIResponse" /> Including the List of <seealso cref="T:BQECore.Model.IntegrationLink"/> </returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.SendActivity(BQECore.Model.BQEParameters)">
            <summary>
            Sends the activity.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.SendExpense(BQECore.Model.BQEParameters)">
            <summary>
            Sends the expense.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.SendEmployees(BQECore.Model.BQEParameters)">
            <summary>
            Sends the employees.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.SendVendors(BQECore.Model.BQEParameters)">
            <summary>
            Sends the vendors.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.SendClients(BQECore.Model.BQEParameters)">
            <summary>
            Sends the clients.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.SendProjects(BQECore.Model.BQEParameters)">
            <summary>
            Sends the projects.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.SendTimeEntries(BQECore.Model.BQEParameters)">
            <summary>
            Sends the time entries.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.SendInvoices(BQECore.Model.BQEParameters)">
            <summary>
            Sends the invoices.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.SendPayments(BQECore.Model.BQEParameters)">
            <summary>
            Sends the payments.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.SendPurchaseOrders(BQECore.Model.BQEParameters)">
            <summary>
            Sends the purchase orders.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.SendVendorBills(BQECore.Model.BQEParameters)">
            <summary>
            Sends the vendor bills.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MYOBController.SendAccounts(BQECore.Model.BQEParameters)">
            <summary>
            Sends the accounts.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.NotificationController">
            <summary>
            Class NotificationController.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.NotificationController.BatchMarkAsRead(BQECore.Model.BatchDelete)">
            <summary>
            Sets the status of all the Notification as Read.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NotificationController.MarkClubbedNotificationAsRead(BQECore.Model.ClubbedNotification)">
            <summary>
            Sets the status of all the Notification as Read, that are clubbed based on Employee, Type and NotifyUpon.
            </summary>
            <param name="id1">The id1.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NotificationController.DeleteNotification(System.Guid)">
            <summary>
            Deletes a specific Notification.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.NotificationController.BatchDeleteNotification(BQECore.Model.BatchDelete)">
            <summary>
            Delete all the Notifications, passed as parameters in BatchDelete.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NotificationController.GetNotificationList(BQECore.Model.BQEParameters)">
            <summary>
            Gets the NotificatonCompact List.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;NotificationCompact&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NotificationController.GetUnreadEntityList(System.Guid)">
            <summary>
            Gets the Count of Unread Notifications, messages and Today's Events.
            </summary>
            <param name="id1">The id1.</param>
            <returns>IEnumerable&lt;UnReadEntity&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NotificationController.GetClubbedNotificationList(BQECore.Model.BQEParameters)">
            <summary>
            Gets the Notification list in Consolidated manner.
            </summary>
            <param name="id1">The id1.</param>
            <returns>IEnumerable&lt;ClubbedNotification&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.OTCalculatorController">
            <summary>
            Class OTCalculatorController.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.OvertimeCalculator}</cref>
            </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.OTCalculatorController.CalculateOvertime(BQECore.Model.OTCalculator)">
            <summary>
            This API is used to calculate over time.
            </summary>
            <param name="otCalculator">The ot calculator.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.RecurringBillController">
            <summary>
            Class RecurringBillController.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.RecurringSchedule}</cref>
            </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringBillController.GetRecurringBill(System.Guid)">
            <summary>
            GetRecurringBill : This Api is used to get particular RecurringInvoice.
            </summary>
            <param name="id">The identifier.</param>
            <returns>RecurringBill.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringBillController.RecurringBills(BQECore.Model.BQEParameters)">
            <summary>
            RecurringBills : This Api is used to get a list of RecurringBills.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;RecurringBill&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringBillController.GetDueRecurringBills(System.Guid)">
            <summary>
            GetDueRecurringBills : This API is used to get List of Due RecurringBills
            </summary>
            <param name="Employee_ID">The employee identifier.</param>
            <returns>RecurringInvoice Objects</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringBillController.PostRecurringBill(BQECore.Model.RecurringBill)">
            <summary>
            Posts the recurring bill.
            </summary>
            <param name="recurringBill">The recurring bill.</param>
            <returns>RecurringInvoice</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringBillController.ProcessRecurringBills(System.Collections.Generic.List{BQECore.Model.RecurringBill})">
            <summary>
            This API is used to Process RecurringBill.
            </summary>
            <param name="recurringBills">RecurringBill Model List</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringBillController.ProcessAutomatically">
            <summary>
            This API is used to Process Automatic RecurringBills<see cref="T:BQECore.Model.RecurringBill" />.
            </summary>
            <returns>no of Records Processed.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringBillController.PutRecurringBill">
            <summary>
            This Method is used to update RecurringBill Model
            </summary>
            <returns>RecurringInvoice.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringBillController.BatchUpdateRecurringEntries(BQECore.Model.RecurringBatchUpdate)">
            <summary>
            Batch Updates the RecurringBills
            </summary>
            <param name="model">The model.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringBillController.BatchDeleteRecurringSchedule(BQECore.Model.BatchDelete)">
            <summary>
            Batch Delete RecurringBills
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringBillController.DeleteRecurringSchedule(System.Guid[])">
            <summary>
            This API is used to DELETE a list of RecurringBills Model.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringBillController.DeleteRecurringSchedule(System.Guid)">
            <summary>
            This Method is used to delete RecurringBill
            </summary>
            <param name="id">RecurringSchedule_ID</param>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringBillController.GetRecurringBillingType">
            <summary>
            Gets the type of the recurring billing.
            </summary>
            <returns>IList&lt;SelectListItem&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringBillController.GetRecurringOptionList">
            <summary>
            GetViewByList : This API is used to get Option List.
            </summary>
            <returns>RecurringSchedule Option List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringBillController.GetFrequencyList">
            <summary>
            GetViewByList : This API is used to get Frequency List.
            </summary>
            <returns>RecurringSchedule Frequency List</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.RecurringCheckController">
            <summary>
            Class RecurringCheckController.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.RecurringSchedule}</cref>
            </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringCheckController.GetRecurringCheck(System.Guid)">
            <summary>
            GetRecurringCheck : This Api is used to get particular GetRecurringCheck.
            </summary>
            <param name="id">The identifier.</param>
            <returns>RecurringCheck.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringCheckController.RecurringChecks(BQECore.Model.BQEParameters)">
            <summary>
            GetRecurringChecks : This Api is used to get a list of GetRecurringChecks.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;RecurringCheck&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringCheckController.GetDueRecurringChecks(System.Guid)">
            <summary>
            GetDueRecurringChecks : This API is used to get List of Due RecurringChecks
            </summary>
            <param name="Employee_ID">The employee identifier.</param>
            <returns>RecurringCheck Objects</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringCheckController.PostRecurringCheck(BQECore.Model.RecurringCheck)">
            <summary>
            Posts the recurring check.
            </summary>
            <param name="recurringCheck">The recurring check.</param>
            <returns>RecurringInvoice</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringCheckController.ProcessRecurringChecks(System.Collections.Generic.List{BQECore.Model.RecurringCheck})">
            <summary>
            This API is used to Process RecurringCheck.
            </summary>
            <param name="recurringChecks">RecurringCheck Model List</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringCheckController.ProcessAutomatically">
            <summary>
            This API is used to Process Automatic RecurringChecks<see cref="M:BQECore.Api.Controllers.RecurringCheckController.RecurringChecks(BQECore.Model.BQEParameters)" />.
            </summary>
            <returns>no of Records Processed.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringCheckController.PutRecurringCheck">
            <summary>
            This Method is used to update RecurringCheck Model
            </summary>
            <returns>RecurringCheck.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringCheckController.BatchUpdateRecurringEntries(BQECore.Model.RecurringBatchUpdate)">
            <summary>
            Batch Updates the RecurringChecks
            </summary>
            <param name="model">The model.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringCheckController.BatchDeleteRecurringSchedule(BQECore.Model.BatchDelete)">
            <summary>
            Batch Delete RecurringChecks
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringCheckController.DeleteRecurringSchedule(System.Guid[])">
            <summary>
            This API is used to DELETE a list of RecurringChecks Model.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringCheckController.DeleteRecurringSchedule(System.Guid)">
            <summary>
            This Method is used to delete RecurringCheck
            </summary>
            <param name="id">RecurringSchedule_ID</param>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringCheckController.GetRecurringBillingType">
            <summary>
            Gets the type of the recurring billing.
            </summary>
            <returns>IList&lt;SelectListItem&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringCheckController.GetRecurringOptionList">
            <summary>
            GetViewByList : This API is used to get Option List.
            </summary>
            <returns>RecurringSchedule Option List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringCheckController.GetFrequencyList">
            <summary>
            GetViewByList : This API is used to get Frequency List.
            </summary>
            <returns>RecurringSchedule Frequency List</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.RecurringInvoiceController">
            <summary>
            Class RecurringInvoiceController.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.RecurringSchedule}</cref>
            </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringInvoiceController.GetRecurringInvoice(System.Guid)">
            <summary>
            GetRecurringInvoice : This Api is used to get particular RecurringInvoice.
            </summary>
            <param name="id">The identifier.</param>
            <returns>RecurringInvoice.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringInvoiceController.RecurringInvoices(BQECore.Model.BQEParameters)">
            <summary>
            RecurringInvoices : This Api is used to get a list of RecurringInvoices.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;RecurringInvoice&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringInvoiceController.GetDueRecurringInvoices(System.Guid)">
            <summary>
            GetDueRecurringInvoices : This API is used to get List of Due RecurringInvoices
            </summary>
            <param name="Employee_ID">The employee identifier.</param>
            <returns>RecurringInvoice Objects</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringInvoiceController.PostRecurringInvoice(BQECore.Model.RecurringInvoice)">
            <summary>
            Posts the recurring invoice.
            </summary>
            <param name="recurringInvoice">The recurring invoice.</param>
            <returns>RecurringInvoice</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringInvoiceController.ProcessRecurringInvoices(System.Collections.Generic.List{BQECore.Model.RecurringInvoice})">
            <summary>
            This API is used to Process RecurringInvoice.
            </summary>
            <param name="recurringInvoices">RecurringInvoice Model List</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringInvoiceController.ProcessAutomatically">
            <summary>
            This API is used to Process Automatic RecurringInvoice<see cref="T:BQECore.Model.RecurringInvoice" />.
            </summary>
            <returns>no of Records Processed.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringInvoiceController.PutRecurringInvoice">
            <summary>
            This Method is used to update RecurringInvoice Model
            </summary>
            <returns>RecurringInvoice.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringInvoiceController.BatchUpdateRecurringEntries(BQECore.Model.RecurringBatchUpdate)">
            <summary>
            Batch Updates the RecurringInvoices
            </summary>
            <param name="model">The model.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringInvoiceController.BatchDeleteRecurringSchedule(BQECore.Model.BatchDelete)">
            <summary>
            Batch Delete RecurringInvoices
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringInvoiceController.DeleteRecurringSchedule(System.Guid[])">
            <summary>
            This API is used to DELETE a list of RecurringInvoices Model.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringInvoiceController.DeleteRecurringSchedule(System.Guid)">
            <summary>
            This Method is used to delete RecurringInvoice
            </summary>
            <param name="id">RecurringSchedule_ID</param>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringInvoiceController.GetRecurringBillingType">
            <summary>
            Gets the type of the recurring billing.
            </summary>
            <returns>IList&lt;SelectListItem&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringInvoiceController.GetRecurringOptionList">
            <summary>
            GetViewByList : This API is used to get Option List.
            </summary>
            <returns>RecurringSchedule Option List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringInvoiceController.GetFrequencyList">
            <summary>
            GetViewByList : This API is used to get Frequency List.
            </summary>
            <returns>RecurringSchedule Frequency List</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.ReminderController">
            <summary>
            Class ReminderController.
            </summary>
            <seealso cref="T:BQECore.Api.Controllers.ApiHelperController" />
        </member>
        <member name="M:BQECore.Api.Controllers.ReminderController.GetList">
            <summary>
            Gets All The Reminder Settings of the Logged In User
            </summary>
            <returns>List&lt;Reminder&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReminderController.PostReminder(BQECore.Model.ReminderSetting)">
            <summary>
            Posts the reminder.
            </summary>
            <param name="reminder">The reminder.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ReminderController.PutReminder(BQECore.Model.ReminderSetting)">
            <summary>
            Updates Reminder Setting
            </summary>
            <param name="reminder">The reminder.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ReminderController.RestoreReminder(System.Guid)">
            <summary>
            Deletes Reminder Setting
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ReminderController.GetItem(System.Guid)">
            <summary>
            Deletes Reminder Setting
            </summary>
            <param name="id">The identifier.</param>
            <returns>ReminderSetting.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.ColumnChooserController">
            <API>
            <API_Name>Column Chooser</API_Name>
            <API_Description>
            Allows you to retrieve a specific or a list of column choosers
            Allows you to retrieve details of a specific column chooser
            Allows you to create column chooser model
            Allows you to update column chooser model
            Allows you to delete a specific or a list of column chooser model
             </API_Description>
             <summary>
             ColumnChooserController Inherits ApiController
             This class Controls all API Calls for ColumnChooser
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.ColumnChooserController.ColumnChoosers(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>ColumnChoosers</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE a list of  column choosers based on filter condition.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>ColumnChooser List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ColumnChooserController.GetColumnChooser(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetColumnChooser</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific column chooser. We pass ColumnChooser_ID as parameter.
             </summary>
             <param name="id">Represents the unique identifier.</param>
             <returns>ColumnChooser Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ColumnChooserController.GetColumnChooser(System.String,System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetColumnChooser</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific column chooser.
             </summary>
             <param name="ScreenName">Name of the screen.</param>
             <param name="ListName">Name of the list.</param>
             <returns>ColumnChooser Model</returns>
             </Endpoint>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.ColumnChooserController.GetColumnChooserDetails(System.String,System.String)" -->
        <member name="M:BQECore.Api.Controllers.ColumnChooserController.GetColumnChooserDetails(System.String,System.String,System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetColumnChooserDetails</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE details of a specific column chooser. 
             </summary>
             <param name="ScreenName">Represents the name of the screen.</param>
             <param name="ListName">Represents name of the list.</param>
             <param name="Employee_ID">Represents the employee unique identifier.</param>
             <returns>ColumnChooser Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ColumnChooserController.PostColumnChooser(BQECore.Model.ColumnChooser)">
             POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostColumnChooser</Endpoint_Name>
             <summary>
             This API method is used to save column chooser model. It takes column chooser model as parameter
             </summary>
             <param name="value">Represents the value.</param>
             <returns>ColumnChooser.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ColumnChooserController.PutColumnChooser">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutColumnChooser</Endpoint_Name>
             <summary>
             This API method is used to UPDATE column chooser model.
             </summary>
             <returns>ColumnChooser.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ColumnChooserController.PutColumnChooserDetail">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutColumnChooser</Endpoint_Name>
             <summary>
             PUT api/values/5
             This API method is used to UPDATE column chooser model.
             </summary>
             <returns>ColumnChooser.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ColumnChooserController.DeleteColumnChooser(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteColumnChooser</Endpoint_Name>
             <summary>
             This API method is used to DELETE column chooser. We pass id as parameter.
             </summary>
             <param name="id">The identifier.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ColumnChooserController.DeleteColumnChooser(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteColumnChooser</Endpoint_Name>
             <summary>
             This API method is used to DELETE a list of column chooser model. We pass ids as parameter
             </summary>
             <param name="ids">The ids.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ColumnChooserController.BatchDeleteColumnChooser(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteColumnChooser</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE column chooser.
             </summary>
             <param name="ids">The ids.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.CommunicationTypeController">
            <API>
            <API_Name>Communication Type</API_Name>
            <API_Description>
            Communication type allows you to add different communications types or methods such as Skype, Web, WhatsApp, Fax, etc.
            to your screens such as Employees, Clients, etc. 
            It is useful if you want to maintain a record of multiple communication methods for your contacts.
            Allows you to retrieve a specific or a list of communication types
            Allows you to create communication type model
            Allows you to update communication type model
            Allows you to delete a specific or a list of communication type model
             </API_Description>
             <summary>
             CommunicationTypeController Inherits ApiController
             This class Controls all API Calls for CommunicationType
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.CommunicationTypeController.CommunicationTypes(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>CommunicationTypes</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE filtered communication types based on parameters passed.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>IEnumerable{CommunicationType}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CommunicationTypeController.GetCommunicationType(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetCommunicationType</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific communication type. We pass CommunicationType_ID in for CommunicationType list.
             </summary>
             <param name="id">Represents the unique identifier.</param>
             <returns>CommunicationType Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CommunicationTypeController.PostCommunicationType(BQECore.Model.CommunicationType)">
             POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostCommunicationType</Endpoint_Name>
             <summary>
             This API method is used to save communication type model. It takes CommunicationType Model as parameter
             </summary>
             <param name="value">Represents the value passed.</param>
             <returns>CommunicationType.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CommunicationTypeController.PutCommunicationType">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutCommunicationType</Endpoint_Name>
             <summary>
             This API method is used to UPDATE communication type model
             </summary>
             <returns>CommunicationType.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CommunicationTypeController.DeleteCommunicationType(System.Guid)">
             DELETE api/values/5
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteCommunicationType</Endpoint_Name>
             <summary>
             This API method is used to DELETE communication type model.
             </summary>
             <param name="id">Represents the unique identifier.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CommunicationTypeController.DeleteCommunicationType(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteCommunicationType</Endpoint_Name>
             <summary>
             This API method is used to DELETE a list of communication type models. We pass ids as parameter.
             </summary>
             <param name="ids">The ids.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CommunicationTypeController.BatchDeleteCommunicationType(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteCommunicationType</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE communication types.
             </summary>
             <param name="ids">Represents the unique identifiers.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.AutoCompleteController">
            <API>
            <API_Name>Auto Complete</API_Name>
            <API_Description>
            Allows you to retrieve a specific auto complete
            Allows you to retrieve a list of all the activities
            Allows you to create an auto complete model
            Allows you to update an auto complete model
            Allows you to delete a specific or a list of auto complete models
             </API_Description>
             <summary>
             Class AutoCompleteController.
             </summary>
             </API>
             <seealso>
                 <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.AutoComplete}</cref>
             </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.AutoCompleteController.Module">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>Module</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE the module.
             </summary>
             <value>The module.</value>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AutoCompleteController.GetAutoComplete(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAutoComplete</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific auto complete. We pass id as parameter.
             </summary>
             <param name="id">Represents the identifier passed.</param>
             <returns>AutoComplete</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AutoCompleteController.AutoCompletes(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>AutoCompletes</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE list of all the activities. We pass BQE parameters in the request header as parameters.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>list of AutoComplete</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AutoCompleteController.PostAutoComplete(BQECore.Model.AutoComplete)">
            POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostAutoComplete</Endpoint_Name>    
             <summary>
              This API method is used to CREATE an auto complete model. It takes AutoComplete Model as parameter
             </summary>
             <param name="value">Represents the value passed as parameter.</param>
             <returns>AutoComplete.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AutoCompleteController.PutAutoComplete">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutAutoComplete</Endpoint_Name>
             <summary>
              This API method is used to UPDATE an auto complete model.
             </summary>
             <returns>AutoComplete.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AutoCompleteController.DeleteAutoComplete(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteAutoComplete</Endpoint_Name>
             <summary>
             This API method is used to DELETE an auto complete model. We pass id as parameter.
             </summary>
             <param name="id">Represents the identifier passed.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AutoCompleteController.DeleteAutoComplete(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteAutoComplete</Endpoint_Name>
             <summary>
             This API method is used to DELETE a list of auto complete models. We pass ids as parameters.
             </summary>
             <param name="ids">Represents the identifiers passed.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AutoCompleteController.BatchDeleteAutocomplete(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteAutocomplete</Endpoint_Name>
            <method>Delete</method>
            <API>Batch Delete Auto Complete</API>    
             <summary>
             This API method is used to batch DELETE autocomplete. We pass ids as parameters.
             </summary>
             <param name="ids">Represents the identifiers passed for batch delete.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.ConnectedBankController">
            <API>
            <API_Name>Connected Bank</API_Name>
            <API_Description>
            Cloud feeds allow you to automatically import account transactions from your bank or financial institution into Core.
            Core offers you the ability to connect to your bank, credit card, investment and liability accounts to download transactions. 
            The main benefit of this is that you do not need to download your bank statements to get the transactions into Core.
            Allows you to retrieve all your connected banks
            Allows you to download account transaction
            Allows you to delete a connected bank
            Allows you to retrieve user authorization for Yodlee fast link UI
             </API_Description>
             <summary>
             BankController Inherits ApiController
             This class Controls all API Calls for ConnectedBanks
             Module.
             </summary>
             </API>
             <seealso>
                 <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.BankFeeds}</cref>
             </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.ConnectedBankController.ConnectedBanks(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>ConnectedBanks</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all your connected banks
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{BankFeeds}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ConnectedBankController.ConnectedBanksAutoUpdated(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>ConnectedBanksAutoUpdate</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE connected banks that are auto updated with the latest update from the aggregation service.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{BankFeeds}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ConnectedBankController.ConnectCoreAccounts(System.Collections.Generic.List{BQECore.Model.ConnectedBanks})">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>ConnectCoreAccounts</Endpoint_Name>
             <summary>
              This API method is used once the user has provided Core account mapping to recently added bank accounts. 
              This API automatically downloads the account transactions
             </summary>
             <param name="connectedBanks">Represents the connected banks.</param>
             <returns>IEnumerable{BankFeeds}.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ConnectedBankController.GetFastLinkAuthorization(BQECore.Model.FastLinkIntegrationParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>GetFastLinkAuthorization</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE the fast link user authorization to invoke Yodlee fast link UI.
             </summary>
             <param name="pFastLinkIntegrationParameters">Represents the pfast link integration parameters.</param>
             <returns>IEnumerable{BankFeeds}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ConnectedBankController.RefreshConnectedBanksAfterSiteRefresh(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>RefreshConnectBanksAfterSiteRefresh</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE update user site accounts after a refresh request
             </summary>
             <param name="ProviderAccountid">Represents the provider accountid parameter.</param>
             <returns>IEnumerable{BankFeeds}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ConnectedBankController.RefreshConnectedBanksAfterSiteAdd">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>RefreshConnectedBanksAfterSiteAdd</Endpoint_Name>
             <summary>
              This API method gets called upon immediely after a site add in FastLink
             </summary>
             <returns>IEnumerable{BankFeeds}.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ConnectedBankController.DisconnectBank(System.Collections.Generic.IEnumerable{System.String})">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DisconnectBank</Endpoint_Name>
             <summary>
              This API method is used to DELETE a connected bank
             </summary>
             <param name="ids">Represents the unique identifiers parameter.</param>
             <returns>BankFeed.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ConnectedBankController.BatchDisconnectBanks(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API method is used to batch disconnect banks.
             </summary>
             <param name="ids">The ids.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ConnectedBankController.RegisterUser(BQECore.Model.YodleeRegisterUserParam)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>RegisterUser</Endpoint_Name>
             <summary>
             This API method is used to register the user.
             </summary>
             <param name="pYodleeUser">Represents the p yodlee user parameter.</param>
             <returns>UserLoginResponseTokens.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ConnectedBankController.ConnectedBank(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>ConnectedBank</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE a connected bank
             </summary>
             <param name="id">Represents the unique identifier parameter.</param>
             <returns>BankFeed.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ConnectedBankController.PutConnectedBank">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>ConnectedBank</Endpoint_Name>
             <summary>
              This API method is used to UPDATE  cloud feed.
             </summary>
             <returns>Updated cloud feed</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ConnectedBankController.PostConnectedBank">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostConnectedBank</Endpoint_Name>
             <summary>
             This API method is used to CREATE a bank feed.
             </summary>
             <returns>Updated bank feed..</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ConnectedBankController.UpdateConnectedBankAccount(BQECore.Model.ConnectedBankBase)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>UpdateConnectedBankAccount</Endpoint_Name>
             <summary>
             This API method is used to UPDATE the connected bank account.
             </summary>
             <param name="connectedBanks">Represents the connected banks parameter.</param>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.ApiHelperController">
            <summary>
            Class ApiHelperController.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
            <seealso cref="T:BQECore.Api.Controllers.ICoreAPIHelper" />
        </member>
        <member name="M:BQECore.Api.Controllers.ApiHelperController.ValidateBatchUpdate(BQECore.Model.IBatchUpdate)">
            <summary>
            Validates the batch update.
            </summary>
            <param name="batchUpdate">The batch update.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ApiHelperController.ValidateBatchUpdate(BQECore.Model.IBatchUpdateWithEntryType)">
            <summary>
            Validates the batch update.
            </summary>
            <param name="batchUpdate">The batch update.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ApiHelperController.GetPartialEntity(BQECore.Model.PartialEntityWithEntryType)">
            <summary>
            Gets the partial entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>PartialEntity.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ApiHelperController.ValidateSingleUpdate(BQECore.Model.ISingleUpdate)">
            <summary>
            Validates the single update.
            </summary>
            <param name="singleUpdate">The single update.</param>
            <returns>APIResponse&lt;PartialEntity&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ApiHelperController.SetHeader(BQECore.Model.IBatchUpdate,ParameterType)">
            <summary>
            Sets the header.
            </summary>
            <param name="batchUpdate">The batch update.</param>
            <param name="requestType">Type of the request.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ApiHelperController.SetHeader(BQECore.Model.IBatchUpdateWithFlag,ParameterType)">
            <summary>
            Sets the header.
            </summary>
            <param name="batchUpdate">The batch update.</param>
            <param name="requestType">Type of the request.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ApiHelperController.SetHeader(BQECore.Model.IBatchUpdateWithEntryType,ParameterType)">
            <summary>
            Sets the header.
            </summary>
            <param name="batchUpdate">The batch update.</param>
            <param name="requestType">Type of the request.</param>
        </member>
        <member name="P:BQECore.Api.Controllers.ApiHelperController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="F:BQECore.Api.Controllers.ApiHelperController.NeutralAPIEndpoint">
            <summary>
            The neutral API endpoint
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.ApiHelperController.NeutralAPIs``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Neutrals the ap is.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression">The expression.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ApiHelperController.FillNeutralAPIs``1(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Given a lambda expression that calls a method, returns the method info.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression">The expression.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ApiHelperController.Fill">
            <summary>
            Fills this instance.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.ApiHelperController.IsNeutralAPICall(System.String,System.String)">
            <summary>
            Determines whether [is neutral API call] [the specified API controller].
            </summary>
            <param name="apiController">The API controller.</param>
            <param name="api">The API.</param>
            <returns><c>true</c> if [is neutral API call] [the specified API controller]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.ApiSecurityController`1">
            <summary>
            Class ApiSecurityController.
            </summary>
            <typeparam name="SecurityModel">The type of the security model.</typeparam>
            <seealso cref="T:BQECore.Api.Controllers.ApiHelperController" />
        </member>
        <member name="M:BQECore.Api.Controllers.ApiSecurityController`1.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
            <summary>
            Executes asynchronously a single HTTP operation.
            </summary>
            <param name="controllerContext">The controller context for a single HTTP operation.</param>
            <param name="cancellationToken">The cancellation token assigned for the HTTP operation.</param>
            <returns>The newly started task.</returns>
        </member>
        <member name="F:BQECore.Api.Controllers.ApiSecurityController`1.ApiIgnoreCheck">
            <summary>
            The API ignore check
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.ApiSecurityController`1.IgnoreSecurityCheck``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Gets the method information.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression">The expression.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ApiSecurityController`1.FillIgnoreSecurityCheck(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Given a lambda expression that calls a method, returns the method info.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="T:BQECore.Api.Controllers.ICoreAPIHelper">
            <summary>
            Interface ICoreAPIHelper
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.ICoreAPIHelper.Fill">
            <summary>
            Fills this instance.
            </summary>
        </member>
        <member name="T:BQECore.Api.Controllers.ProjectTemplateController">
            <summary>
            Class ProjectTemplateController.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.ProjectTemplateList(BQECore.Model.BQEParameters)">
            <summary>
            (An Action that handles HTTP GET and POST requests)
            enumerates project template list in this collection.
            </summary>
            <param name="parameters">BQEParameters.</param>
            <returns>An enumerator that allows foreach to be used to process project template list in this
            collection.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.GetProjectStructure(System.Guid)">
            <summary>
            Gets the project structure.
            </summary>
            <param name="id">The identifier.</param>
            <returns>ProjectStructure.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.ProjectTemplates(BQECore.Model.TemplateParameter)">
            <summary>
            GetList: is used for getting the list of ProjectTemplates.
            </summary>
            <param name="parameters">BQEParameters</param>
            <returns>IEnumerable&lt;ProjectTemplate&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.GetProjectTemplate(System.Guid)">
            <summary>
            Gets project template.
            </summary>
            <param name="id">The identifier.</param>
            <returns>The project template.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.GetProjectTemplateLineItems(System.Guid)">
            <summary>
            Gets the template line items in this collection.
            </summary>
            <param name="id">The identifier.</param>
            <returns>An enumerator that allows foreach to be used to process the template line items in this
            collection.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.GetProjectTemplateDetail(System.Guid)">
            <summary>
            Gets the ProjectTemplateDetail.
            </summary>
            <param name="id">The identifier.</param>
            <returns>tProjectTemplateDetail
            collection.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.PostProjectAsTemplate(BQECore.Model.ProjectAsTemplate)">
            <summary>
            Posts a project as template.
            </summary>
            <param name="projectAsTemplate">The project as template.</param>
            <returns>ProjectTemplate.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.PostProjectTemplateDetail(BQECore.Model.ProjectTemplateDetail)">
            <summary>
            Posts a project template detail.
            </summary>
            <param name="templateDetail">The template detail.</param>
            <returns>ProjectTemplateDetail.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.DeleteProjectTemplate(System.Guid)">
            <summary>
            Deletes the project template described by ID.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.DeleteProjectTemplate(System.Guid[])">
            <summary>
            Deletes the project template.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.BatchDeleteProjectTemplate(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete project template.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.DeleteProjectTemplateDetail(System.Guid)">
            <summary>
            Deletes the project template detail described by ID.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.DeleteProjectTemplateDetail(System.Guid[])">
            <summary>
            This API is used to DELETE a list of project template details
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.BatchDeleteProjectTemplateDetail(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete project template detail.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.PostCloneTemplate(BQECore.Model.ProjectTemplateCompact)">
            <summary>
            Posts a clone template.
            </summary>
            <param name="newProjectTemplate">The new project template.</param>
            <returns>An int.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.PostProjectTemplate(BQECore.Model.ProjectTemplate)">
            <summary>
            PostProjectTemplate: is used for saving an item of ProjectTemplate.
            </summary>
            <param name="template">The template.</param>
            <returns>No. Of Records Affected</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.PutProjectTemplate">
            <summary>
            Puts project template.
            </summary>
            <returns>A ProjectTemplate.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.PutStructure">
            <summary>
            Puts the structure.
            </summary>
            <returns>ProjectStructure.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.GetProjectTemplateStructure(System.Guid)">
            <summary>
            Gets the project template structure.
            </summary>
            <param name="id">The identifier.</param>
            <returns>TemplateCompact.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.GetProjectStructureCompact(System.Guid)">
            <summary>
            Gets the project structure compact.
            </summary>
            <param name="id">The identifier.</param>
            <returns>ProjectStructureCompact.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.GetProjectTemplateDefaults(System.Guid)">
            <summary>
            Gets a New Project filled with details from the ProjectTemplate provided.
            </summary>
            <param name="id">The identifier.</param>
            <returns>PartialProject</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.GetParentProjectTemplateDetail(System.Guid)">
            <summary>
            Gets Project Template detail of Parent Project Only, based on ProjectTemplate ID
            </summary>
            <param name="id">The identifier.</param>
            <returns>PartialProject</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectTemplateController.DragDropProjectTemplate(BQECore.Model.DragDropProject)">
            <summary>
            This API is used to drag drop project template details.
            </summary>
            <param name="dragDrop">The drag drop.</param>
            <returns>ResponseCode.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.ReportController">
            <summary>
            Class ReportController.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.ReportRequest(BQECore.Model.Internal.Reporting.ReportRequest)">
            <summary>
            Reports the request.
            </summary>
            <param name="reportRequest">The report request.</param>
            <returns>Reporting.ReportInfo.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.GetReports(BQECore.Model.BQEReportParameter)">
            <summary>
            Reports list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{Reports}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.PostReport(BQECore.Model.Report)">
            <summary>
            This Api is used to save a Report.
            it takes Report Model as parameter
            </summary>
            <param name="rpt">SavePayment</param>
            <returns>Report.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.PostCustomReport(BQECore.Model.CustomReport)">
            <summary>
            This Api is used to save a Custom Report.
            it takes CustomReport Model as parameter
            </summary>
            <param name="report">report</param>
            <returns>CustomReport.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.GetReport(System.Guid)">
            <summary>
            GEt Report Object
            </summary>
            <param name="Report_ID">Report ID</param>
            <returns>Report Object</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.GetEmailReportList(System.Guid[])">
            <summary>
            Get Report Object To Email
            </summary>
            <param name="ReportIDs">The report i ds.</param>
            <returns>List of Email Report Object</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.GetMemorizedEmailReportList(System.Guid[])">
            <summary>
            Get Report Object To Email from Memorized ReportID's
            </summary>
            <param name="MemorizedReportIDs">The memorized report i ds.</param>
            <returns>Report Object</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.GetReportFilters(System.Guid)">
            <summary>
            Gets a Report Filters for a Report.
            </summary>
            <param name="Report_ID">The report identifier.</param>
            <returns>List of ReportFilterBank.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.GetReportParameters(System.Guid)">
            <summary>
            Gets a Report Parameters for a Report.
            </summary>
            <param name="Report_ID">The report identifier.</param>
            <returns>List of ReportParameterBank.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.GetReportGroups(BQECore.Model.BQEParameters)">
            <summary>
            Reports list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;SingleValue&lt;System.String&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.GetQuickReport(ModuleNames)">
            <summary>
            Gets the First Report based on ScreenID
            </summary>
            <param name="id1">The id1.</param>
            <returns>Report.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.GetReportMenuList(ModuleNames)">
            <summary>
            Gets a list based on the argument passed.
            </summary>
            <param name="id">The parameters.</param>
            <returns>IEnumerable&lt;ReportMenuList&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.GetAccountReportMenuList(System.Guid)">
            <summary>
            Gets a list based on the argument passed.
            </summary>
            <param name="id">The identifier.</param>
            <returns>IEnumerable&lt;ReportMenuList&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.ReportScreenFilters(BQECore.Model.ReportScreenParameter)">
            <summary>
            Reports the screen filters.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>BQEParameters.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.GetReportJournal(ModuleNames)">
            <summary>
            This API is used to fetch a Report for a particular screen.
            </summary>
            <param name="ScreenID">The screen identifier.</param>
            <returns>Report Object</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportController.GetScreenReport(ModuleNames)">
            <summary>
            Gets a list based on the argument passed.
            </summary>
            <param name="id">The parameters.</param>
            <returns>Report.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.TimerController">
            <summary>
            ActivityController Inherits ApiController
            This Timer Controls all API Calls for Activity
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.TimerController.Timers(BQECore.Model.BQEParameters)">
            <summary>
            Get list of timer matching parameters.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;Timer&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimerController.GetTimer(System.Guid)">
            <summary>
            Gets the class.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Timer.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimerController.GetUserTimers(System.Guid)">
            <summary>
            Gets the list of timer associated with user.
            </summary>
            <param name="id">The identifier.</param>
            <returns>IEnumerable&lt;Timer&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimerController.PostTimer(BQECore.Model.Timer)">
            <summary>
            Posts the class.
            </summary>
            <param name="value">The value.</param>
            <returns>Timer.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimerController.PutTimer">
            <summary>
            PUT api/values/5
            This Method is used to update Timer Model
            </summary>
            <returns>Timer.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimerController.DeleteTimer(System.Guid)">
            <summary>
            Deletes the timer.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.TimerController.DeleteTimers(System.Guid[])">
            <summary>
            This API is used to DELETE a list of timer Model.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.TimerController.BatchDeleteTimer(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete timer.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimerController.PostTimerBatch(BQECore.Model.TimerBatchUpdate)">
            <summary>
            This API is used to for batch updating.
            </summary>
            <param name="timers">The timers.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.PreferenceController">
            <summary>
            SecurityController Inherits ApiController
            This class Controls all API Calls for Preference
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.GetGeneralSetting(System.Guid,System.String)">
            <summary>
            Appearances the setting.
            </summary>
            <param name="User_ID">The user_ identifier.</param>
            <param name="App_ID">The app_ identifier.</param>
            <returns>Preference.GeneralPreferences.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.GetNotificationAndReminderSetting(System.Guid,System.String)">
            <summary>
            Appearances the setting.
            </summary>
            <param name="User_ID">The user_ identifier.</param>
            <param name="App_ID">The app_ identifier.</param>
            <returns>Preference.NotificationPreferences.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.GetReminderSetting(System.Guid,System.String)">
            <summary>
            Reminder Setting Of User Preferences
            </summary>
            <param name="User_ID">The user identifier.</param>
            <param name="App_ID">The application identifier.</param>
            <returns>Preference.ReminderPreferences.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.GetTimeAndExpenseSetting(System.Guid,System.String)">
            <summary>
            Appearances the setting.
            </summary>
            <param name="User_ID">The user_ identifier.</param>
            <param name="App_ID">The app_ identifier.</param>
            <returns>Preference.TimeExpensePreferences.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.GetEmailSetting(System.Guid,System.String)">
            <summary>
            Appearances the setting.
            </summary>
            <param name="User_ID">The user_ identifier.</param>
            <param name="App_ID">The app_ identifier.</param>
            <returns>Preference.EmailSetting.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.EmailSettings(System.Guid,ReportTemplateType,System.Collections.Generic.List{BQECore.Model.Filter},System.String)">
            <summary>
            Appearances the setting.
            </summary>
            <param name="User_ID">The user_ identifier.</param>
            <param name="type">The type.</param>
            <param name="filters">The filters.</param>
            <param name="App_ID">The app_ identifier.</param>
            <returns>Preference.EmailSetting.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.PostEmailSetting(BQECore.Model.Preference.EmailSetting)">
            <summary>
            Posts the appearance.
            </summary>
            <param name="value">The value.</param>
            <returns>Preference.EmailSetting.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.PostGeneral(BQECore.Model.Preference.GeneralPreferences)">
            <summary>
            Posts the General.
            </summary>
            <param name="value">The value.</param>
            <returns>Preference.GeneralPreferences.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.PostNotification(BQECore.Model.Preference.NotificationPreferences)">
            <summary>
            Posts the Notification.
            </summary>
            <param name="value">The value.</param>
            <returns>Preference.NotificationPreferences.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.PostReminder(BQECore.Model.Preference.ReminderPreferences)">
            <summary>
            Posts the Reminders.
            </summary>
            <param name="value">The value.</param>
            <returns>Preference.ReminderPreferences.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.PostTimeAndExpense(BQECore.Model.Preference.TimeExpensePreferences)">
            <summary>
            Posts the Notification.
            </summary>
            <param name="value">The value.</param>
            <returns>Preference.TimeExpensePreferences.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.PutGeneral">
            <summary>
            Puts the appearance.
            </summary>
            <returns>Preference.GeneralPreferences.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.PutNotification">
            <summary>
            Puts the NotificationAndReminders.
            </summary>
            <returns>Preference.NotificationPreferences.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.PutReminder">
            <summary>
            Puts the Reminders.
            </summary>
            <returns>Preference.ReminderPreferences.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.PutTimeAndExpense">
            <summary>
            Puts the TimeAndExpense.
            </summary>
            <returns>Preference.TimeExpensePreferences.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.PutEmailSetting">
            <summary>
            Puts the TimeAndExpense.
            </summary>
            <returns>Preference.EmailSetting.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.UpdatePreference``1">
            <summary>
            Updates the preference.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>T.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PreferenceController.GetUserPreferences(System.Guid,System.String)">
            <summary>
            This  API fetches complete user preference object
            </summary>
            <param name="User_ID">The user identifier.</param>
            <param name="App_ID">The application identifier.</param>
            <returns>Userpreferences.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.CustomFieldController">
            <API>
            <API_Name>Custom Field</API_Name>
            <API_Description>
            Custom Fields is where you can create or view customized fields to track extra characteristics and attributes of records. 
            For example, track employee skills and experience to match your company's needs.
            Allows you to create custom field
            Allows you to retrieve a single or a list of custom fields
            Allows you to update custom field
            Allows yu to delete a single or a list of custom fields
             </API_Description>
             <summary>
             CustomFieldController
             This class Controls all API Calls for CustomField
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="P:BQECore.Api.Controllers.CustomFieldController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.Fill">
            <summary>
            
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.CustomFields(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>CustomFields</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE custom field list based on filter
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{CustomField}</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.GetCustomFieldListItems(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>CustomFieldListItems</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE custom field list items.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable&lt;ListItem&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.GetAvailableCustomFields(ModuleNames)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAvailableCustomFields</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE available custom fields.
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>IEnumerable&lt;CustomField&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.GetCustomField(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetCustomField</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE  a specific custom field.
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>The CustomField</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.PostCustomField(BQECore.Model.CustomField)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostCustomField</Endpoint_Name>
             <summary>
             This API method is used to CREATE new custom field.
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>CustomField.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.PutCustomField">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutCustomField</Endpoint_Name>
             <summary>
             This API method is used to UPDATE an existing custom field
             </summary>
             <returns>CustomField.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.DeleteCustomField(System.Guid,System.String)">
             DELETE api/values/5
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeletCustomField</Endpoint_Name>
             <summary>
             This API method is used to DELETE custom field
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <param name="model">Represents the model.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.DeleteModuleCustomField(System.Guid,ModuleNames)">
             DELETE api/values/5
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteModuleCustomField</Endpoint_Name>
             <summary>
             This API method is used to DELETE custom field based on the custom field identifer
             and the Module for which it is to be used.
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <param name="module">Represents the module parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.DeleteCustomFields(System.Guid[],System.String)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteCustomFields</Endpoint_Name>
             <summary>
             This API method is used to DELETE list of custom field model
             </summary>
             <param name="ids">Represents the parameter identifiers.</param>
             <param name="model">Represents yhe model parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.BatchDeleteCustomFields(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteCustomField</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE custom fields.
             </summary>
             <param name="ids">Represents the identifiers.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.GetFieldTypes">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetFieldTypes</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE field Types of custom field .
             </summary>
             <returns>List of CustomField Field Types</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.GetCustomFieldValues(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetCustomFieldValues</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE model custom field values.
             </summary>
             <param name="id">Represents the model custom field identifier.</param>
             <returns>IEnumerable&lt;SelectListItem&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.GetModelCustomFields(ModuleNames)">
            <Endpoint></Endpoint>
            <Verb></Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             CustomFieldList:this api is used to get a particular model's Custom Fields
             </summary>
             <param name="model">The model.</param>
             <returns>IEnumerable{ModelCustomField}</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.GetModelCustomFieldsDetail(ModuleNames)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>GetModelCustomFieldsDetail</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE the model custom fields detail.
             </summary>
             <param name="model">Represents the model parameter.</param>
             <returns></returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.GetModelCustomFieldsDetail(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>GetModelCustomFieldsDetail</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE the model custom fields detail.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable&lt;ModelCustomFieldDetail&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.GetModelCustomField(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetModelCustomField</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific model custom field.
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>The ModelCustomField</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.PostModelCustomField(BQECore.Model.ModelCustomFieldStructure)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostModelCustomField</Endpoint_Name>
             <summary>
             This API method is used to save new model custom field.
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>ModelCustomField.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.PostAssignCustomFields(BQECore.Model.AssignCustomField)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostAssignedCustomFields</Endpoint_Name>
             <summary>
             This API method is used to CREATE assign custom fields.
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>IEnumerable&lt;ModelCustomFieldDetail&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.PostModelCustomFields(System.Collections.Generic.List{BQECore.Model.ModelCustomFieldStructure})">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostModelCustomFields</Endpoint_Name>
             <summary>
              This API method is used to save new model custom fields list.
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>ModelCustomField.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.PutModelCustomField">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutModelCustomField</Endpoint_Name>
             <summary>
             This API method is used to UPDATE an existing model custom field
             </summary>
             <returns>CustomField.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.DeleteModelCustomField(System.Guid)">
             DELETE api/values/5
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteModelCustomField</Endpoint_Name>
             <summary>
             This API method is used to DELETE model custom field
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.CheckIntegrity``1">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>CheckIntegrity</Endpoint_Name>
             <summary>
             This API method is used to check the integrity.
             </summary>
             <typeparam name="T"></typeparam>
             <returns>T.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.GetModelCustomFieldsData(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetModelCustomFieldData</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE list of custom fields
             </summary>
             <param name="id">Represents the Entity ID parameter</param>
             <returns>List of CustomFieldModelData</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomFieldController.GetComboValues(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetComboValues</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE list of custom fields data
             </summary>
             <param name="id">Represents the custom field ID parameter</param>
             <returns>List of Distinct Custom field data</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.DataCenterController">
            <API>
            <API_Name>Data Center</API_Name>
            <API_Description>Allows you to create datacenter
            Allows you to rebuild the indexes
            Allows you to execute the default peocedures
             </API_Description>
             <summary>
             Class DataCenterController.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.DataCenterController.PostData(BQECore.Model.DataObject)">
            POST api/datacenter
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostData</Endpoint_Name>
             <summary>
             This API method is used to post the data.
             </summary>
             <param name="value">The value.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.DataCenterController.RebuildIndexes">
            <Endpoint>
            <Verb></Verb>
            <Endpoint_Name>RebuildIndexes</Endpoint_Name>
             <summary>
             This API method is used to rebuild the indexes.
             </summary>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.DataCenterController.ExecuteDefaultProcedures">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>ExecuteDefaultProcedures</Endpoint_Name>
             <summary>
             This API method is used to execute default procedures.
             </summary>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.EstimateController">
            <API>
            <API_Name>Estimate</API_Name>
            <API_Description>
            Estimates are used to define cost and revenue benchmarks in a company.
            An estimate can be a proposed task list, bid, grant, quote or proposal. 
             
             
             </API_Description>
             <summary>
             EstimateController Inherits ApiController
             This class Controls all API Calls for Estimate
             Module.
             </summary>
             </API>
             <seealso>
                 <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.Estimate}</cref>
             </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BQECore.Api.Controllers.EstimateController"/> class.
            </summary>
        </member>
        <member name="P:BQECore.Api.Controllers.EstimateController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.EstimateList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EstimateList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all or filtered estimates with properties as in estimate list model
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>List of EstimateList Objects</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.Estimates(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>Estimates</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all or filtered estimates
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>List of Budget Objects</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.GetEstimate(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEstimate</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE estimate object based on ID
             </summary>
             <param name="id">Represents BudgetID parameter</param>
             <returns>Budget</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.GetCummulativeEstimate(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetCummulativeEstimate</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a cumulative estimate for main projects
             </summary>
             <param name="project_ID">Represents the parameter</param>
             <returns></returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.EstimateServiceDetails(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EstimateServiceDetails</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE service details of an estimate
             </summary>
             <param name="parameters">Represents BQEParameters</param>
             <returns>IEnumerable{BudgetActivity}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.CumulativeEstimateServiceDetails(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>CumulativeEstimateServiceDetails</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE cumualative service details of an estimate
             </summary>
             <param name="parameters">Represents the parameters</param>
             <returns></returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.EstimateExpenseDetails(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EstimateExpenseDetails</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE cumulative expense details of an estimate
             </summary>
             <param name="parameters">Represents BQEParameters</param>
             <returns>IEnumerable{EstimateExpense}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.CumulativeEstimateExpenseDetails(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb></Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE cumulative expense details
             </summary>
             <param name="parameters">Represents the parameters</param>
             <returns></returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.GetIsEstimateInUse(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetIsEstimate</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE whether estimate in use.
             </summary>
             <param name="id">Represents the identifier Parameter.</param>
             <returns>Boolean.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.PostEstimate(BQECore.Model.Estimate,System.Guid)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEstimate</Endpoint_Name>
             <summary>
             This API method is used to CREATE new estimate.
             </summary>
             <param name="value">Represents budget object to be saved</param>
             <param name="id">Is based on Estimate_ID</param>
             <returns>Budget.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.PutEstimate">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEstimate</Endpoint_Name>
             <summary>
             This API method is used to UPDATE an estimate
             </summary>
             <returns>Budget.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.DeleteEstimate(System.Guid,System.String)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEstimate</Endpoint_Name>
             <summary>
             This API method is used to DELETE budget
             </summary>
             <param name="estimateID">Represents the estimate identifier parameter.</param>
             <param name="model">Reprsents the model parameter.</param>
             </Endpoint>
             <exception cref="T:System.ArgumentNullException">args</exception>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.DeleteEstimate(System.Guid[],System.String)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEstimate</Endpoint_Name>
             <summary>
             This API method is used to DELETE an estimate.
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             <param name="model">Represents the model.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.BatchDeleteEstimate(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteEstimate</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE estimate.
             </summary>
             <param name="ids">Represents the identifiers.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.PostBudgetToEstimate(BQECore.Model.BudgetToEstimate)">
             POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostBudgetToEstimate</Endpoint_Name>
             <summary>
             This API method is used to CREATE estimate from budget.
             </summary>
             <param name="budgetToEstimate">Represents the budget to estimate parameter.</param>
             <returns>BudgetToEstimate.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.GetEstimateSummary(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEstimateSummary</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE budget summary object based on ID
             </summary>
             <param name="estimateID">Represents the estimate identifier.</param>
             <returns>BudgetSummary</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.BatchDeleteEstimateActivity(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteEstimateActivity</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE estimate activity.
             </summary>
             <param name="ids">Represents the identifiers.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.BatchDeleteEstimateExpenseItem(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteEstimateExpenseItem</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE estimate expense item.
             </summary>
             <param name="ids">Represents the identifers.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.GetEstimateServiceItem(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEstimateServiceItem</Endpoint_Name>    
             <summary>
             This API method is used to RETRIEVE budget activity object based on ID
             </summary>
             <param name="id">Represents BudgetID parameter</param>
             <returns>BudgetActivity</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.PostEstimateServiceItem(BQECore.Model.EstimateActivity)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEstimateServiceItem</Endpoint_Name>
             <summary>
             This API is used to CREATE estimate activity line item.
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>BudgetActivity.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.PutEstimateServiceItem">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEstimateServiceItem</Endpoint_Name>
             <summary>
             This API method is used to UPDATE estimate activity line item
             </summary>
             <returns>BudgetActivity.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.DeleteEstimateServiceItem(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteestimateServiceItem</Endpoint_Name>
             <summary>
             This API method is used to DELETE budget activity line item
             </summary>
             <param name="id">Represents the identifier.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.DeleteEstimateServiceItems(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEstimateServiceItems</Endpoint_Name>
             <summary>
             This API method is used to DELETE estimate service items.
             </summary>
             <param name="ids">Represents the identifiers.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.GetEstimateExpenseItem(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEstimateExpenseItem</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE  estimate expense object based on ID
             </summary>
             <param name="id">Represents BudgetID parameter</param>
             <returns>EstimateExpense</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.PostEstimateExpenseItem(BQECore.Model.EstimateExpense)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEstimateExpenseItem</Endpoint_Name>
             <summary>
             This API method is used to CREATE estimate expense line item.
             </summary>
             <param name="value">Represents the value.</param>
             <returns>EstimateExpense.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.PutEstimateExpenseItem">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEstimateExpenseItem</Endpoint_Name>
             <summary>
             This API method is used to UPDATE estimate expense line item
             </summary>
             <returns>EstimateExpense.</returns>
            </Endpoint>   
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.DeleteEstimateExpenseItem(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEstimateExpenseItem</Endpoint_Name>
             <summary>
             This API method is used to DELETE budget expense line item
             </summary>
             <param name="id">Represents the identifier.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.DeleteEstimateExpenseItems(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEstimateExpenseItems</Endpoint_Name>
             <summary>
             This API method is used to DELETE estimate expense items.
             </summary>
             <param name="ids">Represents the identifiers.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.UpdateDefaults(BQECore.Model.EstimateActivity,System.Boolean)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>UpdateDefaults</Endpoint_Name>
             <summary>
             This API method is used to UPDATE estimate activity with default rates and properties.
             </summary>
             <param name="estimateActivity">Represents the estimate activity model to update.</param>
             <param name="ratesFromActivity">if set to <c>true</c> [rates from activity].</param>
             <returns>EstimateActivity.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EstimateController.UpdateDefaults(BQECore.Model.EstimateExpense)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>UpdateDefaults</Endpoint_Name>
             <summary>
             This API method is used to UPDATE estimate expense with default rates and properties.
             </summary>
             <param name="estimateExpense">Represents the estimate expense model to be updated.</param>
             <returns>EstimateExpense.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.EventTypeController">
            <API>
            <API_Name>Event Type</API_Name>
            <API_Description>
            Core gives you an ability to work with events, these events open with calendar drop-down on the icon bar to give you an overview 
            of all the events scheduled for today or that week for the logged-in user. The event types in Core include submittal, To-Do etc
             </API_Description>
             <summary>
             EventTypeController Inherits ApiController
             This class Controls all API Calls for EventType
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.EventTypeController.GetEventType(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEventType</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific event type.
             We pass EventType_ID or EventTypeID as parameter in for of event type list
             </summary>
             <param name="id">Represents the identifier.</param>
             <returns>EventType Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventTypeController.EventTypeList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EventTypeList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE event type list.
             </summary>
             <param name="parameters">The parameters.</param>
             <returns>IEnumerable{EventType}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventTypeController.PostEventType(BQECore.Model.EventType)">
             POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEventType</Endpoint_Name>
             <summary>
             This API method is used to save event type model. It takes EventType Model as parameter
             </summary>
             <param name="value">Represents the value.</param>
             <returns>EventType.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventTypeController.PostEventTypeList(System.Collections.Generic.IEnumerable{BQECore.Model.EventType})">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEventTypeList</Endpoint_Name>
             <summary>
             This API method is used to save a list of event type models.
             </summary>
             <param name="EventTypeList">Represents a list of event type models</param>
             <returns>IEnumerable{BQEResponseObject{EventType}}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventTypeController.PutEventType">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEventType</Endpoint_Name>
             <summary>
             This API method is used to UPDATE event type model
             </summary>
             <returns>EventType.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventTypeController.DeleteEventType(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEventType</Endpoint_Name>
             <summary>
             This API method is used to DELETE event type model
             </summary>
             <param name="id">Represents the identifier.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventTypeController.DeleteEventType(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEventType</Endpoint_Name>
             <summary>
             This API method is used to DELETE list of event type models
             </summary>
             <param name="ids">Represents the identifiers.</param>
             </Endpoint>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.EventTypeController.BatchDeleteEventType(BQECore.Model.BatchDelete)" -->
        <member name="T:BQECore.Api.Controllers.EventController">
            <API>
            <API_Name>Event</API_Name>
            <API_Description>
            Core gives you an ability to work with events, these events open with calendar drop-down on the icon bar to give you an overview 
            of all the events scheduled for today or that week for the logged-in user. 
            You can click on the event to see the details or open the full Calendar. 
            There you can use different views (Month, Week or Day) and filters 
            to show events scheduled only in the current month for a particular project or employee.
            Allows you to retrieve a particular event or an event list
            Allows you to create an event model
            Allows you to update event model
            Allows you to delete an event model
            Allows you to move an event object
             </API_Description>
             <summary>
             EventController Inherits ApiController
             This class Controls all API Calls for Event
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.EventController.GetEvent(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEvent</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific event. We pass Event_ID or EventID as parameter in for of event list
             </summary>
             <param name="id">Represents the identifier.</param>
             <returns>Event Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventController.EventList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EventList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE event list.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{Event}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventController.ScheduledEvents(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>ScheduledEvents</Endpoint_Name>
             <summary>
             This API method is used to generate scheduled events
             </summary>
             <param name="parameters">Represents BQEEventParameters</param>
             <returns>IEnumerable&lt;EventList&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventController.Events(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>Events</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE list of events.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{Event}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventController.PostEvent(BQECore.Model.Event)">
             POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEvent</Endpoint_Name>
             <summary>
             This API method is used to CREATE event model. It takes Event Model as parameter
             </summary>
             <param name="value">Represents the value.</param>
             <returns>Event.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventController.PostEvents(System.Collections.Generic.IEnumerable{BQECore.Model.Event})">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEvents</Endpoint_Name>
             <summary>
             This API method is used to save a list of event models.
             </summary>
             <param name="EventList">Represents a list of event models</param>
             <returns>IEnumerable{BQEResponseObject{Event}}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventController.PutEvent">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEvent</Endpoint_Name>
             <summary>
             This API method is used to UPDATE event model
             </summary>
             <returns>Event.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventController.DeleteEvent(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEvent</Endpoint_Name>
             <summary>
             This API method is used to DELETE event model
             </summary>
             <param name="id">Represents the identifier.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventController.DeleteEvents(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEvents</Endpoint_Name>
             <summary>
             This API method is used to DELETE a list of event models
             </summary>
             <param name="ids">Represents the identifiers.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventController.BatchDeleteEvent(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteEvent</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE event
             </summary>
             <param name="ids">Represents the identifiers.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventController.Move(BQECore.Model.Event)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>Move</Endpoint_Name>
             <summary>
             This API method is used to move an event object
             </summary>
             <param name="eEvent">Represents event object</param>
             <returns>Event Object</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.EventAttendeeController">
            <API>
            <API_Name>EventAttendee</API_Name>
            <API_Description>
            Core gives you an ability to work with events, these events open with calendar drop-down on the icon bar to give you an overview 
            of all the events scheduled for today or that week for the logged-in user. 
            You can click on the event to see the details or open the full Calendar. 
            There you can use different views (Month, Week or Day) and filters 
            to show events scheduled only in the current month for a particular project or employee.
             Allows you to retrieve a specific ro a list of event attendee
             Allows you to retrieve compact list of event attendee
             </API_Description>
             <summary>
             EventAttendeeController Inherits ApiController
             This class Controls all API Calls for EventAttendee
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.EventAttendeeController.GetEventAttendee(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEventAttendee</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific event attendee.
             We pass EventAttendee_ID or EventAttendeeID as parameter in for of event attendee list
             </summary>
             <param name="id">Represents the identifier.</param>
             <returns>EventAttendee Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EventAttendeeController.GetEventAttendeeCompactList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>GetEventAttendeeCompactList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all or filtered list of event attendee.
             </summary>
             <param name="parameters">Represents BQE parameter</param>
             <returns>Filtered list of event attendees</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.GeneralJournalController">
            <API>
            <API_Name>General Journal</API_Name>
            <API_Description>The General Journal screen allows you to record general journal entries or non-routine transactions such as depreciation, bad debts, sale of an asset, etc.It also enables you to edit transactions recorded in your accounts and make adjustments.At the closing of a financial year, accountants can use the General Journal to check any discrepancy in the company accounts and make adjustment entries.You can also use it to transfer amounts between income and expense accounts.Typically, only accountants who prefer traditional methods of accounting use a general journal.</API_Description>/// 
            <summary>
             GeneralJournal Inherits ApiController
             This class Controls all API Calls for General Journal Module
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralJournalController.GeneralJournals(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralJournalController.GetGeneralJournalList(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralJournalController.GetGeneralJournal(System.Guid)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralJournalController.PostGeneralJournal(BQECore.Model.GeneralJournal)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralJournalController.PutGeneralJournal" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralJournalController.DeleteGeneralJournal(System.Guid)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralJournalController.DeleteGeneralJournals(System.Guid[])" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralJournalController.BatchDeleteGeneralJournals(BQECore.Model.BatchDelete)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralJournalController.CloneJournal(System.Guid)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralJournalController.ReverseJournal(System.Guid)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralJournalController.GetNextJournalNumber" -->
        <member name="T:BQECore.Api.Controllers.GroupController">
            <API>
            <API_Name>Group</API_Name>
            <API_Description>Groups are containers for a homogeneous set of records that have something in common and are hence easily identifiable as a collection throughout Core.Records like projects, clients, employees, vendors, activities and expenses can be assigned to groups. The Groups screen is a centralized module that allows you to take items or records from the main list and bundle them together.</API_Description>
            <summary>
             This controller accepts all Group related API calls
             </summary>
             </API>
             <seealso cref="T:BQECore.Api.Controllers.ApiHelperController" />
        </member>
        <member name="M:BQECore.Api.Controllers.GroupController.Fill">
            <summary>
            Fills this instance.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.Groups(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.GetListWithCount(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.GetGroupItem(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.GetGroupByEntity(System.String,ModuleNames)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.GetAssignedGroupByEntity(System.String,ModuleNames)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.GetGroupDetail(BQECore.Model.BQEParameters,System.Guid)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.PostGroup(BQECore.Model.Group)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.PutGroup(BQECore.Model.Group)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.SetDefaultGroup(BQECore.Model.DefaultGroup)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.BatchUpdateGroup(BQECore.Model.BatchUpdateGroup)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.DeleteGroup(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.DeleteGroup(System.Guid[])" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.BatchDeleteGroup(BQECore.Model.BatchDelete)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.PostGroupDetail(BQECore.Model.GroupDetail)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.PostBulkAssignment(BQECore.Model.BulkAssignment)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.UnassignGroup(System.Guid,System.Guid)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GroupController.BulkGroupAssignment(BQECore.Model.BulkGroupAssignment)" -->
        <member name="T:BQECore.Api.Controllers.MemorizeReportController">
            <summary>
            MemorizeReportsController Inherits ApiController
            This class Controls all API Calls for MemorizeReports
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.GetReport(System.Guid)">
            <summary>
            GetMemorizeReports : This API is used to get particular MemorizeReports.
            We pass MemorizeReports_ID or MemorizeReportsID as parameter
            in for of MemorizeReports List
            </summary>
            <param name="id">The identifier.</param>
            <returns>MemorizeReports Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.Reports(BQECore.Model.BQEParameters)">
            <summary>
            MemorizeReports the list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{MemorizeReports}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.GetMemorizedFilterList(System.Guid)">
            <summary>
            This API is used to Get List of Filters
            </summary>
            <param name="id">Memorize Report ID</param>
            <returns>ReportFilterBank</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.GetMemorizedParameterList(System.Guid)">
            <summary>
            This API is used to Get List of Parameters
            </summary>
            <param name="id">Memorize Report ID</param>
            <returns>ReportFilterBank</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.PostReport(BQECore.Model.MemorizedReport)">
            <summary>
            POST api/values
            This Api is used to save MemorizeReports Model.
            it takes MemorizeReports Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>MemorizeReports.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.GetMemorizedReportGroups(BQECore.Model.BQEParameters)">
            <summary>
            Memorized Reports list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;SingleValue&lt;System.String&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.PostReports(System.Collections.Generic.IEnumerable{BQECore.Model.MemorizedReport})">
            <summary>
            This Api is used to save a list of MemorizeReports Models.
            </summary>
            <param name="MemorizeReportsList">A list of MemorizeReports models</param>
            <returns>IEnumerable{BQEResponseObject{MemorizeReports}}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.PutReport">
            <summary>
            PUT api/values/5
            This Method is used to update MemorizeReports Model
            </summary>
            <returns>MemorizeReports.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.DeleteReport(System.Guid)">
            <summary>
            This Method is used to delete MemorizeReports model
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.DeleteReport(System.Guid[])">
            <summary>
            This API is used to DELETE a list of MemorizeReports models
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.BatchDeleteIMemorizeReports(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete i memorize reports.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.PostMemorizedReportInfo(BQECore.Model.MemorizedReportInfo)">
            <summary>
            This Method is used to Save a MemorizeReport model.
            </summary>
            <param name="reportInfo">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.DeleteReportFilters(System.Guid)">
            <summary>
            This API is used to clear filters for a report.
            </summary>
            <param name="Report_ID">The report identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.DeleteAllReportFilters(ClearFilter)">
            <summary>
            This API is used to clear filters for all report.
            </summary>
            <param name="clearFilter">The clear filter.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.PrepareFilters(System.Collections.Generic.List{BQECore.Model.MemorizedReportFilter})">
            <summary>
                Prepares the list of filters before sending them to reports Appp.
            </summary>
            <param name="filters">List<MemorizedReportFilter></MemorizedReportFilter></param>
            <returns>List<MemorizedReportFilter></MemorizedReportFilter></returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.PrepareMemorizeReport(BQECore.Model.MemorizedReport)">
            <summary>
                Prepares the list of filters before sending them to reports Appp.
            </summary>
            <param name="filters">MemorizedReport</param>
            <returns>MemorizedReport</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MemorizeReportController.GetMemorizedReportURI(System.Guid)">
            <summary>
            Gets Report URI for memorized Report.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BQECore.Api.Controllers.QuickBooksController">
            <summary>
            QuickBooksController Inherits ApiController
            This class Controls all API Calls for QuickBooks Sync
            Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.Integration}</cref>
            </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetQBConsumerAppToken">
            <summary>
            Gets the qb consumer application token.
            </summary>
            <returns>OAuthToken.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetQBCompanyInfo">
            <summary>
            Gets the qb company information.
            </summary>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetActivity(BQECore.Model.BQEParameters)">
            <summary>
            Gets the activity.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetExpenses(BQECore.Model.BQEParameters)">
            <summary>
            Gets the expenses.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetClients(BQECore.Model.BQEParameters)">
            <summary>
            Gets the clients.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetEmployees(BQECore.Model.BQEParameters)">
            <summary>
            Gets the employees.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetVendors(BQECore.Model.BQEParameters)">
            <summary>
            Gets the vendors.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetProjects(BQECore.Model.BQEParameters)">
            <summary>
            Gets the projects.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetTimeEntries(BQECore.Model.BQEParameters)">
            <summary>
            Gets the time entries.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetExpenseLogs(BQECore.Model.BQEParameters)">
            <summary>
            Gets the expense logs.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetVendorBills(BQECore.Model.BQEParameters)">
            <summary>
            Gets the vendor bills.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetEstimates(BQECore.Model.BQEParameters)">
            <summary>
            Gets the estimates.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetInvoices(BQECore.Model.BQEParameters)">
            <summary>
            Gets the invoices.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetAccounts(BQECore.Model.BQEParameters)">
            <summary>
            Gets the accounts.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetClasses(BQECore.Model.BQEParameters)">
            <summary>
            Gets the classes.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetAccountsListfromQB(BQECore.Model.BQEParameters)">
            <summary>
            Gets the accounts listfrom qb.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetItemListfromQB(BQECore.Model.BQEParameters)">
            <summary>
            Gets the item listfrom qb.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetClassListFromQB(BQECore.Model.BQEParameters)">
            <summary>
            Gets the class list from qb.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetEmployeeListFromQB(BQECore.Model.BQEParameters)">
            <summary>
            Gets the employee list from qb.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetClientListFromQB(BQECore.Model.BQEParameters)">
            <summary>
            Gets the client list from qb.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetVendorListFromQB(BQECore.Model.BQEParameters)">
            <summary>
            Gets the vendor list from qb.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetProjectListFromQB(BQECore.Model.BQEParameters)">
            <summary>
            Gets the project list from qb.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetInvoiceListFromQB(BQECore.Model.BQEParameters)">
            <summary>
            Gets the invoice list from qb.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetPaymentsListFromQB(BQECore.Model.BQEParameters)">
            <summary>
            Gets the payments list from qb.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetVendorBillsListFromQB(BQECore.Model.BQEParameters)">
            <summary>
            Gets the vendor bills list from qb.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetPayments(BQECore.Model.BQEParameters)">
            <summary>
            Gets the payments.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetAllFromQB(BQECore.Model.BQEParameters)">
            <summary>
            Gets all from qb.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.CancelSync">
            <summary>
            Cancels the synchronize.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.SyncProgress">
            <summary>
            Synchronizes the progress.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetTaxCodesListfromQB(BQECore.Model.BQEParameters)">
            <summary>
            Gets the tax Codes list from qb.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.GetQBTaxCodes">
            <summary>
            Gets the qb tax code preferences.
            </summary>
            <returns>OAuthToken.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.SendActivity(BQECore.Model.BQEParameters)">
            <summary>
            Sends the activity.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.SendExpenses(BQECore.Model.BQEParameters)">
            <summary>
            Sends the expenses.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.SendClients(BQECore.Model.BQEParameters)">
            <summary>
            Sends the clients.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.SendEmployees(BQECore.Model.BQEParameters)">
            <summary>
            Sends the employees.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.SendVendors(BQECore.Model.BQEParameters)">
            <summary>
            Sends the vendors.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.SendProjects(BQECore.Model.BQEParameters)">
            <summary>
            Sends the projects.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.SendTimeEntries(BQECore.Model.BQEParameters)">
            <summary>
            Sends the time entries.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.SendVendorBills(BQECore.Model.BQEParameters)">
            <summary>
            Sends the vendor bills.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.SendInvoices(BQECore.Model.BQEParameters)">
            <summary>
            Sends the invoices.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.SendAccounts(BQECore.Model.BQEParameters)">
            <summary>
            Sends the accounts.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.SendClasses(BQECore.Model.BQEParameters)">
            <summary>
            Sends the classes.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.SendPayments(BQECore.Model.BQEParameters)">
            <summary>
            Sends the payments.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.QuickBooksController.SendAllToQB(BQECore.Model.BQEParameters)">
            <summary>
            Sends all to qb.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.ObjectExtensions">
            <summary>
            Class ObjectExtensions.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.ObjectExtensions.DeepCopy``1(``0)">
            <summary>
            Deep Copy
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entry">The entry.</param>
            <returns>T.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.AlertBaseTableController">
            <API>
            <API_Name>Alert Base Table</API_Name>
            <API_Description>
            Allows you to create an alert table base model
            Allows you to retrieve a specific or a list of alerts
            Allows you to update an alert table base model
            Allows you to delete an alert table base model
            </API_Description>
             <summary>
             AlertBaseTableController Inherits ApiController
             This class Controls all API Calls for AlertBaseTable
             Module.
             </summary>
            </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.AlertBaseTableController.GetAlertBaseTable(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAlertBaseTable</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE a specific alert base table. We pass AlertBaseTable_ID or AlertBaseTableID as parameter in for of AlertBaseTable List
             </summary>
             <param name="id">Represents the identifier.</param>
             <returns>AlertBaseTable Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AlertBaseTableController.AlertFilters(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>AlertFilters</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE alert filters. We pass alert_id as parameter.
             </summary>
             <param name="alert_id">Represents the alert identifier.</param>
             <returns>List&lt;AlertFilter&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AlertBaseTableController.AlertBaseTableList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>AlertBaseTableList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE  alert base tables list. We pass BQE parameters in the request header.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>IEnumerable{AlertBaseTable}.</returns>
             </Endpoint>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.AlertBaseTableController.PostAlertBaseTable(BQECore.Model.AlertBaseTable)" -->
        <member name="M:BQECore.Api.Controllers.AlertBaseTableController.PostAlertBaseTableList(System.Collections.Generic.IEnumerable{BQECore.Model.AlertBaseTable})">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostAlertBaseTableList</Endpoint_Name>
             <summary>
             This API method is used to CREATE a list of alert base table models.
             </summary>
             <param name="alertBaseTableList">Represents list of alert base table models</param>
             <returns>IEnumerable{BQEResponseObject{AlertBaseTable}}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AlertBaseTableController.PutAlertBaseTable">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutAlertBaseTable</Endpoint_Name>
             <summary>
              This API method is used to UPDATE alert base table model.
             </summary>
             <returns>AlertBaseTable.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AlertBaseTableController.DeleteAlertBaseTable(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteAlertBaseTable</Endpoint_Name>
             <summary>
             This API method is used to DELETE alert base table model. We pass id as parameter
             </summary>
             <param name="id">Represents the identifier.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AlertBaseTableController.DeleteAlertBaseTable(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteAlertBaseTable</Endpoint_Name>
             <summary>
              This API method is used to DELETE a list of alert base table models. We pass ids as parameter
             </summary>
             <param name="ids">Represents the identifiers.</param>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AlertBaseTableController.BatchDeleteAlertBase(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteAlertBase</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE alert base. We pass ids as parameter.
             </summary>
             <param name="ids">Represents the identifiers.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.AlertDetailsController">
            <API>
            <API_Name>Alert Details</API_Name>
            <API_Description>
            Allows you to create an alert detail model
            Allows you to delete an alert detail model
            Allows you to update an alert detail model
            Allows you to retrieve a specific or a list of alert detail
            </API_Description>
             <summary>
             AlertDetailsController Inherits ApiController
             This class Controls all API Calls for AlertDetails
             Module.
             </summary>
            </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.AlertDetailsController.GetAlertDetail(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAlertDetail</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific alert detail. We pass AlertDetails_ID or AlertDetailsID as parameter in for of AlertDetails List
             </summary>
             <param name="id">Represents the identifier.</param>
             <returns>AlertDetails Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AlertDetailsController.AlertDetailsList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>AlertDetailsList</Endpoint_Name>
             <summary>
              This API Method is used to RETRIEVE list of alert details. We pass BQE parameters in the request header.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{AlertDetails}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AlertDetailsController.PostAlertDetails(BQECore.Model.AlertDetail)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>ostAlertDetails</Endpoint_Name>
             <summary>
              This API method is used to CREATE alert details model. It takes AlertDetails Model as parameter
             </summary>
             <param name="value">Represents the value passed.</param>
             <returns>AlertDetails.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AlertDetailsController.PostAlertDetailsList(System.Collections.Generic.IEnumerable{BQECore.Model.AlertDetail})">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostAlertDetailsList</Endpoint_Name>
             <summary>
              This Api method is used to CREATE a list of alert details models.
             </summary>
             <param name="alertDetailsList">Represents list of AlertDetails models</param>
             <returns>IEnumerable{BQEResponseObject{AlertDetails}}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AlertDetailsController.PutAlertDetails">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutAlertDetails</Endpoint_Name>
             <summary>
              This API method is used to UPDATE alert details model.
             </summary>
             <returns>AlertDetails.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AlertDetailsController.DeleteAlertDetails(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteAlertDetails</Endpoint_Name>
             <summary>
              This API method is used to DELETE alert details model. We pass id as parameter.
             </summary>
             <param name="id">Represents the identifier.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AlertDetailsController.DeleteAlertDetails(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteAlertDetails</Endpoint_Name>
             <summary>
              This API method is used to DELETE a list of alert details models. We pass ids as parameter
             </summary>
             <param name="ids">Represents the identifiers.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AlertDetailsController.BatchDeleteAlertDetail(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteAlertDetail</Endpoint_Name>    
             <summary>
             This API method is used to batch DELETE alert detail. We pass ids as parameters.
             </summary>
             <param name="ids">Represents the identifiers.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.CompanyController">
            <API>
            <API_Name>Company</API_Name>
            <API_Description> 
            Company is the first place you should go to when getting started in Core.
            Here you can enter your business information and hence create a company profile. 
            This company information is used in reports and invoices. You can change any information later—except for the company name.
            Allows you to retrieve a company
            Allows you to create a company
            Allows you to retrieve company logo
             </API_Description>
             <summary>
             Class CompanyController.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.CompanyController.GetCompany">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetCompany</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a company.
             </summary>
             <returns>Company.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CompanyController.PutCompany">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutCompany</Endpoint_Name>
             <summary>
             This API method is used to CREATE a company.
             </summary>
             <returns>Company.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CompanyController.GetCompanyLogo">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetCompanyLogo</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE company logo.
             </summary>
             <returns>System.Byte[].</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.ContactController">
            <API>
            <API_Name>Contact</API_Name>
            <API_Description>
            Allows yout to retrieve a specific or a list of contacts
            Allows you to retrieve main contact of a specific entity
            Allows you to retrieve available contacts
            Allows you to create contact model
            Allows you to update contact model
            Allows you to delete contact model
             </API_Description>
             <summary>
             ContactController Inherits ApiController
             This class Controls all API Calls for Contact
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.ContactList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>ContactList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE list of contacts.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable&lt;ContactList&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.EntityContactList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EntityContactList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE entity contact list.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable&lt;EntityContactList&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.Contacts(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>Contacts</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE list of contacts
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>Contact List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.GetEntityContacts(System.Guid,ModuleNames)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEntityContacts</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE contacts of a specific entity. We pass id and moduleNames as parameter.
             </summary>
             <param name="id">Represents the Entity_ID parameter</param>
             <param name="moduleNames">Represents the module names parameter.</param>
             <returns>Contact List</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.GetMainContact(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetMainContact</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE main contact of a specific entity.
             </summary>
             <param name="Entity_ID">Represents the entity identifier parameter.</param>
             <returns>Contact</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.GetAvailableContacts(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAvailableContacts</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE available contacts.
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>IEnumerable&lt;Contact&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.GetContact(System.Guid)">
            <Endpoint>
            <Verb>Get</Verb>
            <Endpoint_Name>GetContact</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific contact.
             </summary>
             <param name="id">Represents the Contact_ID parameter</param>
             <returns>Contact Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.PostContact(BQECore.Model.Contact)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostContact</Endpoint_Name>
             <summary>
             This API method is used to CREATE contact model.
             </summary>
             <param name="value">Represents the contact model parameter</param>
             <returns>Contact.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.PostEntityContact(BQECore.Model.EntityContact)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEntityContact</Endpoint_Name>
             <summary>
             This API method is used to CREATE entity contact.
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>Contact.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.PutContact">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutContact</Endpoint_Name>
             <summary>
             This API method is used to UPDATE contact model.
             </summary>
             <returns>Contact.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.PutEntityContact">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEntityContact</Endpoint_Name>
             <summary>
             This API method is used to UPDATE entity contact.
             </summary>
             <returns>Contact.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.DeleteContact(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteContact</Endpoint_Name>
             <summary>
             This API method is used to DELETE contact model
             </summary>
             <param name="id">Represents the Contact_ID parameter</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.DeleteContact(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteContact</Endpoint_Name>
             <summary>
             This API method is used to DELETE list of contact model
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.BatchDeleteContact(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteContact</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE contact.
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.PostClone(BQECore.Model.CloneContact)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostClone</Endpoint_Name>
             <summary>
             This API method is used to clone a contact.
             </summary>
             <param name="value">Represents the CloneContact Model parameter</param>
             <returns>Contact.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.GetNewClientContact(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetNewClientContact</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE new client contact object having address field filled with the client address.
             </summary>
             <param name="id1">Represents the id1 parameter.</param>
             <returns>Contact.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ContactController.GetDropdownLists(DropdownValuesType)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetDropDownLists</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE drop down values for various drop downs
             </summary>
             <param name="id">Represents value of type dropdown values type</param>
             <returns>Dropdown values</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.AssignedContactsController">
            <API>
            <API_Name>Assigned Contacts</API_Name>
            <API_Description>
            Allows you to create assigned contacts model
            Allows you to update assigned contacts model
            Allows you to retrieve contacts assigned to an entity
            Allows you to delete assigned contacts model
            </API_Description>
             <summary>
             AssignedContactsController Inherits ApiController
             This class Controls all API Calls for AssignedContacts
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.AssignedContactsController.GetAssignedContacts(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAssignedContacts</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all the contacts assigned to an entity. We pass id as parameter.
             </summary>
             <param name="id">Represents the Entity_id.</param>
             <returns>AssignedContactsList List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AssignedContactsController.PostAssignedContacts(BQECore.Model.AssignedContact)">
            POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostAssignedContacts</Endpoint_Name>    
             <summary>
             This API method is used to CREATE assigned contacts model. It takes AssignedContacts Model as parameter
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>AssignedContacts.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AssignedContactsController.PutAssignedContacts">
            PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutAssignedContacts</Endpoint_Name>    
             <summary>
             This API method is used to UPDATE assigned contacts model.
             </summary>
             <returns>AssignedContacts.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AssignedContactsController.DeleteAssignedContactsRefrence(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name> DeleteAssignedContactsRefrence</Endpoint_Name>
            <summary>
             This API method is used to DELETE assigned contacts model by reference. We pass id as parameter.
            </summary>
            <param name="id">Represents the identifier passed.</param>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AssignedContactsController.DeleteAssignedContacts(System.Guid,ModuleNames)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteAssignedContacts</Endpoint_Name>
             <summary>
             This API method is used to DELETE assigned contacts model for a specific module. We pass id and module as parameter.
             </summary>
             <param name="id">Represents the identifier passed.</param>
             <param name="module">Represents the module name.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AssignedContactsController.DeleteAssignedContacts(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteAssignedContacts</Endpoint_Name>
             <summary>
             This API method is used to DELETE a list of assigned contacts models. We pass ids as parameter.
             </summary>
             <param name="ids">Represents the identifiers passed.</param>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.AssignedContactsController.BatchDeleteAssignedContacts(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteAssignedContacts</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE assigned contacts. We pass ids as parameter.
             </summary>
             <param name="ids">Represents the identifiers.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.RulesController">
            <summary>
            Class RulesController.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.RulesController.GetProjectRules">
            <summary>
            Gets the project rules.
            </summary>
            <returns>IEnumerable&lt;Rule&lt;ProjectRules&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RulesController.GetProjectRules(System.Guid)">
            <summary>
            Gets the project rules.
            </summary>
            <param name="id">The identifier.</param>
            <returns>IEnumerable&lt;Rule&lt;ProjectRules&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RulesController.GetUnAssignedProjectRules(System.Guid)">
            <summary>
            Gets the unassigned project rules.
            </summary>
            <param name="id">The identifier.</param>
            <returns>IEnumerable&lt;Rule&lt;ProjectRules&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RulesController.AssignRule(BQECore.Model.AssignRule)">
            <summary>
            POST api/values
            This Api is used to save AssignRule Model.
            it takes AssignRule Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>int.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RulesController.UnAssignRule(System.Guid,System.Guid)">
            <summary>
            api/values
            This Api is used to delete AssignRule Model.
            it takes entity ID and rule id  as parameter
            </summary>
            <param name="entity_ID">Entity ID</param>
            <param name="rule_ID">Rule ID</param>
            <returns>int</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.SkillAssignmentController">
            <summary>
            SkillAssignmentController Inherits ApiController
            This class Controls all API Calls for SkillAssignment
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.SkillAssignmentController.GetSkillAssignments(System.Guid)">
            <summary>
            SkillAssignment: Get the list of Skills for unique Employee id.
            </summary>
            <param name="id">The identifier.</param>
            <returns>IEnumerable{SkillAssignment}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SkillAssignmentController.PostSkillAssignment(BQECore.Model.SkillAssignment)">
            <summary>
            POST api/values
            This Api is used to save SkillAssignment Model.
            it takes SkillAssignment Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>SkillAssignment.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SkillAssignmentController.DeleteSkillAssignment(System.Guid)">
            <summary>
            This Method is used to delete SkillAssignment model
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.SkillAssignmentController.DeleteSkillAssignment(System.Guid[])">
            <summary>
            This API is used to DELETE a list of SkillAssignment models
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.SkillAssignmentController.BatchDeleteSkilListAssignment(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete skil list assignment.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.SkillController">
            <summary>
            SkillTableController Inherits ApiController
            This class Controls all API Calls for SkillTable
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.SkillController.Skills(BQECore.Model.BQEParameters)">
            <summary>
            SkillTable the list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{SkillTable}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SkillController.GetSkill(System.Guid)">
            <summary>
            GetSkill : This API is used to get particular Skill.
            We pass Skill_ID or SkillID as parameter
            in for of Skill List
            </summary>
            <param name="id">Skill ID.</param>
            <returns>SkillTable Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SkillController.PostSkill(BQECore.Model.Skill)">
            <summary>
            POST api/values
            This Api is used to save SkillTable Model.
            it takes SkillTable Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>SkillTable.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SkillController.PutSkill">
            <summary>
            PUT api/values/5
            This Method is used to update SkillTable Model
            </summary>
            <returns>SkillTable.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SkillController.DeleteSkill(System.Guid)">
            <summary>
            This Method is used to delete SkillTable model
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.SkillController.DeleteSkill(System.Guid[])">
            <summary>
            This API is used to DELETE a list of SkillTable models
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.SkillController.BatchDeleteSkill(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete skill.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.SubmittalController">
            <summary>
            SubmittalController Inherits ApiController
            This class Controls all API Calls for Submittal
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.SubmittalController.GetSubmittal(System.Guid)">
            <summary>
            GetSubmittal : This API is used to get particular Submittal.
            We pass Submittal_ID or SubmittalID as parameter
            in for of Submittal List
            </summary>
            <param name="id">Submittal ID.</param>
            <returns>Submittal Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SubmittalController.Submittals(BQECore.Model.BQEParameters)">
            <summary>
            Submittalses the specified parameters.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;Submittal&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SubmittalController.SubmittalList(BQECore.Model.BQEParameters)">
            <summary>
            SubmittalList : This Api is used to get all the Activities
            in the form of Submittal List
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>SubmittalList List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SubmittalController.PostSubmittal(BQECore.Model.Submittal)">
            <summary>
            POST api/values
            This Api is used to save Submittal Model.
            it takes Submittal Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>Submittal.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SubmittalController.PutSubmittal">
            <summary>
            PUT api/values/5
            This Method is used to update Submittal Model
            </summary>
            <returns>Submittal.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SubmittalController.DeleteSubmittal(System.Guid)">
            <summary>
            This Method is used to delete Submittal model
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.SubmittalController.DeleteSubmittals(System.Guid[])">
            <summary>
            This API is used to DELETE a list of Submittal models
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.SubmittalController.BatchDeleteSubmittal(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete submittal.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SubmittalController.GetSubmittalStatusHistory(System.Guid)">
            <summary>
            Gets submittal status history.
            </summary>
            <param name="id">Submittal ID.</param>
            <returns>The submittal status history.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SubmittalController.SubmittalStatusHistories(BQECore.Model.BQEParameters)">
            <summary>
            (An Action that handles HTTP GET requests) (An Action that handles HTTP POST requests)
            enumerates submittal status histories in this collection.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>An enumerator that allows foreach to be used to process submittal status histories in this
            collection.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SubmittalController.PostSubmittalStatusHistory(BQECore.Model.SubmittalStatusHistory)">
            <summary>
            Posts a submittal status history.
            </summary>
            <param name="value">The value.</param>
            <returns>A SubmittalStatusHistory.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SubmittalController.PutSubmittalStatusHistory">
            <summary>
            Puts submittal status history.
            </summary>
            <returns>A SubmittalStatusHistory.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SubmittalController.DeleteSubmittalStatusHistory(System.Guid)">
            <summary>
            Deletes the submittal status history described by ID.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="T:BQECore.Api.Controllers.RFIController">
            <summary>
            RFIController Inherits ApiController
            This class Controls all API Calls for RFI
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.RFIController.GetRFI(System.Guid)">
            <summary>
            GetRFI : This API is used to get particular RFI.
            We pass RFI_ID or RFIID as parameter
            in for of RFI List
            </summary>
            <param name="id">RFI ID.</param>
            <returns>RFI Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RFIController.RFIs(BQECore.Model.BQEParameters)">
            <summary>
            Rfs the is.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;RFI&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RFIController.RFIList(BQECore.Model.BQEParameters)">
            <summary>
            RFIList : This Api is used to get all the Activities
            in the form of RFI List
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>RFIList List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RFIController.PostRFI(BQECore.Model.RFI)">
            <summary>
            POST api/values
            This Api is used to save RFI Model.
            it takes RFI Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>RFI.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RFIController.PutRFI">
            <summary>
            PUT api/values/5
            This Method is used to update RFI Model
            </summary>
            <returns>RFI.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RFIController.DeleteRFI(System.Guid)">
            <summary>
            This Method is used to delete RFI model
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.RFIController.DeleteRFIs(System.Guid[])">
            <summary>
            This API is used to DELETE a list of RFI models
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.RFIController.BatchDeleteRfis(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete rfis.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.DrawingController">
            <API>
            <API_Name>Drawing</API_Name>
            <API_Description>
            Drawing allows you to set up and review project-related drawings.
            Drawings are specifically used in the architecture and engineering industries. 
            Allows you to retrieve a particular or a list of drawings
            Allows you to create drawing model
            Allows you to update drawing model
            Allows you to delete drawing model
             </API_Description>
             <summary>
             DrawingController Inherits ApiController
             This class Controls all API Calls for Drawing
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.DrawingController.GetDrawing(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetDrawing</Endpoint_Name>
             <summary>
            This API method is used to RETRIEVE a specific drawing. We pass Drawing_ID or DrawingID as parameter in for drawing list
             </summary>
             <param name="id">Represents the Drawing ID parameter.</param>
             <returns>Drawing Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.DrawingController.Drawings(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>Drawings</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a list of drawings with specified parameters.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable&lt;Drawing&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.DrawingController.DrawingList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>DrawingList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all the activities in the form of a drawing list.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>DrawingList List</returns>
             </Endpoint>
            
        </member>
        <member name="M:BQECore.Api.Controllers.DrawingController.PostDrawing(BQECore.Model.Drawing)">
             POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostDrawing</Endpoint_Name>
             <summary>
             This API method is used to save a drawing model. It takes drawing model as parameter
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>Drawing.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.DrawingController.PutDrawing">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutDrawing</Endpoint_Name>
             <summary>
             This API method is used to UPDATE drawing model
             </summary>
             <returns>Drawing.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.DrawingController.DeleteDrawing(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteDrawing</Endpoint_Name>
             <summary>
             This API method is used to DELETE drawing model
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.DrawingController.DeleteDrawings(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteDrawings</Endpoint_Name>
             <summary>
             This API method is used to DELETE a list of drawing models
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.DrawingController.BatchDeleteDrawings(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteDrawings</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE drawings.
             </summary>
             <param name="ids">Represents the identifiers parameters.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.HostLanderController">
            <API>
            <API_Name>HostLander</API_Name>
            <API_Description>HostLander</API_Description>
            <summary>
            This class Controls all General purpose API
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <!-- Badly formed XML comment ignored for member "P:BQECore.Api.Controllers.HostLanderController.IsValidHostRequest" -->
        <member name="P:BQECore.Api.Controllers.HostLanderController.IsValidMigratorRequest">
            <summary>
            Gets a value indicating whether this instance is valid migrator request.
            </summary>
            <value><c>true</c> if this instance is valid migrator request; otherwise, <c>false</c>.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.ValidateRequest(BQECoreSharedLib.Sender)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.CreateClientDatabase(BQECoreSharedLib.CreateDbInfo)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.SetVersion(BQECoreSharedLib.CompanyConnection)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.CreateEmptytDatabase(BQECoreSharedLib.CreateDbInfo)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.PostUser(BQECoreSharedLib.HostUser)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.PutUser(BQECoreSharedLib.HostUser)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.FillControllerMapping(System.Collections.Generic.List{BQECoreSharedLib.Package})" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.CreateStoreProcedureAndTrigger(BQECoreSharedLib.Sender)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.EnableHAFeature(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.RemoveSecondaryDBFromHA(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.JoinSecondaryDBToHA(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.RemovePrimaryDBFromHA(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.DropDBFromSecondary(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.DeleteDBFromSharedLocation(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.RemoveCustomerDBFromHA(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.DeleteFailedMigrations" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.DeleteClientDatabase" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.DropClientDatabase(BQECoreSharedLib.HACompanyStatus)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.DeleteEmployee(System.Guid,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.RefreshUpdateQuery(BQECoreSharedLib.Update)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.UpdateCustomerDatabase" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.PostSyncVersion(BQECoreSharedLib.CoreSyncCompanyVersion)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.LinkUser(BQECoreSharedLib.UserCoreLink)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.ClearAccountID(BQECoreSharedLib.UserCoreLink)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.UpdateEmployeeDefaults" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.UpdateOwnerEmployeeAfterMigration(System.Guid)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.SaveDefaultsList(System.Collections.Generic.List{BQECoreSharedLib.DataObject})" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.MoveCustomerDBToPaidInfrastructure" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.RestoreBackup(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.ExecCustomLabelProcedure(BQECoreSharedLib.Sender)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.PostDashBoardFromHost(System.Collections.Generic.List{BQECoreSharedLib.DataObject})" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.UpdateDashboardGuids" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.UpdateGlobalEmailSettings" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.HostLanderController.SecurityProfileList(BQECore.Model.BQEParameters)" -->
        <member name="T:BQECore.Api.Controllers.CreditMemoController">
            <API>
            <API_Name>Credit Memo</API_Name>
            <API_Description>
            Credit memo is a document used for notifying clients that their outstanding invoice balance has been reduced or that they are being refunded. 
            Credit is given to clients in favor or exchange for any task or activity. 
            If a client has a credit with you, it is a liability and you need to refund or adjust that.
            Allows you to create credit memo
            Allows you to retrieve credit memo
            Allows you to delete credit memo
            Allows you to update credit memo
             </API_Description>
             <summary>
             CreditMemoController Inherits ApiController
             This class Controls all API Calls for Credit Memo
             Module.
             </summary>
             </API>
             <seealso>
                 <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.CreditMemo}</cref>
             </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditMemoController.CreditMemos(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>CreditMemos</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all the records exisiting for credit memo
             Does not fill details of Items
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable&lt;CreditMemo&gt;.</returns>
             </Endpoint>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.CreditMemoController.List(BQECore.Model.BQEParameters)" -->
        <member name="M:BQECore.Api.Controllers.CreditMemoController.GetItem(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetItem</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a single record against a specified identifier.
             </summary>
             <param name="CreditMemo_ID">Represents the credit memo identifier parameter.</param>
             <returns>CreditMemo</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditMemoController.PostCreditMemo(BQECore.Model.CreditMemo)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostCreditMemo</Endpoint_Name>
             <summary>
             This API method is used to CREATE a credit memo instance in the database.
             </summary>
             <param name="memo">Represents the memo parameter.</param>
             <returns>CreditMemo.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditMemoController.PutCreditMemo">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutCreditMemo</Endpoint_Name>
             <summary>
             This API method is used to UPDATE credit memo model
             </summary>
             <returns>CreditMemo.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditMemoController.DeleteCreditMemo(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeletCreditMemo</Endpoint_Name>
             <summary>
             This API method is used to DELET credit memo model
             </summary>
             <param name="CreditMemo_ID">Represents the credit memo identifier parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditMemoController.DeleteCreditMemos(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeletCreditMemos</Endpoint_Name>
             <summary>
             This API method is used to DELETE a list of credit memo model
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditMemoController.BatchDeleteCreditMemo(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteCreditMemo</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE credit memo.
             </summary>
             <param name="ids">Rpresents the identifiers parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditMemoController.GetRefundRetainerList(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
            This API method is used to RETRIEVE a list of <see cref="T:BQECore.Model.RefundRetainer" />  retainer refunds.
             </summary>
             <param name="Client_ID">Represents the client identifier parameter.</param>
             <returns>IEnumerable&lt;RefundRetainer&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.EmployeeBenefitUsageController">
            <API>
            <API_Name>Employee Benefit Usage</API_Name>
            <API_Description>
            Allows you to retrieve a specific or a list of employee benefit usage entries
            Allows you to create new employee benefit usage entry
            Allows you to update employee benefit usage model
            Allows you to delete employee benefit usage model
            Allows you to retrieve sick Vaccation benefits accrued by an employee
             </API_Description>
             <summary>
             EmployeeBenefitUsageController Inherits ApiController
             This class Controls all API Calls for EmployeeBenefitUsage
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeBenefitUsageController.EmployeeBenefitUsages(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EmployeeBenefitUsages</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE employee benefit usage list .
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{EmployeeBenefitUsage}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeBenefitUsageController.GetEmployeeBenefitUsage(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmployeeBenefitUsage</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific employee benefit usage entry by sending EmployeeBenefitUsage_id
             </summary>
             <param name="id">Represents EmployeeBenefitUsage_id parameter</param>
             <returns>EmployeeBenefitUsage.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeBenefitUsageController.PostEmployeeBenefitUsage(BQECore.Model.EmployeeBenefitUsage)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEmployeeBenefitUsage</Endpoint_Name>
             <summary>
             This API method is used to CREATE new employee benefit usage entry. It takes EmployeeBenefitUsage Model as parameter
             
             </summary>
             <param name="value">Represents the value Parameter.</param>
             <returns>EmployeeBenefitUsage.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeBenefitUsageController.PutEmployeeBenefitUsage">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEmployeeBenefitUsage</Endpoint_Name>
             <summary>
             This API method is used to UPDATE employee benefit usage model
             </summary>
             <returns>EmployeeBenefitUsage.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeBenefitUsageController.DeleteEmployeeBenefitUsage(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmployeeBenefitUsage</Endpoint_Name>
             <summary>
             This API method is used to DELETE employee benefit usage model
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>System.Int32.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeBenefitUsageController.DeleteEmployeeBenefitUsages(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmployeeBenefit</Endpoint_Name>
             <summary>
             This API method is used to DELETE list of employee benefit usage model
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeBenefitUsageController.BatchDeleteEmployeeBenefitUsages(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteEmployeeBenefitUsages</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE employee benefit usages.
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeBenefitUsageController.GetBenefitsAccrued(System.Guid,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetBenefitsAccrued</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE sick vaccation benefits accrued by an employee
             </summary>
             <param name="employeeID">Represents the Employee_ID parameter</param>
             <param name="dateAsOf">Represents the DateAsOf parameter</param>
             <param name="from">Represents the from parameter</param>
             <returns>BenefitAccrued</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.EmployeeTerminationController">
            <API>
            <API_Name>Employee Termination</API_Name>
            <API_Description>
            Employee termination is the release of an employee against his or her will. 
            Termination may be, at will, for cause, or for lack of work.
            Allows you to retrieve a specific or a list of employee termination entry
            Allows you to create employee termination entry
            Allows you to terminate an employee
            Allows you to retrieve termination type ist for dropdown
            Allows you to retrieve termination reason list for dropdown
             </API_Description>
             <summary>
             EmployeeTerminationController Inherits ApiController
             This class Controls all API Calls for EmployeeTermination
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeTerminationController.EmployeeTerminations(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EmployeeTerminations</Endpoint_Name>
             <summary>
             This API method is used RETRIEVE employee termination list.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{EmployeeTermination}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeTerminationController.GetEmployeeTermination(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmployeeTermination</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific employee termination entry by sending EmployeeTermination_id
             </summary>
             <param name="id">Represents EmployeeTermination_id parameter</param>
             <returns>EmployeeTermination.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeTerminationController.SaveEmployeeTermination(BQECore.Model.EmployeeTermination)">
             POST API/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>SaveEmployeeTermination</Endpoint_Name>
             <summary>
             This API method is used to CREATE new employee termination entry. It takes EmployeeTermination Model as parameter
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>EmployeeTermination.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeTerminationController.TerminateEmployee(System.Guid)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>TerminateEmployee</Endpoint_Name>
             <summary>
             This API method is used to terminate an employee
             </summary>
             <param name="id">Represents Employee_ID to be terminated</param>
             <returns>EmployeeTermination.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeTerminationController.GetTerminationTypeList">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetTerminationTypeList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE termination type list for dropdown.
             </summary>
             <returns>TerminationType List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeTerminationController.GetTerminationReasonList">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetTerminationReason</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE termination reason list for dropdown.
             </summary>
             <returns>TerminationReason List</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.EmployeeBenefitController">
            <API>
            <API_Name>Employee Benefit</API_Name>
            <API_Description>Core provides employees with numerous benefits including Allowance, Medicare, Vaccation etc.
            Allows you to retrieve a specific or a list of employee benefit entries
            Allows you to create new employee benefit entry
            Allows you to update employee benefit  model
            Allows you to delete employee benefit model
             </API_Description>
             <summary>
             EmployeeBenefitController Inherits ApiController
             This class Controls all API Calls for EmployeeBenefit
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeBenefitController.EmployeeBenefits(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EmployeeBenefits</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE employee benefit list .
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{EmployeeBenefit}.</returns>
             </Endpoint>
             <Arguments>Optional- IncludeAccruedValues (Boolean), DateAsOf (DateTime), From (DateTime)</Arguments>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeBenefitController.GetEmployeeBenefit(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmployeeBenefit</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific employee benefit entry by sending EmployeeBenefit_id
             </summary>
             <param name="id">Represents the EmployeeBenefit_id parameter</param>
             <returns>EmployeeBenefit.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeBenefitController.PostEmployeeBenefit(BQECore.Model.EmployeeBenefit)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEmployeeBenefit</Endpoint_Name>
             <summary>
             This API method is used to CREATE new employee benefit entry. It takes EmployeeBenefit Model as parameter
             </summary>
             <param name="value">Represents the value parameter.</param>
             </Endpoint>
             <returns>EmployeeBenefit.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeBenefitController.PutEmployeeBenefit">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEmployeeBenefit</Endpoint_Name>
             <summary>
             This API method is used to UPDATE employee benefit model
             </summary>
             <returns>EmployeeBenefit.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeBenefitController.DeleteEmployeeBenefit(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmployeeBenefit</Endpoint_Name>
             <summary>
             This API method is used to DELETE employee benefit model
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>System.Int32.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeBenefitController.DeleteEmployeeBenefits(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmployeeBenefits</Endpoint_Name>
             <summary>
             This API method is used to DELETE list of employee benefit model
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeBenefitController.BatchDeleteEmployeeBenefits(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteEmployeeBenefits</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE employee benefits.
             </summary>
             <param name="ids">REpresents the identifiers parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.EmployeeSalaryHistoryController">
            <API>
            <API_Name>Employee Salary History</API_Name>
            <API_Description>
            Salary is a fixed amount of money or compensation paid to an employee by an employer in return for work performed
            Allows you to retrieve a specific or a list of employee salary history.
            Allows you to create employee salary history entry
            Allows you to update employee salary history model
            Allows you to delete employee salary history model
             </API_Description>
             <summary>
             EmployeeSalaryHistoryController Inherits ApiController
             This class Controls all API Calls for EmployeeSalaryHistory
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeSalaryHistoryController.EmployeeSalaryHistories(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EmployeeSalaryHistories</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE employee salary history list .
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{EmployeeSalaryHistory}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeSalaryHistoryController.GetEmployeeSalaryHistory(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmployeeSalaryHistory</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific employee salary history entry by sending EmployeeSalaryHistory_id
             </summary>
             <param name="id">Represents EmployeeSalaryHistory_id parameter</param>
             <returns>EmployeeSalaryHistory.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeSalaryHistoryController.PostEmployeeSalaryHistory(BQECore.Model.EmployeeSalaryHistory)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEmployeeSalaryHistory</Endpoint_Name>
             <summary>
             This API method is used to CREATE new employee salary history entry. It takes employee salary history model as parameter
             </summary>
             <param name="value">Represents the value parameter.</param>
             </Endpoint>
             <returns>EmployeeSalaryHistory.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeSalaryHistoryController.PutEmployeeSalaryHistory">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEmployeeSalaryHistory</Endpoint_Name>
             <summary>
             This API method is used to UPDATE employee salary history model
             </summary>
             <returns>EmployeeSalaryHistory.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeSalaryHistoryController.DeleteEmployeeSalaryHistory(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmployeeSalaryHistory</Endpoint_Name>
             <summary>
             This Method is used to delete EmployeeSalaryHistory model
             </summary>
             <param name="id">The identifier.</param>
             <returns>System.Int32.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeSalaryHistoryController.DeleteEmployeeSalaryHistorys(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmployeeSalaryHistorys</Endpoint_Name>
             <summary>
             This API method is used to DELETE list of employee review detail model
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeSalaryHistoryController.BatchDeleteEmployeeSalaryHistories(BQECore.Model.BatchDelete)">
            <Endpoint></Endpoint>
            <Verb></Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             Batches the delete employee salary histories.
             </summary>
             <param name="ids">The ids.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.EmployeeIncidentController">
            <API></API>
            <API_Name></API_Name>
            <API_Description>
            Incidents that occur at the workplace are basically defined as an unplanned, undesired event that may cause death,
            Injury or Illness, property damage or a dangerous event.
            Allows you to to retrieve a specific or a list of employee incident entries
            Allows you to create employee incident entry
            Allows you to update employee incident model
            Allows you to delet a specific incident or a list of incidents
             </API_Description>
             <summary>
             EmployeeIncidentController Inherits ApiController
             This class Controls all API Calls for EmployeeIncident
             Module.
             </summary>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeIncidentController.EmployeeIncidents(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EmployeeIncidents</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE employee incident list.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{EmployeeIncident}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeIncidentController.GetEmployeeIncident(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmployeeIncident</Endpoint_Name>
             <summary>
             This API method is used RETRIEVE a specific employee incident entry by sending EmployeeIncident_id
             </summary>
             <param name="id">Represents EmployeeIncident_id</param>
             <returns>EmployeeIncident.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeIncidentController.PostEmployeeIncident(BQECore.Model.EmployeeIncident)">
             POST API/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEmployeeIncident</Endpoint_Name>
             <summary>
             This API method is used to CREATE new employee incident entry. It takes EmployeeIncident Model as parameter
             </summary>
             <param name="value">Represents the value.</param>
             </Endpoint>
             <returns>EmployeeIncident.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeIncidentController.PutEmployeeIncident">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEmployeeIncident</Endpoint_Name>
             <summary>
             This API method is used to UPDATE employee incident model
             </summary>
             <returns>EmployeeIncident.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeIncidentController.DeleteEmployeeIncident(System.Guid)">
             DELETE api/values/5
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmployeeIncident</Endpoint_Name>
             <summary>
             This API method is used to DELETE employee incident model
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>System.Int32.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeIncidentController.DeleteEmployeeIncidents(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmployeeIncidents</Endpoint_Name>
             <summary>
             This API method is used to DELETE list of employee incident model
             </summary>
             <param name="ids">Represents the identifiers parameters.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeIncidentController.BatchDeleteEmployeeIncidents(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteEmployeeIncidents</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE employee incidents.
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.EmployeeReviewDetailController">
            <API>
            <API_Name>Employee Review Detail</API_Name>
            <API_Description>
            Employee review is the assessment and evaluation of an employees job performance. 
            Most companies have an employee evaluation system wherein employees are evaluated on a regular basis (often once a year).
            Typically these assessments are done at year end or on the employee's service.
            Allows you to retrieve a specific or a list of employee review detail entries
            Allows you to create new employee review detail entry
            Allows you to update employee review detail model
            Allows you to delete a specific or a list of employee review detail model
             </API_Description>
             <summary>
             EmployeeReviewDetailController Inherits ApiController
             This class Controls all API Calls for EmployeeReviewDetail
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeReviewDetailController.EmployeeReviewDetails(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EmployeeReviewDetails</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE employee review detail list.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{EmployeeReviewDetail}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeReviewDetailController.GetEmployeeReviewDetail(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmployeeReviewDetail</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific employee review detail entry by sending EmployeeReviewDetail_id
             </summary>
             <param name="id">Represents the EmployeeReviewDetail_id</param>
             <returns>EmployeeReviewDetail.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeReviewDetailController.PostEmployeeReviewDetail(BQECore.Model.EmployeeReviewDetail)">
             POST API/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEmployeeReviewDetail</Endpoint_Name>
             <summary>
             This API method is used to CREATE new employee review detail entry. It takes employee review detail model as parameter
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>EmployeeReviewDetail.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeReviewDetailController.PutEmployeeReviewDetail">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEmployeeReviewDetail</Endpoint_Name>
             <summary>
             This API method is used to UPDATE employee review detail model
             </summary>
             <returns>EmployeeReviewDetail.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeReviewDetailController.DeleteEmployeeReviewDetail(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmployeeReviewDetail</Endpoint_Name>
             <summary>
             This API method is used to DELETE employee review detail modelm
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>System.Int32.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeReviewDetailController.DeleteEmployeeReviewDetails(System.Guid[])">
            <Endpoint></Endpoint>
            <Verb></Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API is used to DELETE list of EmployeeReviewDetail model
             </summary>
             <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeReviewDetailController.BatchDeleteEmployeeReviewDetail(BQECore.Model.BatchDelete)">
            <Endpoint></Endpoint>
            <Verb></Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             Batches the delete employee review detail.
             </summary>
             <param name="ids">The ids.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.EmployeeReviewController">
            <API>
            <API_Name>Employee Review</API_Name>
            <API_Description>
            Employee review is the assessment and evaluation of an employees job performance. 
            Most companies have an employee evaluation system wherein employees are evaluated on a regular basis (often once a year).
            Typically these assessments are done at year end or on the employee's service.
             Allows you to retrieve a list or a particular employee review entry
             Allows you to create employee review entry model
             Allows you to update employee review model
             Allows you to delete employee review model
             </API_Description>
             <summary>
             EmployeeReviewController Inherits ApiController
             This class Controls all API Calls for EmployeeReview
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeReviewController.EmployeeReviews(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EmployeeReviews</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE employee reviewes list.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{EmployeeReview}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeReviewController.GetEmployeeReview(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmployeeReview</Endpoint_Name>
             <summary>
             This API is used to RETRIEVE a specific employee review entry by sending EmployeeReview_id
             </summary>
             <param name="id">Represents EmployeeReview_id</param>
             <returns>EmployeeReview.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeReviewController.PostEmployeeReview(BQECore.Model.EmployeeReview)">
             POST API/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEmployeeReview</Endpoint_Name>
             <summary>
             This API method is used to CREATE new employee review entry. It takes EmployeeReview Model as parameter
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>EmployeeReview.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeReviewController.PutEmployeeReview">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEmployeeReview</Endpoint_Name>
             <summary>
             This API method is used to UPDATE employee review model
             </summary>
             <returns>EmployeeReview.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeReviewController.DeleteEmployeeReview(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmployeeReview</Endpoint_Name>
             <summary>
             This API method is used to DELETE employee review model
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>System.Int32.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeReviewController.DeleteEmployeeReviews(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmployeeReviews</Endpoint_Name>
             <summary>
             This API method is used to DELETE list of employee review model
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeReviewController.BatchDeleteEmployeeReviews(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteEmployeeReviews</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE employee reviews.
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.EmployeePayrollController">
            <API>
            <API_Name>Employee Payroll</API_Name>
            <API_Description>
            A payroll is a company's list of its employees, but the term is commonly used to refer to: the total amount of money that a company pays to its employees.
            a company's records of its employees' salaries and wages, bonuses, and withheld taxes.
            Allows you to retrieve employee payroll entry
            Allows you to create employee payroll entry
            Allows you to retrieve dropdown list values for dropdowns
             </API_Description>
             <summary>
             EmployeePayrollController Inherits ApiController
             This class Controls all API Calls for EmployeePayroll
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeePayrollController.EmployeePayrolls(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EmployeePayrolls</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE employee payroll list.
             </summary>
             <param name="parameters">The parameters.</param>
             <returns>IEnumerable{EmployeePayroll}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeePayrollController.GetEmployeePayroll(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmployeePayroll</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific employee payroll entry by sending EmployeePayroll_id
             </summary>
             <param name="id">Represents EmployeePayroll_id</param>
             <returns>EmployeePayroll.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeePayrollController.SaveEmployeePayroll(BQECore.Model.EmployeePayroll)">
             POST API/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>SaveEmployeePayroll</Endpoint_Name>
             <summary>
             This API method is used to CREATE new employee payroll entry. It takes employee payroll model as parameter
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>EmployeePayroll.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeePayrollController.GetDropdownLists(DropdownValuesType)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetDropdownLists</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE dropdown values for various dropdowns
             </summary>
             <param name="id">Represents value of DropdownValuesType parameter</param>
             <returns>Dropdown values</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.ImageController">
            <API>
            <API_Name>Image</API_Name>
            <API_Descripiton>This class Controls all API Calls for Images Module. </API_Descripiton>
             <summary>
             ImageController Inherits ApiController
             This class Controls all API Calls for Images
             Module.
             </summary>
             </API>
        </member>
        <member name="M:BQECore.Api.Controllers.ImageController.PutImage">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ImageController.DeleteImage(System.Guid)">
            <summary>
            This Method is used to delete Image model
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ImageController.DeleteImages(System.Guid[])">
            <summary>
            This API is used to DELETE a list of Image Model
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ImageController.BatchDeleteImage(BQECore.Model.BatchDelete)">
            <summary>
            
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:BQECore.Api.Controllers.NoteController">
            <summary>
            NoteController Inherits ApiController
            This class Controls all API Calls for Activity
            Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.Notes}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.NoteController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteController.Notes(BQECore.Model.BQEParameters)">
            <summary>
            ExpenseListForGrid : This Api is used to get all the Expenses
            in the form of ExpenseForGrid List
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>ExpenseForGrid List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteController.GetNote(System.Guid)">
            <summary>
            GetNote : This Api is used to get particular Project Note.
            We pass Note_ID as parameter
            </summary>
            <param name="id">The ID of Note type GUID</param>
            <returns>Object of type Note</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteController.PostNote(BQECore.Model.Note)">
            <summary>
            POST api/values
            This Api is used to save Note Model.
            it takes Note Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>Note.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteController.PutNote">
            <summary>
            PUT api/values/5
            This Method is used to update and existing Note
            </summary>
            <returns>Note.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteController.DeleteNote(System.Guid)">
            <summary>
            This Method is used to delete Note model
            DELETE api/values/5
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteController.DeleteNotes(System.Guid[])">
            <summary>
            This API is used to DELETE a list of Note Model
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteController.BatchDeleteNotes(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete notes.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.NoteStatusController">
            <summary>
            NoteStatusController Inherits ApiController
            This class Controls all API Calls for NoteStatus
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.NoteStatusController.NoteStatus(BQECore.Model.BQEParameters)">
            <summary>
            NoteStatuses the list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{NoteStatus}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteStatusController.GetNoteStatus(System.Guid)">
            <summary>
            GetNoteStatus : is used for getting particular NoteStatus entry by sending NoteStatus_id
            </summary>
            <param name="id">NoteStatus_id</param>
            <returns>NoteStatus.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteStatusController.PostNoteStatus(BQECore.Model.NoteStatus)">
            <summary>
            POST API/values
            This API is used to create new NoteStatus Entry.
            it takes NoteStatus Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>NoteStatus.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteStatusController.PutNoteStatus">
            <summary>
            PUT api/values/5
            This Method is used to update NoteStatus Model
            </summary>
            <returns>NoteStatus.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteStatusController.DeleteNoteStatus(System.Guid)">
            <summary>
            This Method is used to delete NoteStatus model
            DELETE api/values/5
            </summary>
            <param name="id">The identifier.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteStatusController.DeleteNoteStatus(System.Guid[])">
            <summary>
            This API is used to DELETE a list of NoteStatus Model
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteStatusController.BatchDeleteNoteStatus(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete note status.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.NoteCategoryController">
            <summary>
            NoteTypeController Inherits ApiController
            This class Controls all API Calls for NoteType
            Module.
            </summary>
            <seealso cref="T:BQECore.Api.Controllers.ApiHelperController" />
        </member>
        <member name="P:BQECore.Api.Controllers.NoteCategoryController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteCategoryController.NoteCategories(BQECore.Model.BQEParameters)">
            <summary>
            NoteTypees the list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{NoteType}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteCategoryController.NoteCategoryCompact(BQECore.Model.BQEParameters)">
            <summary>
            NoteTypees the list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{NoteType}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteCategoryController.GetNoteCategory(System.Guid)">
            <summary>
            GetNoteType : is used for getting particular NoteType entry by sending NoteType_id
            </summary>
            <param name="id">NoteType_id</param>
            <returns>NoteType.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteCategoryController.PostNoteCategory(BQECore.Model.NoteCategory)">
            <summary>
            POST API/values
            This API is used to create new NoteType Entry.
            it takes NoteType Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>NoteType.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteCategoryController.PutNoteCategory">
            <summary>
            PUT api/values/5
            This Method is used to update NoteType Model
            </summary>
            <returns>NoteType.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteCategoryController.PutBatchNoteCategory(BQECore.Model.NoteCategoryBatchUpdate)">
            <summary>
            Puts the batch note category.
            </summary>
            <param name="batchUpdate">The batch update.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteCategoryController.DeleteNoteCategory(System.Guid)">
            <summary>
            This Method is used to delete NoteType model
            DELETE api/values/5
            </summary>
            <param name="id">The identifier.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteCategoryController.DeleteNoteCategory(System.Guid[])">
            <summary>
            This API is used to DELETE a list of NoteType Model
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.NoteCategoryController.BatchDeleteNoteCategory(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete note category.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.ReviewSectionController">
            <summary>
            ReviewSectionController Inherits ApiController
            This class Controls all API Calls for ReviewSection
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.ReviewSectionController.ReviewSections(BQECore.Model.BQEParameters)">
            <summary>
            ReviewSectiones the list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{ReviewSection}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReviewSectionController.GetReviewSection(System.String)">
            <summary>
            GetReviewSection : is used for getting particular ReviewSection entry by sending ReviewSection_id
            </summary>
            <param name="id">ReviewSection_id</param>
            <returns>ReviewSection.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReviewSectionController.PostReviewSection(BQECore.Model.ReviewSection)">
            <summary>
            This API is used to create new ReviewSection Entry.
            it takes ReviewSection Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>ReviewSection.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReviewSectionController.PutReviewSection">
            <summary>
            This Method is used to update ReviewSection Model
            </summary>
            <returns>ReviewSection.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReviewSectionController.DeleteReviewSection(System.Guid)">
            <summary>
            This Method is used to delete ReviewSection model
            </summary>
            <param name="id">The identifier.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReviewSectionController.DeleteReviewSections(System.Guid[])">
            <summary>
            This API is used to DELETE a list of ReviewSection Model.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ReviewSectionController.BatchDeleteReviewSection(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete review section.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.DeleteHistoryController">
            <API>
            <API_Name>Delete History</API_Name>
            <API_Description>
            Allows you to retrieve all deleted records
            Allows you to retrieve specific or list of deleted information
             </API_Description>
             <summary>
             DeleteHistoryController Inherits ApiController
             This class Controls all API Calls for DeleteHistory
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.DeleteHistoryController.DeleteHistory(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>DeleteHistory</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all or filtered deleted records information based on filter condition
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>DeleteHistory List</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.ReportScheduleController">
            <summary>
            ReportScheduleController Inherits ApiController
            This class Controls all API Calls for ReportSchedule
            Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.ReportCenter}</cref>
            </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.Fill">
            <summary>
            Fills this instance.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.GetList(BQECore.Model.BQEParameters,System.Boolean)">
            <summary>
            GetReportScheduleList: This API is used to get All ReportSchedules
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="getReportScheduleDetails">if set to <c>true</c> [get report schedule details].</param>
            <returns>ReportSchedule List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.GetItem(System.Guid)">
            <summary>
            Gets a single item of report schedule
            </summary>
            <param name="id">ReportSchedule identifier</param>
            <returns>ReportSchdule instance</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.ReportScheduleDetails(BQECore.Model.BQEParameters)">
            <summary>
            This API is used to get a list of ReportScheduleDetails
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;ReportScheduleDetail&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.GetScheduledReports">
            <summary>
            GetScheduledReports: This API is used to get particular Scheduled Reports.
            </summary>
            <returns>List of MemorizedReports</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.GetReportScheduleFrequency">
            <summary>
            GetScheduledReports: This API is used to get all the frequencies for a Scheduled Report.
            </summary>
            <returns>List of frequencies</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.IsScheduleAllowed">
            <summary>
            This api is used check to check whether any reports can be scheduled.
            </summary>
            <returns><c>true</c> if [is schedule allowed]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.Save(BQECore.Model.ReportSchedule)">
            <summary>
            POST api/values
            This Api is used to save ReportSchedule Model.
            it takes ReportSchedule Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>ReportSchedule.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.ReportSchedules(BQECore.Model.BQEParameters)">
            <summary>
            POST api/values
            This Api is used to save ReportSchedule Model.
            it takes ReportSchedule Model as parameter
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>ReportSchedule.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.PutReportSchedule">
            <summary>
            PUT api/values/5
            This Method is used to update ReportSchedule Model
            </summary>
            <returns>ReportSchedule.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.PutReportScheduleGroup">
            <summary>
            Puts the report schedule group.
            </summary>
            <returns>ReportSchedule.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.DisableReportSchedule(System.Guid)">
            <summary>
            This Method is used to delete ReportSchedule
            </summary>
            <param name="id">The identifier.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.DeleteReportSchedule(System.Guid,System.Boolean)">
            <summary>
            This Method is used to delete ReportSchedule
            </summary>
            <param name="id">The identifier.</param>
            <param name="deleteActualSchedule">if set to <c>true</c> [delete actual schedule].</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.DeleteReportSchedules(System.Guid[],System.Boolean)">
            <summary>
            This API is used to DELETE a list of ReportSchedule Model.
            </summary>
            <param name="ids">The ids.</param>
            <param name="deleteActualSchedules">if set to <c>true</c> [delete actual schedules].</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.BatchDeleteReportsSchedules(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete reports schedules.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.DeleteReportScheduleDetail(System.Guid,System.Boolean)">
            <summary>
            This Method is used to delete ReportScheduleDetail
            </summary>
            <param name="id">The identifier.</param>
            <param name="deleteActualSchedules">if set to <c>true</c> [delete actual schedules].</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.DeleteReportScheduleDetails(System.Guid[],System.Boolean)">
            <summary>
            This API is used to DELETE a list of ReportScheduleDetail Model.
            </summary>
            <param name="ids">The ids.</param>
            <param name="deleteActualSchedules">if set to <c>true</c> [delete actual schedules].</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.BatchDeleteReportsScheduleDetails(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete reports schedule details.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReportScheduleController.EmailReportSchedule(System.Guid)">
            <summary>
            Emails the report schedule.
            </summary>
            <param name="id">The identifier.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.ExpenseMonitorController">
            <summary>
            ExpenseMonitorController Inherits ApiController
            This class Controls all API Calls for ExpenseMonitor
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseMonitorController.GetExpenseMonitor(System.Guid)">
            <summary>
            GetExpenseMonitor: This API is used to get particular ExpenseMonitor.
            We pass ExpenseMonitor_ID or ExpenseMonitorID as parameter
            in for of ExpenseMonitor List
            </summary>
            <param name="id">The identifier.</param>
            <returns>ExpenseMonitor Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseMonitorController.ExpenseMonitors(BQECore.Model.BQEParameters)">
            <summary>
            ExpenseMonitors the list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{ExpenseMonitor}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseMonitorController.PostExpenseMonitor(BQECore.Model.ExpenseMonitor)">
            <summary>
            POST api/values
            This Api is used to save ExpenseMonitor Model.
            it takes ExpenseMonitor Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>ExpenseMonitor.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseMonitorController.PostExpenseMonitors(System.Collections.Generic.IEnumerable{BQECore.Model.ExpenseMonitor})">
            <summary>
            This Api is used to save a list of ExpenseMonitor Models.
            </summary>
            <param name="expenseMonitorList">A list of ExpenseMonitor models</param>
            <returns>IEnumerable{BQEResponseObject{ExpenseMonitor}}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseMonitorController.PutExpenseMonitor">
            <summary>
            PUT api/values/5
            This Method is used to update ExpenseMonitor Model
            </summary>
            <returns>ExpenseMonitor.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseMonitorController.DeleteExpenseMonitor(System.Guid)">
            <summary>
            This Method is used to delete ExpenseMonitor model
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseMonitorController.DeleteExpenseMonitor(System.Guid[])">
            <summary>
            This API is used to DELETE a list of ExpenseMonitor models
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseMonitorController.BatchDeleteExpenseMonitor(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete expense monitor.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.EmailTrackingController">
            <API>
            <API_Name>Email Tracking</API_Name>
            <API_Description>
            Allows you to create email tracking model
            Allows you to retrieve a single or a list of email trackings
            Allows you to update email tracking model
            Allows you to delete a specific or a a list of email tracking model
             </API_Description>
             <summary>
             EmailTrackingController Inherits ApiController
             This class Controls all API Calls for EmailTracking
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.EmailTrackingController.GetEmailTracking(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmailTracking</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific email tracking. 
             We pass EmailTracking_ID or EmailTrackingID as parameter in for of EmailTracking List
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>EmailTracking Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmailTrackingController.EmailTrackingList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE email tracking list.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{EmailTracking}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmailTrackingController.PostEmailTracking(BQECore.Model.EmailTracking)">
             POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>EmailTracking</Endpoint_Name>
             <summary>
             This API method is used to CREATE email tracking model. It takes EmailTracking Model as parameter
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>EmailTracking.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmailTrackingController.PostEmailTrackingList(System.Collections.Generic.IEnumerable{BQECore.Model.EmailTracking})">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEmailTrackingList</Endpoint_Name>
             <summary>
             This API method is used to CREATE a list of email tracking models.
             </summary>
             <param name="emailTrackingList">Represents a list of email tracking models</param>
             <returns>IEnumerable{BQEResponseObject{EmailTracking}}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmailTrackingController.PutEmailTracking">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEmailTracking</Endpoint_Name>
             <summary>
             This API method is used to UPDATE email tracking model
             </summary>
             <returns>EmailTracking.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmailTrackingController.DeleteEmailTracking(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmailTracking</Endpoint_Name>
             <summary>
             This API method is used to DELETE email tracking model
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmailTrackingController.DeleteEmailTracking(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmailTracking</Endpoint_Name>
             <summary>
             This API method is used to DELETE a list of email tracking models
             </summary>
             <param name="ids">Represents the identifiers parameters.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmailTrackingController.BatchDeleteEmailTracking(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteEmailTracking</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE email tracking.
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.CreditCardTransactionController">
            <API>
            <API_Name>Credit Card Transaction</API_Name>
            <API_Description>
            In a credit card transaction, the payee is often different from the vendor. 
            For example, the payee for an airline ticket purchased through a credit card can be a travel agency while the vendor is the credit card company.
            This is different from a check where the payee and vendor are always the same
            Allows you to retreive credit card payment
            Allows you to create credit card payment
            Allows you to delete credit card payment
            Allows you to update credit card details
             </API_Description>
             <summary>
             CreditCardPaymentController Inherits ApiController
             This class Controls all API Calls for CreditCardPayment
             </summary>
             </API>
             <seealso>
                 <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.CreditCardPayment}</cref>
             </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.CreditCardTransactionController.Module">
            <Endpoint>
            <Verb></Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE the module.
             </summary>
             <value>The module.</value>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditCardTransactionController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BQECore.Api.Controllers.CreditCardTransactionController"/> class.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditCardTransactionController.CreditCardEntries(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>CreditCardEntries</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE credit card entries.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable&lt;CreditCardTransaction&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditCardTransactionController.CreditCardEntryList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>CreditCardEntryList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE credit card entry list.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable&lt;CreditCardTransactionList&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditCardTransactionController.GetCreditCardEntry(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetCreditCardEntry</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific credit card payment. We pass Transaction_ID  as parameter
             </summary>
             <param name="id">Reprsents the identifier parameter.</param>
             <returns>CreditCardPayment Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditCardTransactionController.GetAvailableNumber(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetAvailableNumber</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE next available credit card payment number.
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>Next available CreditCardPayment number</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditCardTransactionController.PostEntry(BQECore.Model.CreditCardTransaction)">
             POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEntry</Endpoint_Name>
             <summary>
             This API method is used to save credit card payment model. It takes CreditCardPayment Model as parameter
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>CreditCardPayment.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditCardTransactionController.PutEntry">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEntry</Endpoint_Name>
             <summary>
             This API method is used to UPDATE credit card payment model
             </summary>
             <returns>CreditCardPayment.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditCardTransactionController.DeleteEntry(System.Guid,System.String)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEntry</Endpoint_Name>
             <summary>
             This API method is used to DELETE the credit card payment.
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <param name="model">Represents the model parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditCardTransactionController.DeleteEntries(System.Guid[],System.String)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEntries</Endpoint_Name>
             <summary>
             This API method is used to DELETE list of credit card payment model
             </summary>
             <param name="ids">Represents the identifiers parameters.</param>
             <param name="model">Represents the model parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditCardTransactionController.BatchDeleteCreditCardTransaction(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteCreditCardTransaction</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE credit card transaction.
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CreditCardTransactionController.UpdateDefaults(BQECore.Model.CreditCardTransaction)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>UpdateDefaults</Endpoint_Name>
             <summary>
             This API method is used to update credit card transaction line items with default rates and accounts.
             </summary>
             <param name="creditCardTransaction">Represents the credit card transaction model to update.</param>
             <returns>CreditCardTransaction.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.DepositController">
            <API>
            <API_Name>Deposit</API_Name>
            <API_Description>
            Making deposits is essentially the second stage in a payment workflow and a daily task in small businesses.
            Allows you to retrieve deposited or un-deposited payments
            Allows you to create a deposit model
            Allows you to update a deposit model
            Allows you to delete a deposit model
             </API_Description>
             <summary>
             DepositController Inherits ApiController
             This class Controls all API Calls for  Deposit Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.DepositController.GetNewDeposit">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetNewDeposit</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE all un-deposited payments or filtered un-deposited payments based on filter condition
             </summary>
             <returns>IEnumerable{DepositDetail}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.DepositController.Getitem(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetItem</Endpoint_Name>
             <summary>
             This API is used to RETRIEVE an existing deposited payment.
             We can set this item as a DataSource to the Un-deposited Payment Grid for editing.
             </summary>
             <param name="id">Represenst the Deposit_ID Parameter</param>
             <returns>Existing Deposit</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.DepositController.Deposits(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>Deposits</Endpoint_Name>
             <summary>
            This API method is used to RETRIEVE all deposits or filtered deposits based on the filter conditions.
             </summary>
             <param name="parameters">Represents the array of filters parameter</param>
             <returns>List of filtered records</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.DepositController.PostDeposit(BQECore.Model.Deposit)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostDeposit</Endpoint_Name>
             <summary>
             This API method is used to save a deposit model. It takes deposit model as a parameter
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>BQEResource.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.DepositController.PutDeposit">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutDeposit</Endpoint_Name>
             <summary>
             This API method is used to UPDATE a deposit
             </summary>
             <returns>Deposit.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.DepositController.DeleteDeposit(System.Guid)">
            <Endpoint></Endpoint>
            <Verb></Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API is used to delete Deposit model
             </summary>
             <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.DepositController.DeleteDeposits(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteDeposits</Endpoint_Name>
             <summary>
             This API method is used to DELETE list of deposit dashboard
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.DepositController.BatchDeleteDeposits(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteDeposits</Endpoint_Name>
             <summary>
             This PAI method is used to batch DELETE deposits.
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.FundTransferController">
            <summary>
            CheckController Inherits ApiController
            This class Controls all API Calls for Check
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.FundTransfer}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.FundTransferController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.FundTransferController.FundTransfers(BQECore.Model.BQEParameters)">
            <summary>
            GetPreviousFundTransfer : This API is used to get All FundTransfers till now
            on Filter Condition
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>FundTransfer List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FundTransferController.GetFundTransfer(System.Guid)">
            <summary>
            GetFundTransfer : This API is used to get particular FundTransfer.
            We pass FundTransfer_ID as parameter
            </summary>
            <param name="id">The identifier.</param>
            <returns>FundTransfer Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FundTransferController.PostFundTransfer(BQECore.Model.FundTransfer)">
            <summary>
            This Api is used to save FundTransfer Model.
            it takes FundTransfer Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>FundTransfer.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FundTransferController.PutFundTransfer">
            <summary>
            This Method is used to update FundTransfer Model
            </summary>
            <returns>FundTransfer.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FundTransferController.DeleteFundTransfer(System.Guid,System.String)">
            <summary>
            This Method is used to delete FundTransfer
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.FundTransferController.DeleteFundTransfers(System.Guid[],System.String)">
            <summary>
            This API is used to DELETE a list of FundTransfer Model
            </summary>
            <param name="ids">The ids.</param>
            <param name="model">The model.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.FundTransferController.BatchDeleteFundtransefer(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete fundtransefer.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.BillPaymentController">
            <API>
            <API_Name>Bill Payment</API_Name>
            <API_Description>
            Bill Payments in Core is used to pay the A/P liabilities. 
            These liabilities are mostly the money owed to your suppliers,
            but can also include reimbursable expenses like airfare that were incurred by employees while performing a specific task for the company
            Allows you to retrieve vendor bills and employee reimbursable expenses
            Allows you to retrieve details of all vendor bills and employee reimbursable expenses
            Allows yout to create bill payment
            Allows you to delete a specific or a list of bill payments
            Allows you to assign check number to a bill payment
            Allows you to update bill payment details
             </API_Description>
             <summary>
             Class BillPaymentController.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.BillPaymentController.GetUnpaidBills(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>GetUnpaidBills</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all unpaid vendor bills/ employee reimbursable expenses or filtered bills based on certain filtered conditions.
             </summary>
             <param name="parameters">Represents the array of filters passed</param>
             <returns>List of filtered records</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillPaymentController.GetUnpaidBillPaymentDetails(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>GetUnpaidBillPaymentDetails</Endpoint_Name>
             <summary>
             This API is used to RETRIEVE details of all unpaid vendor bills/ employee reimbursables expenses or filtered bills based on certain filtered conditions.
             </summary>
             <param name="parameters"> Represents the array of filters passed</param>
             <returns></returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillPaymentController.GetBillPayment(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetBillPayment</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE bill payment details. We pass id as parameter.
             </summary>
             <param name="id">Represents the unique identifier passed as parameter.</param>
             <returns>List of filtered records</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillPaymentController.GetPreviousPayments(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE a list of all previous bills paid based on the filter conditions.
             </summary>
             <param name="parameters">Represents the array of filters passed as parameters</param>
             <returns>List of filtered records</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillPaymentController.PostBillPayment(BQECore.Model.BillPayment)">
            POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostBillPayment</Endpoint_Name>    
             <summary>
             This API method is used to CREATE bill payment .
             </summary>
             <param name="value">Represents the value passed as parameter.</param>
             <returns>BillPayment.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillPaymentController.Delete(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteBillPayment</Endpoint_Name>
             <summary>
             This API method is used to DELETE a specific  bill payment. We pass id as parameter.
             </summary>
             <param name="id">Represents the unique identifier passed as parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillPaymentController.BatchDeleteBillPayment(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteBillPayment</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE bill payment. We pass ids asparameters.
             </summary>
             <param name="ids">represents the unique identifiers passed.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillPaymentController.Delete(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteBillPaymentlist</Endpoint_Name>
             <summary>
              This API method is used to DELETE a list of bill payments. We pass ids as parameters.
             </summary>
             <param name="ids">Represents the unique identifiers passed.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillPaymentController.AssignCheckNumber(System.Collections.Generic.List{System.Guid})">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>AssignCheckNumber</Endpoint_Name>
             <summary>
             This API method is used to assign a check number to bill payments.
             </summary>
             <param name="Identifiers">Represents the unique identifiers passed.</param>
             <returns>List&lt;AssignCheckNumber&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.BillPaymentController.UpdateBillPaymentDetail(BQECore.Model.BillPaymentDetail)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>UpdateBillPaymentDetail</Endpoint_Name>
             <summary>
             This API method is used to UPDATE bill payment detail.
             </summary>
             <param name="detail">Represents the detail parameter passed.</param>
             <returns>BillPaymentDetail.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.LinkedFilesController">
            <summary>
            LinkedFilesController Inherits ApiController
            This class Controls all API Calls for Controller
            Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.LinkedFiles}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.LinkedFilesController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.LinkedFilesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BQECore.Api.Controllers.LinkedFilesController"/> class.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.LinkedFilesController.ExchangeDropboxToken(BQECore.Model.OAuthToken)">
            <summary>
            Exchanges the dropbox token.
            </summary>
            <param name="requestToken">The request token.</param>
            <returns>OAuthToken.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LinkedFilesController.GetLinkedFile(System.Guid)">
            <summary>
            GetLinkedFile: This API is used to get particular Activity
            </summary>
            <param name="id">The identifier:the  LinkFile unique identifier</param>
            <returns>LinkedFile</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LinkedFilesController.LinkedFiles(BQECore.Model.BQEParameters)">
            <summary>
            Linked files list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{LinkedFiles}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LinkedFilesController.PostLinkedFile(BQECore.Model.LinkedFile)">
            <summary>
            POST api/values
            This Api is used to add new LinkedFile.
            it takes LinkedFiles Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>LinkedFiles.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LinkedFilesController.PutLinkedFile">
            <summary>
            PUT api/values/5
            This Method is used to update LinkedFile Model
            </summary>
            <returns>LinkedFile.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LinkedFilesController.DeleteLinkedFile(System.String)">
            <summary>
            This Method is used to delete LinkedFiles model
            DELETE api/values/5
            </summary>
            <param name="id">The identifier.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LinkedFilesController.DeleteLinkedFiles(System.Guid[])">
            <summary>
            This API is used to DELETE a list of LinkedFiles Model
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.LinkedFilesController.BatchDeleteLinkedFiles(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete linked files.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LinkedFilesController.GetViewByList">
            <summary>
            GetViewByList : This API is used to get ViewBy List.
            </summary>
            <returns>File Management ViewBy List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LinkedFilesController.ViewLinkedFile(BQECore.Model.LinkedFile)">
            <summary>
            POST api/values
            This Method is used to view a linked file
            <param name="value">LinkedFiles object containing the access token and path of the file on cloud to view from.</param>
            </summary>
            <param name="value">The value.</param>
            <returns>The shared link of the file.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LinkedFilesController.DownloadLinkedFile(BQECore.Model.LinkedFile)">
            <summary>
            PUT api/values/5
            This Method is used to download a linked file
            <param name="path">LinkedFiles object containing the access token and path of the file on cloud to download from.</param>
            </summary>
            <param name="value">The value.</param>
            <returns>The byte array of the linked file.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LinkedFilesController.GetCloudConnectionData">
            <summary>
            Gets the cloud connection data.
            </summary>
            <returns>CloudConnectionData.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.LinkedFilesController.RefreshTokenSettings(BQECore.Model.ThirdPartySetting)">
            <summary>
            Refreshes the token settings.
            </summary>
            <param name="value">The value.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.RegisterController">
            <summary>
            RegisterController Inherits ApiController
            This class Controls all API Calls for Register Modules
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.AccountsReceivableRegister(BQECore.Model.RegisterParameter)">
            <summary>
            This API is used to get all transactions of the system defined AR Account in Register format
            </summary>
            <param name="param">The parameter.</param>
            <returns>List of AR</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.SaveRegisterAction(BQECore.Model.LineItemAction)">
            <summary>
            Saves the register action.
            </summary>
            <param name="linetItemAction">The linet item action.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.AccountsPayableRegister(BQECore.Model.RegisterParameter)">
            <summary>
            This API is used to get all transactions of the system defined AP Account in Register format
            </summary>
            <param name="param">The parameter.</param>
            <returns>List of AP</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.ExportToCsv(BQECore.Model.RegisterParameter)">
            <summary>
            Exports to CSV.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.BankRegister(BQECore.Model.RegisterParameter)">
            <summary>
            This API is used to get all transactions of a Bank Account in Register format
            </summary>
            <param name="param">The parameter.</param>
            <returns>List of Bank Transactions</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.AccountRegister(BQECore.Model.RegisterParameter)">
            <summary>
            This API is used to get all transactions of a any Account in Register format
            </summary>
            <param name="param">The parameter.</param>
            <returns>List of Transactions</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.GetRegister(System.Guid)">
            <summary>
            Gets the register.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Register.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.RegisterEntries(BQECore.Model.RegisterParameter)">
            <summary>
            Registers the entries.
            </summary>
            <param name="args">The arguments.</param>
            <returns>IEnumerable&lt;RegisterEntry&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.PostBankRegistryJournal(BQECore.Model.BankRegistryJournal)">
            <summary>
            Post : This Api is used to save new BankRegistryJournal Entry
            </summary>
            <param name="value">The value.</param>
            <returns>BankRegistryJournal</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.PostAccountsReceivableRegistryJournal(BQECore.Model.AccountsReceivableRegistryJournal)">
            <summary>
            Post : This Api is used to save new AccountsReceivableRegistryJournal Entry
            </summary>
            <param name="value">The value.</param>
            <returns>BankRegistryJournal</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.PostAccountsPayableRegistryJournal(BQECore.Model.AccountsPayableRegistryJournal)">
            <summary>
            Post : This Api is used to save new AccountsPayableRegistryJournal Entry
            </summary>
            <param name="value">The value.</param>
            <returns>BankRegistryJournal</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.PostAccountRegistryJournal(BQECore.Model.AccountRegistryJournal)">
            <summary>
            Post : This Api is used to save new AccountRegistryJournal Entry
            </summary>
            <param name="value">The value.</param>
            <returns>BankRegistryJournal</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.PutBankRegistryJournal">
            <summary>
            This Api call updates a BankRegistryJournal Entry
            </summary>
            <returns>BankRegistryJournal</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.PutAccountsReceivableRegistryJournal">
            <summary>
            This Api call updates a AccountsReceivableRegistryJournal Entry
            </summary>
            <returns>AccountsReceivableRegistryJournal</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.GetEntryID(BQECore.Model.BasicRegisterEntry)">
            <summary>
            Gets the entry identifier.
            </summary>
            <param name="value">The value.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.PutAccountsPayableRegistryJournal">
            <summary>
            This Api call updates a AccountsPayableRegistryJournal Entry
            </summary>
            <returns>AccountsReceivableRegistryJournal</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.PutAccountRegistryJournal">
            <summary>
            This Api call updates a AccountRegistryJournal Entry
            </summary>
            <returns>AccountRegistryJournal</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.DeleteRegisterEntry(BQECore.Model.BatchRegisterDelete)">
            <summary>
            Deletes the register entry.
            </summary>
            <param name="batchRegisterDelete">The batch register delete.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.CheckRegisterModelValidity``1(``0,System.Guid,ModuleNames)">
            <summary>
            Checks the register model validity.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value.</param>
            <param name="ID">The identifier.</param>
            <param name="module">The module.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.GetTransactionType(AccountingTransactionType,ModuleNames)">
            <summary>
            Gets the type of the transaction.
            </summary>
            <param name="transacionType">Type of the transacion.</param>
            <param name="defaultType">The default type.</param>
            <returns>ModuleNames.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.GetEntrySplitItems(System.Guid,AccountingTransactionType)">
            <summary>
            Gets the entry split items.
            </summary>
            <param name="id">The identifier.</param>
            <param name="transacionType">Type of the transacion.</param>
            <returns>RegisterEntity&lt;AccountingSplitItem&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.GetAccountReceivableEntrySplitItems(System.Guid,AccountingTransactionType)">
            <summary>
            Gets the account receivable entry split items.
            </summary>
            <param name="id">The identifier.</param>
            <param name="transacionType">Type of the transacion.</param>
            <returns>RegisterEntity&lt;AccountReceivableSplitItem&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.GetAccountPayableSplitItems(System.Guid,AccountingTransactionType)">
            <summary>
            Gets the account payable split items.
            </summary>
            <param name="id">The identifier.</param>
            <param name="transacionType">Type of the transacion.</param>
            <returns>RegisterEntity&lt;AccountPayableSplitItem&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RegisterController.GetRegisterTotal(BQECore.Model.RegisterParameter)">
            <summary>
            Gets the register total.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>RegisterTotal.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.VendorCreditController">
            <summary>
            VendorCreditController Inherits ApiController
            This class Controls all API Calls for  VendorCredit
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.VendorCreditController.GetVendorCredit(System.Guid)">
            <summary>
            GetVendorCredit : This API is used to get particular VendorCredit.
            We pass VendorCredit_ID  as parameter
            in for of VendorCredit List
            </summary>
            <param name="id">The identifier.</param>
            <returns>VendorCredit Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorCreditController.VendorCredits(BQECore.Model.BQEParameters)">
            <summary>
            VendorCreditList:This API is used to get All VendorCredits or filtered based VendorCredits
            </summary>
            <param name="parameters">the array of filters</param>
            <returns>IEnumerable{VendorCredit}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorCreditController.CreditUsed(BQECore.Model.BQEParameters)">
            <summary>
            Credits the used.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;CreditUsed&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorCreditController.PostVendorCredit(BQECore.Model.VendorCredit)">
            <summary>
            POST api/values
            This Api is used to save VendorCredit Model.
            it takes VendorCredit Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>VendorCredit.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorCreditController.PostVendorCredits(System.Collections.Generic.IEnumerable{BQECore.Model.VendorCredit})">
            <summary>
            This Api is used to save a list of VendorCredit Models.
            </summary>
            <param name="vendorCreditList">A list of VendorCredit models</param>
            <returns>IEnumerable{BQEResponseObject{VendorCredit}}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorCreditController.PutVendorCredit">
            <summary>
            PUT api/values/5
            This API is used to update VendorCredit
            </summary>
            <returns>VendorCredit.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorCreditController.PutVendorCredits">
            <summary>
            This API is used to update a list of VendorCredits
            </summary>
            <returns>IEnumerable{BQEResponseObject{VendorCredit}}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorCreditController.DeleteVendorCredit(System.Guid)">
            <summary>
            This API is used to delete VendorCredit model
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorCreditController.DeleteVendorCredit(System.Guid[])">
            <summary>
            This API is used to DELETE a list of VendorCredit Model.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorCreditController.BatchDeleteVendorCredit(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete vendor credit.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorCreditController.VendorCreditSummary(BQECore.Model.BQEParameters)">
            <summary>
            Vendors the credit summary.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>VendorCreditSummary.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorCreditController.GetVendorCreditDetailHistory(System.Guid)">
            <summary>
            Gets list of vendorcredit detail history
            </summary>
            <param name="id">The identifier.</param>
            <returns>List&lt;CreditUsed&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.GeneralApiController">
            <API>
            <API_Name>General API</API_Name>
            <API_Description>Allows you to control all general pupose API in Core</API_Description>
             <summary>
             This class Controls all General purpose API
             </summary>
            </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetListItems(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.Countries(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetEnumValues(System.String,ModuleNames)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetEnumStringValues(System.String,ModuleNames)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.Classification(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetInvoiceNumber(System.Nullable{System.Guid})" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetValuesList(System.Guid,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetNextAvailableNumber(System.Guid,ModuleNames)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.TimeExpenseCompactList(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.ItemCompactList(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.EmployeeVendorWithGroupList(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.ActivityWithGroupList(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.ExpenseWithGroupList(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.ClientWithGroupList(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.RecordCount(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetLoginUserID" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetLoginUser" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.PayeeList(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.PayeeNamesList(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetGlobalSearchList(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.ExportToCsv(ModuleNames,BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.ClearBRID" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetAPIParameter(ModuleNames,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetAPIParameter(ModuleNames,System.Guid)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.DeleteAPIParameter(System.Guid,System.String,ModuleNames)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.DeleteAPIParameters(System.Guid[],System.String,ModuleNames)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.ScreenFilters(ModuleNames)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.ScreenFilters(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.ActivityExpenseGroupList(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetAccountInfo(AccountInfoType)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.HostLinkedUsers(BQECore.Model.EmployeeVendorParameter)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.ProjectClientCompactList(BQECore.Model.BQEParameters)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.Version" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetCurrentCoreApiVersion" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetCoreHostApiVersion" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.CheckModuleSubscription(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetGlobalReportParameter" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetContactSalutation" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetLogFile(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.UpdateEmployee(BQECoreSharedLib.LoginCredential)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetTableCount" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetHostEnumValues(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.CalculateDatePeriod(TimePeriod)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.ClearAllScreenFilters" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GeneralApiController.GetReportGroupFilterQuery(BQECore.Model.BQEParameters)" -->
        <member name="T:BQECore.Api.Controllers.RecurringScheduleController">
            <summary>
            RecurringScheduleController Inherits ApiController
            This class Controls all API Calls for RecurringSchedule
            Module.
            </summary>
            <seealso cref="T:BQECore.Api.Controllers.ApiHelperController" />
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.GetRecurringInvoice(System.Guid)">
            <summary>
            GetRecurringInvoice : This Api is used to get particular RecurringInvoice.
            </summary>
            <param name="id">The identifier.</param>
            <returns>RecurringInvoice.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.RecurringInvoices(BQECore.Model.BQEParameters)">
            <summary>
            RecurringInvoices : This Api is used to get a list of RecurringInvoices.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;RecurringInvoice&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.GetDueRecurringInvoices(System.Guid)">
            <summary>
            GetDueRecurringInvoices : This API is used to get List of Due RecurringInvoices
            </summary>
            <param name="Employee_ID">The employee identifier.</param>
            <returns>RecurringInvoice Objects</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.PostRecurringInvoice(BQECore.Model.RecurringInvoice)">
            <summary>
            Posts the recurring invoice.
            </summary>
            <param name="recurringInvoice">The recurring invoice.</param>
            <returns>RecurringInvoice</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.ProcessRecurringInvoices(System.Collections.Generic.List{BQECore.Model.RecurringInvoice})">
            <summary>
            This API is used to Process RecurringInvoice.
            </summary>
            <param name="recurringInvoices">RecurringInvoice Model List</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.PutRecurringInvoice">
            <summary>
            This Method is used to update RecurringInvoice Model
            </summary>
            <returns>RecurringInvoice.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.GetRecurringBill(System.Guid)">
            <summary>
            GetRecurringBill : This Api is used to get particular RecurringInvoice.
            </summary>
            <param name="id">The identifier.</param>
            <returns>RecurringBill.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.RecurringBills(BQECore.Model.BQEParameters)">
            <summary>
            RecurringBills : This Api is used to get a list of RecurringBills.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;RecurringBill&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.GetDueRecurringBills(System.Guid)">
            <summary>
            GetDueRecurringBills : This API is used to get List of Due RecurringBills
            </summary>
            <param name="Employee_ID">The employee identifier.</param>
            <returns>RecurringInvoice Objects</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.PostRecurringBill(BQECore.Model.RecurringBill)">
            <summary>
            Posts the recurring bill.
            </summary>
            <param name="recurringBill">The recurring bill.</param>
            <returns>RecurringInvoice</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.ProcessRecurringBills(System.Collections.Generic.List{BQECore.Model.RecurringBill})">
            <summary>
            This API is used to Process RecurringBill.
            </summary>
            <param name="recurringBills">RecurringBill Model List</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.PutRecurringBill">
            <summary>
            This Method is used to update RecurringBill Model
            </summary>
            <returns>RecurringInvoice.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.GetRecurringCheck(System.Guid)">
            <summary>
            GetRecurringCheck : This Api is used to get particular GetRecurringCheck.
            </summary>
            <param name="id">The identifier.</param>
            <returns>RecurringCheck.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.RecurringChecks(BQECore.Model.BQEParameters)">
            <summary>
            GetRecurringChecks : This Api is used to get a list of GetRecurringChecks.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;RecurringCheck&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.GetDueRecurringChecks(System.Guid)">
            <summary>
            GetDueRecurringChecks : This API is used to get List of Due RecurringChecks
            </summary>
            <param name="Employee_ID">The employee identifier.</param>
            <returns>RecurringCheck Objects</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.PostRecurringCheck(BQECore.Model.RecurringCheck)">
            <summary>
            Posts the recurring check.
            </summary>
            <param name="recurringCheck">The recurring check.</param>
            <returns>RecurringInvoice</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.ProcessRecurringChecks(System.Collections.Generic.List{BQECore.Model.RecurringCheck})">
            <summary>
            This API is used to Process RecurringCheck.
            </summary>
            <param name="recurringChecks">RecurringCheck Model List</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.PutRecurringCheck">
            <summary>
            This Method is used to update RecurringCheck Model
            </summary>
            <returns>RecurringCheck.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.GetFrequencyList">
            <summary>
            GetViewByList : This API is used to get Frequency List.
            </summary>
            <returns>RecurringSchedule Frequency List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.GetRecurringOptionList">
            <summary>
            GetViewByList : This API is used to get Option List.
            </summary>
            <returns>RecurringSchedule Option List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.GetRecurringBillingType">
            <summary>
            Gets the type of the recurring billing.
            </summary>
            <returns>IList&lt;SelectListItem&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.DeleteRecurringSchedule(System.Guid)">
            <summary>
            This Method is used to delete RecurringSchedule
            </summary>
            <param name="id">RecurringSchedule_ID</param>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.DeleteRecurringSchedule(System.Guid[])">
            <summary>
            This API is used to DELETE a list of RecurringSchedule Model.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.BatchDeleteRecurringSchedule(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete recurring schedule.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RecurringScheduleController.BatchUpdateRecurringEntries(BQECore.Model.RecurringBatchUpdate)">
            <summary>
            General API for UpdateBatch for RecurringSchedule Entities.
            </summary>
            <param name="model">The model.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.CustomLabelController">
            <API>
            <API_Name>Custom Label</API_Name>
            <API_Description> 
            Custom Labels is where you can go to update some of the lexicon or terminology used throughout Core, including reports.
            Using custom labels, you can change the terminology of the screens, such as screen title, field labels and masks.
            You are not limited to what you can type, except for character count or length.
            Allows you to retrieve custom labels
            Allows you to create custom labels
            Allows you to update custom labels
            Allows you to delete custom labels
             </API_Description>
             <summary>
             CustomLabelController Inherits ApiController
             This class Controls all API Calls for CustomLabel
             Module.
             </summary>
             </API>
             <seealso>
                 <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.CustomLabel}</cref>
             </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.CustomLabelController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomLabelController.CustomLabels(BQECore.Model.BQEParameters)">
            <summary>
            This Api is used to get  filtered CustomLabels based
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{CustomLabel}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomLabelController.GetModuleCustomLabels(ModuleNames)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetModuleCustomList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE the module custom labels.
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>System.Collections.Generic.IEnumerable&lt;BQECore.Model.CustomLabel&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomLabelController.GetCustomLabel(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetCustomLabel</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific custom label.We pass CustomLabel_ID in for of CustomLabel List
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>CustomLabel Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomLabelController.PostCustomLabel(BQECore.Model.CustomLabel)">
             POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostCustomLabel</Endpoint_Name>
             <summary>
             This API method is used to save custom label model. It takes CustomLabel Model as parameter
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>CustomLabel.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomLabelController.PutCustomLabel">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutCustomLabel</Endpoint_Name>
             <summary>
             This API method is used to UPDATE custom label model
             </summary>
             <returns>CustomLabel.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomLabelController.PostCustomLabels(System.Collections.Generic.IEnumerable{BQECore.Model.CustomLabel})">
             POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostCustomLabels</Endpoint_Name>
             <summary>
             This API method is used to save custom label model. It takes a list of CustomLabel Models as parameter
             </summary>
             <param name="customLabels">Represents the value parameter.</param>
             <returns>Number of Custom labels saved.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomLabelController.PutCustomLabels">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostCustomLabels</Endpoint_Name>
             <summary>
             This API method is used to UPDATE a list of custom label models
             </summary>
             <returns>Number of Custom labels updated.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomLabelController.DeleteCustomLabel(System.Guid)">
             DELETE api/values/5
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteCustomLabel</Endpoint_Name>
             <summary>
             This API method is used to DELETE custom label model
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomLabelController.DeleteCustomLabels(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteCustomList</Endpoint_Name>
             <summary>
             This API method is used to DELETE list of custom label model
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomLabelController.BatchDeleteCustomLabel(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteCustomLabel</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE custom label.
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomLabelController.ResetCustomLabel(ModuleNames)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>ResetCustomLabel</Endpoint_Name>
             <summary>
             This API method is used to reset all custom labels for a screen
             </summary>
             <param name="module">Represents the module parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomLabelController.RestoreCustomLabels">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>RestoreCustomLabels</Endpoint_Name>
             <summary>
             This API method is used to restore custom labels.
             </summary>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.MessageController">
            <summary>
            MessageController Inherits ApiController
            This class Controls all API Calls for Message
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.MessageController.GetInboxList(BQECore.Model.BQEParameters)">
            <summary>
            Gets a list of Message objects from the database .
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>A list of Message objects.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MessageController.GetSentList(BQECore.Model.BQEParameters)">
            <summary>
            Gets a list of Sent Message objects from the database .
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>A list of Sent Message objects.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MessageController.GetTrashedList(BQECore.Model.BQEParameters)">
            <summary>
            Gets a list of Trashed Message objects from the database.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>A list of Trashed Message objects.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MessageController.GetMessage(System.Guid)">
            <summary>
            MessageList : This Api is used to get Trashed messages
            </summary>
            <param name="id">The identifier.</param>
            <returns>Trashed Messages List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MessageController.SendMessage(BQECore.Model.Message)">
            <summary>
            This Api is used to save New Message.
            </summary>
            <param name="message">object of type Model.Message</param>
            <returns>Message.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MessageController.SendEmail(BQECore.Model.MailSettings)">
            <summary>
            This Api is used to send newly composed message.
            </summary>
            <param name="mailSettings">The mail settings.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.MessageController.SaveDraft(BQECore.Model.Message)">
            <summary>
            This Api is used to save New Message.
            </summary>
            <param name="message">object of type Model.Message</param>
            <returns>Message.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MessageController.MarkMessageAsRead(System.Collections.Generic.List{System.Guid})">
            <summary>
            This Method is used to Mark Message as Read
            </summary>
            <param name="Message_IDs">The message i ds.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.MessageController.BatchDelete(System.Collections.Generic.List{System.Guid},MessageType)">
            <summary>
            This Method is used to delete Message
            </summary>
            <param name="Message_IDs">The message i ds.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.MessageController.BatchDelete(System.Collections.Generic.List{BQECore.Model.MessageIDList})">
            <summary>
            This Method is used to delete Messages
            </summary>
            <param name="value">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.MessageController.BatchDeleteMessage(System.Collections.Generic.List{BQECore.Model.MessageIDList})">
            <summary>
            Batches the delete message.
            </summary>
            <param name="value">The value.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.MessageController.GetEntityEmailList(System.Guid,ModuleNames)">
            <summary>
            Get all the API's of a particular Entity
            </summary>
            <param name="Entity_ID">The entity identifier.</param>
            <param name="EntityType">Type of the entity.</param>
            <returns>List&lt;string&gt;</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.VisitController">
            <summary>
            VisitController Inherits ApiController
            This class Controls all API Calls for Visit
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.VisitController.GetProjectVisitList(System.DateTime)">
            <summary>
            Gets the Project Visit List along with Address list
            </summary>
            <param name="id1">The id1.</param>
            <returns>IEnumerable&lt;ProjectVisit&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VisitController.GetVisit(System.Guid)">
            <summary>
            GetVisit : This API is used to get particular Visit.
            We pass Visit_ID  as parameter
            in for of Visit List
            </summary>
            <param name="id">Visit ID.</param>
            <returns>Visit Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VisitController.PostVisit(BQECore.Model.Visit)">
            <summary>
            POST api/values
            This Api is used to save Visit Model.
            it takes Visit Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>Visit.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VisitController.PutVisit">
            <summary>
            PUT api/values/5
            This Method is used to update Visit Model
            </summary>
            <returns>Visit.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VisitController.DeleteVisit(System.Guid)">
            <summary>
            This Method is used to delete Visit model
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.VisitController.Visits(BQECore.Model.BQEParameters)">
            <summary>
            Visitses the specified parameters.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;Visit&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.WorkflowController">
            <summary>
            WorkflowController Inherits ApiController
            This class Controls all API Calls for Work flow
            Module.
            </summary>
            <seealso cref="T:BQECore.Api.Controllers.ApiHelperController" />
        </member>
        <member name="P:BQECore.Api.Controllers.WorkflowController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="F:BQECore.Api.Controllers.WorkflowController._workflowModule">
            <summary>
            The workflow module
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.WorkflowController.GetItem(System.Guid)">
            <summary>
            This Api returns a workflow item
            </summary>
            <param name="id">Workflow ID</param>
            <returns>Workflow</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.WorkflowController.GetList(BQECore.Model.BQEParameters)">
            <summary>
            This api returns list of workflow items
            </summary>
            <param name="parameters">BQE Parameters</param>
            <returns>List of Workflow items</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.WorkflowController.GetDetailedWorkflow(System.Guid)">
            <summary>
            This API will return a workflow object with its detailed information and names of Action By and Sent to
            </summary>
            <param name="id">Workflow Identifier</param>
            <returns>Workflow</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.WorkflowController.GetWorkflowHistory(System.Guid)">
            <summary>
            This API will return a list workflow objects, each with its detailed information.
            </summary>
            <param name="id">Entity Identifier</param>
            <returns>IEnumerable&lt;Workflow&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.WorkflowController.PutBatchWorkflow(BQECore.Model.WorkflowBatchUpdate)">
            <summary>
            This API will save the workflow all the posted entities
            </summary>
            <param name="workflowBatchUpdate">The workflow batch update.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.WorkflowController.PutBatchWorkflowWithEntryType(BQECore.Model.WorkflowBatchWithEntryType)">
            <summary>
            This API will save the workflow for the posted entities, where each entity has a separate EntryType property.
            </summary>
            <param name="batchWithEntryType">Type of the batch with entry.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.CustomListController">
            <API>
            <API_Name>Custom List</API_Name>
            <API_Description>
            Allows you to retrieve custom list
            Allows you to create custom list
            Allows you to delete custom list
            Allows you to update custom list
             </API_Description>
             <summary>
             CustomListController Inherits ApiController
             This class Controls all API Calls for CustomList
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="P:BQECore.Api.Controllers.CustomListController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomListController.Fill">
            <summary>
            
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomListController.GetCustomList(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetCustomList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE custom list.
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>The custom list.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomListController.CustomLists(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>CustomList</Endpoint_Name>
             <summary>
            This API method is used to RETRIEVE filtered custom lists basedon filter condition
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>CustomList List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomListController.CustomListsWithLineItems(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>CustomListWithLineItems</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE filtered custom lists with their detail items based on filter condition.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>CustomList List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomListController.PostCustomList(BQECore.Model.CustomList)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostCustomList</Endpoint_Name>
             <summary>
             This API method is used to save custom list model. It takes CustomList Model as parameter
             </summary>
             <param name="value">Represents a custom list object parameter</param>
             <returns>CustomList.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomListController.PutCustomList">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutCustomList</Endpoint_Name>
             <summary>
             This API method is used to UPDATE custom list model
             </summary>
             <returns>CustomList.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomListController.DeleteCustomList(System.Guid)">
             DELETE api/values/5
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteCustomList</Endpoint_Name>
             <summary>
             This API method is used to DELETE custom list model
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomListController.DeleteCustomList(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteCustomList</Endpoint_Name>
             <summary>
             This API method is used to DELETE list of custom list model
             </summary>
             <param name="ids">Represents the identifiers.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomListController.BatchDeleteCustomlist(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API method  is used to batch DELETE custom list.
             </summary>
             <param name="ids">REpresents the identifiers.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomListController.CustomListLineItems(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>CustomListLineItems</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE all custom list detail lists.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>CustomListDetail List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CustomListController.GetCustomListLineItems(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>GetCustomListLineItems</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE a specific custom list detail. We pass CustomListDetail_ID as parameter in for of CustomList List.
             </summary>
             <param name="id">Represents the CustomListDetail_ID parameter</param>
             <returns>CustomListDetail Model</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.RetainerController">
            <summary>
            ActivityController Inherits ApiController
            This class Controls all API Calls for Activity
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.RetainerController.RetainerInvoiceList(BQECore.Model.BQEParameters)">
            <summary>
            RetainerInvoiceList : This Api is used to get Retainer Invoices List.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{RetainerHistoryList}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RetainerController.RetainerInvoicesHistory(BQECore.Model.BQEParameters)">
            <summary>
            GetRetainerInvoicesHistory : This Api is used to get Retainer Invoices History List.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{BillingHistory}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RetainerController.PostRetainerInvoice(BQECore.Model.RetainerInvoice)">
            <summary>
            POST api/values
            This Api is used to save Retainer Invoice.
            it takes Invoice Model as parameter
            </summary>
            <param name="invoice">The value.</param>
            <returns>RetainerHistory.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RetainerController.PutRetainerInvoice">
            <summary>
            RetainerInvoiceList : This Api is used to get All RetainerInvoice
            </summary>
            <returns>IEnumerable{RetainerHistory}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RetainerController.GetRetainerInvoice(System.Guid)">
            <summary>
            This Method is used to Get the details of a retainer invoice
            </summary>
            <param name="Invoice_ID">The identifier.</param>
            <returns>RetainerHistory.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RetainerController.DeleteRetainerInvoice(System.Guid)">
            <summary>
            This Method is used to delete Retainer Invoice.
            DELETE api/values/5
            </summary>
            <param name="Invoice_ID">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.RetainerController.DeleteRetainerInvoices(System.Guid[])">
            <summary>
            This API is used to DELETE a list of RetainerInvoice Model.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.RetainerController.BatchDeleteRetainerInvoices(BQECore.Model.BatchDeleteWithEntryType)">
            <summary>
            Batches the delete retainer invoices.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RetainerController.GetNextAvailableInvoiceNumber">
            <summary>
            GetNewRetainerInvoiceNumber : This Api is used to get the new available  Retainer Invoice Number
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RetainerController.Retainers(BQECore.Model.BQEParameters)">
            <summary>
            This API is used to fetch the list of all type of Retainers.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;RetainerList&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RetainerController.GetNewRetainerInvoice(System.Guid,System.Nullable{System.Guid})">
            <summary>
            Gets the new retainer invoice.
            </summary>
            <param name="Client_ID">The client identifier.</param>
            <param name="Project_ID">The project identifier.</param>
            <returns>RetainerInvoice.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RetainerController.GetRetainerReport">
            <summary>
            This API is used to fetch the report for Retainer Invoice.
            </summary>
            <returns>Report.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.RetainerController.GetRetainerEmailReport(System.Guid,InvoiceEmailTo)">
            <summary>
            This API will get the Retainer Report object along with Email Properties.
            </summary>
            <param name="id1">The id1.</param>
            <param name="id2">The id2.</param>
            <returns>EmailReport</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.PtoController">
            <summary>
            Class PTOController.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.PersonalTimeOff}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.PtoController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.PtoController.GetItem(System.Guid)">
            <summary>
            GetItem : This API is used to get particular PTO record.
            We pass PTORequest_ID
            </summary>
            <param name="id">ID.</param>
            <returns>PTORequest Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PtoController.PTORequests(BQECore.Model.BQEParameters)">
            <summary>
            This API Gets the PTO Requests
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{PTORequests}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PtoController.PTORequestList(BQECore.Model.BQEParameters)">
            <summary>
            Ptoes the request list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;PTORequestList&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PtoController.PostPtoRequest(BQECore.Model.PTORequest)">
            <summary>
            This API Creates a new PTO Request
            </summary>
            <param name="value">The value.</param>
            <returns>PTORequests.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PtoController.PutPtoRequest">
            <summary>
            This API Updates a PTO Request
            </summary>
            <returns>PTORequests.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PtoController.GetRequestedHours(System.DateTime,System.DateTime,System.String)">
            <summary>
            Gets the requested PTO hours excluding holidays.
            </summary>
            <param name="startDate">The start date.</param>
            <param name="EndDate">The end date.</param>
            <returns>Decimal.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PtoController.DeletePTORequest(System.Guid)">
            <summary>
            This API Deletes the PTO Requests
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.PtoController.DeletePTORequests(System.Guid[])">
            <summary>
            This API is used to DELETE a list of PTO.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.PtoController.BatchDeletePTORequests(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete pto requests.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PtoController.GetTotalHours(BQECore.Model.BQEParameters)">
            <summary>
            This API get all PTO hours
            </summary>
            <param name="param">The parameter.</param>
            <returns>PTOAggregate.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PtoController.UpdateDefaults(BQECore.Model.PTORequest)">
            <summary>
            This API is used to fetch the default values for the PTORequest.
            </summary>
            <param name="request">The request.</param>
            <returns>PTORequest.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.ReviewerController">
            <summary>
            Class ReviewerController.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.Reviewer}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.ReviewerController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.ReviewerController.GetReviewer(System.Guid)">
            <summary>
            GetReviewer : This Api is used to get Reviewer entry based
            on given TimeExpenseId
            </summary>
            <param name="id">The identifier.</param>
            <returns>Reviewer Entry</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReviewerController.PutReviewer">
            <summary>
            PUT api/values/5
            This Method is used to update TimeExpense Model
            </summary>
            <returns>Reviewer.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReviewerController.Reviewers(BQECore.Model.BQEParameters)">
            <summary>
            Reviewers the list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{Reviewer}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReviewerController.UpdateRates(BQECore.Model.ReviewerRateUpdate)">
            <summary>
            Updates the Reviewer entries rates and save the same.
            </summary>
            <param name="model">The ReviewerRateUpdate model to update.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ReviewerController.BatchUpdateEntries(BQECore.Model.ReviewerBatchUpdate)">
            <summary>
            This Api is used to do Batch Update Time/Expense Entries from Reviewer Screen.
            </summary>
            <param name="model">of type ReviewerBatchUpdate containing fields to batch update</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.VendorBillController">
            <summary>
            VendorBillController Inherits ApiController
            This class Controls all API Calls for VendorBill Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.VendorBill}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.VendorBillController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorBillController.GetVendorBillEmailReportList(System.Guid[])">
            <summary>
            Gets Email Object with vendorbill report.
            </summary>
            <param name="id1">The id1.</param>
            <returns>IEnumerable&lt;EmailReport&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorBillController.VendorBills(BQECore.Model.BQEParameters)">
            <summary>
            Vendors the bill list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{VendorBill}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorBillController.VendorBillList(BQECore.Model.BQEParameters)">
            <summary>
            Vendors the bill list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;VendorBillList&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorBillController.GetVendorBill(System.Guid)">
            <summary>
            GetVendorBill : This Api is used to get particular VendorBill.
            </summary>
            <param name="id">VendorBill_ID of the VendorBill</param>
            <returns>VendorBill Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorBillController.GetNewVendorBill(System.Guid)">
            <summary>
            GetNewVendorBill : This Api is used to get a new instance of VendorBill.
            </summary>
            <param name="id">id is vendor_id for which bill has to be created</param>
            <returns>VendorBill Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorBillController.PostVendorBill(BQECore.Model.VendorBill)">
            <summary>
            POST api/values
            This Api is used to save VendorBill Model.
            it takes VendorBill Model as parameter
            </summary>
            <param name="vendorBill">The vendor bill.</param>
            <returns>VendorBill.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorBillController.PutVendorBill">
            <summary>
            PUT api/values/5
            This Method is used to update VendorBill Model
            </summary>
            <returns>VendorBill.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorBillController.GetVendorBillHistory(BQECore.Model.BQEParameters)">
            <summary>
            Gets the vendor bill history.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;VendorBillingHistory&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorBillController.Delete(System.Guid,System.String)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorBillController.Delete(System.Guid[],System.String)">
            <summary>
            This API is used to DELETE a list of VendorBill Model.
            </summary>
            <param name="ids">The ids.</param>
            <param name="model">The model.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorBillController.BatchDeleteVendorbills(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete vendorbills.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorBillController.UpdateDefaults(BQECore.Model.VendorBill)">
            <summary>
            Updates the VendorBill LineItems with default rates and Accounts.
            </summary>
            <param name="vendorBill">The VendorBill model to update.</param>
            <returns>VendorBill.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorBillController.CreateNewVendorBillFromParameters(BQECore.Model.BQEParameters)">
            <summary>
            CreateNewVendorBillFromParameters : This Api is used to get a new instance of VendorBill from paramters.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>VendorBill.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.ToDoTaskController">
            <summary>
            ToDoTaskController Inherits ApiController
            This class Controls all API Calls for ToDoTask
            Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.ToDoTask}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.ToDoTaskController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.ToDoTaskController.GetToDoTask(System.Guid)">
            <summary>
            GetToDoTask : This API is used to get particular ToDoTask.
            </summary>
            <param name="id">ToDoTask_ID</param>
            <returns>ToDoTask Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ToDoTaskController.ToDoTasks(BQECore.Model.BQEParameters)">
            <summary>
            GetToDoTask : This API is used to get List of ToDoTask
            </summary>
            <param name="parameters">Optional Arguments -[ToDoEntryType (Employee = 0, Vendor = 1, Client = 2, Project = 3, General = 17), RecordID]</param>
            <returns>ToDoTask Objects</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ToDoTaskController.ToDoTaskList(BQECore.Model.BQEParameters)">
            <summary>
            GetToDoTask : This API is used to get List of ToDoTaskList
            </summary>
            <param name="parameters">Optional Arguments -[ToDoEntryType (Employee = 0, Vendor = 1, Client = 2, Project = 3, General = 17), RecordID]</param>
            <returns>ToDoTaskList Objects</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ToDoTaskController.PostToDoTask(BQECore.Model.ToDoTask)">
            <summary>
            This API is used to save ToDoTask Model.
            </summary>
            <param name="value">ToDoTask Model</param>
            <returns>ToDoTask.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ToDoTaskController.PutToDoTask">
            <summary>
            This Method is used to update ToDoTask Model
            </summary>
            <returns>ToDoTask.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ToDoTaskController.DeleteToDoTask(System.Guid)">
            <summary>
            This Method is used to delete ToDoTask model
            </summary>
            <param name="id">ToDoTask_ID</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ToDoTaskController.DeleteToDoTasks(System.Guid[])">
            <summary>
            This API is used to DELETE a list of ToDoTask Model.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ToDoTaskController.BatchDeleteToDoTasks(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete to do tasks.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ToDoTaskController.PostCopyExistingTasks(BQECore.Model.CopyExistingTasks)">
            <summary>
            This Api is used to Clone a ToDoTask.
            </summary>
            <param name="value">CloneToDoTask Model</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ToDoTaskController.BatchUpdateNotes(BQECore.Model.NoteBatchUpdate)">
            <summary>
            This Api is used to do Batch Change to Notes
            </summary>
            <param name="value">of type BatchChange containing fields to batch update</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.ManualInvoiceController">
            <summary>
            ManualInvoiceController Inherits ApiController
            This class Controls all API Calls for Manual Invoice
            Module.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.ManualInvoiceController.InvoiceCompact(BQECore.Model.BQEParameters)">
            <summary>
            ManualInvoiceDropdown : This Api is used to get all the Manual Invoice
            in the form of ManualInvoiceDropdown List
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>ManualInvoiceDropdown List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ManualInvoiceController.NewInvoice(BQECore.Model.ManualInvoiceParameter)">
            <summary>
            get new ManualInvoice object
            </summary>
            <param name="Parameters">The parameters.</param>
            <returns>ManualInvoice.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ManualInvoiceController.GetInvoiceByID(System.String)">
            <summary>
            Gets existing Manual Invoice
            </summary>
            <param name="id">Transactiontable_ID of an invoice.</param>
            <returns>ManualInvoice.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ManualInvoiceController.GetEmptyInvoiceDetail">
            <summary>
            Gets existing Manual Invoice Detail Empty Model
            </summary>
            <returns>ManInvDetail.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ManualInvoiceController.PostInvoice(BQECore.Model.ManualInvoice)">
            <summary>
            POST api/values
            This Api is used to save Manual Invoice.
            it takes Manual Invoice Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>ManualInvoice.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ManualInvoiceController.PutInvoice(BQECore.Model.ManualInvoice)">
            <summary>
            Updated Manual Invoice object
            </summary>
            <param name="value">model of Manual Invoice</param>
            <returns>ManualInvoice.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ManualInvoiceController.PutExistingInvoice">
            <summary>
            Updates Manual Invoice Detail object
            </summary>
            <returns>ManualInvoice.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.PaymentController">
            <summary>
            PaymentController Inherits ApiController
            This class Controls all API Calls for Payment
            Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.Payment}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.PaymentController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BQECore.Api.Controllers.PaymentController"/> class.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.GetPayment(System.Guid,System.Boolean)">
            <summary>
            Gets a single Payment
            </summary>
            <param name="id">Paymennt ID</param>
            <param name="id2">if set to <c>true</c> [id2].</param>
            <returns>Payment Object</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.GetPaymentWithBillPayment(System.Guid,System.Boolean)">
            <summary>
            Gets a single Payment with bill payment model filled
            </summary>
            <param name="id">Paymennt ID</param>
            <param name="fetchUnpaidBills">Whether to fill the BillPayment model</param>
            <returns>Payment Object</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.GetPaymentDetails(System.Guid)">
            <summary>
            Get payment Details Based on Payment_ID
            </summary>
            <param name="payment_ID">The payment identifier.</param>
            <returns>List&lt;PaymentDetail&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.GetItemForEdit(System.Guid)">
            <summary>
            Gets a single Payment
            </summary>
            <param name="id">Paymennt ID</param>
            <returns>Payment Object</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.PreviousPayments(BQECore.Model.PaymentParameter)">
            <summary>
            This Api is used to get List of Previous Payments
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List of PreviousPayments Objects</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.GetPaymentDetails(BQECore.Model.BQEParameters)">
            <summary>
            This Api is used to get detail of  the Payment
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List of PaymentLineDetails Objects</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.PostPayment(BQECore.Model.Payment)">
            <summary>
            This Api is used to save a Payment.
            it takes SavePayment Model as parameter
            </summary>
            <param name="value">SavePayment</param>
            <returns>Payment.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.PostPartialPayment(BQECore.Model.PartialPayment)">
            <summary>
            This Api is used to save a Partial Payment.
            it takes PartialPayment model as parameter
            </summary>
            <param name="value">Partial Payment</param>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.PutPayment">
            <summary>
            This Api allows certain fields of a payment to be updated
            it takes PaymentUpdateFields Model as parameter
            </summary>
            <returns>Payment.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.DeletePayment(System.Guid,System.String)">
            <summary>
            This Method is used to delete a Payment
            </summary>
            <param name="id">Delete payment parameters.</param>
            <param name="model">The model.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.DeletePayments(System.Guid[])">
            <summary>
            This API is used to DELETE a list of Payment Model
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.BatchDeletePayment(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete payment.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.PutVoidPayment(System.Guid)">
            <summary>
            This Method is used to void a Payment
            </summary>
            <param name="id">Delete payment parameters.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.GetPaymentMethodsList">
            <summary>
            GetPaymentMethodList : This Api is used to get List of PaymentMethods.
            </summary>
            <returns>List of Payment Methods</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.GetDropdownValues(DropdownValuesType)">
            <summary>
            GetProjectTypes : This Api is used to get Dropdown values for various Dropdowns
            </summary>
            <param name="id">Value of Type DropdownValuesType</param>
            <returns>Dropdown values</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.GetRetainerSummary(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Gets the retainer summary.
            </summary>
            <param name="client_ID">The client identifier.</param>
            <param name="Project_ID">The project identifier.</param>
            <returns>RetainerSummary.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.GetNewPayment(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Gets the new payment.
            </summary>
            <param name="client_ID">The client_ identifier.</param>
            <param name="Project_ID">The project_ identifier.</param>
            <returns>Payment.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.GetPaymentDisbursement(System.Guid,System.Guid)">
            <summary>
            Gets the Disbursement details.
            </summary>
            <param name="Project_ID">The project_ identifier.</param>
            <param name="Invoice_ID">The client_ identifier.</param>
            <returns>List&lt;PaymentDisbursement&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.RetainerInvoiceDetails(BQECore.Model.BQEParameters)">
            <summary>
            Gets the details for Retainer Invoices.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;PaymentLineDetail&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.BouncedCheck(BQECore.Model.BouncedCheck)">
            <summary>
            BouncedCheck : This API Allows to make check bounced based on payment.
            Note that this API sets the operation result inside header
            </summary>
            <param name="bouncedCheck">The bounced check.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.GetNewBouncedCheck(System.Guid)">
            <summary>
            GetNewBouncedCheck : This API Allows creates new BouncedCheck based on Payment
            </summary>
            <param name="Payment_ID">The payment identifier.</param>
            <returns>BouncedCheck.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.ExportToCsv(BQECore.Model.PaymentParameter)">
            <summary>
            Exports to CSV.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.PaymentCompact(BQECore.Model.BQEParameters)">
            <summary>
            Payments the compact.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;PaymentCompact&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PaymentController.NewPayment(BQECore.Model.BQEParameters)">
            <summary>
            Builds a new <seealso cref="T:BQECore.Model.Payment"/> object based on parameters passed.
            </summary>
            <param name="parameters">BQEPrameters</param>
            <returns></returns>
        </member>
        <member name="T:BQECore.Api.Controllers.CurrencyMultiplierController">
            <API>
            <API_Name></API_Name>
            <API_Description>
            Currency multiplier or exchange rate is what one unit of foreign currency is worth in your local currency. 
            Core allows you to enter multiplier up to 8 decimal places. ExampleIf U.S. $1 (your local currency) is worth Australian $1.298 (foreign currency),
            then you can enter 1.298 in this field.
            Culture Code Language settings of a country, say for the United States, it is en-US, meaning US English.
            Allows you to retrieve currency multiplier
            Allows you to create currency multiplier model
            Allows you to update currency multiplier model
            Allows you to delete currency multiplier model
             </API_Description>
             <summary>
             ActivityController Inherits ApiController
             This class Controls all API Calls for Activity
             Module.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.CurrencyMultiplierController.CurrencyMultipliers(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>CurrencyMultipliers</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a list of currency multipliers.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable&lt;CurrencyMultiplier&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CurrencyMultiplierController.GetCurrencyMultiplier(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetCurrencyMultiplier</Endpoint_Name>
             <summary>
             ThiS API methood is used to RETRIEVE a specific currency multiplier entry by passing CurrencyMultiplier_ID as Guid
             </summary>
             <param name="id">Represents CurrencyMultiplier_ID as Guid parameter</param>
             <returns>CurrencyMultiplier.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CurrencyMultiplierController.PutCurrencyMultiplier">
             POST api/values
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutCurrencyMultiplier</Endpoint_Name>
             <summary>
             This API method is used to CREATE new currency multiplier entry. It takes CurrencyMultiplier Model as parameter
             </summary>
             <returns>CurrencyMultiplier.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CurrencyMultiplierController.DeleteCurrencyMultiplier(System.Guid)">
             DELETE api/values/5
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>deletCurrencyMultiplier</Endpoint_Name>
             <summary>
             This API method is used to DELETE currency multiplier model
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CurrencyMultiplierController.DeleteCurrencyMultipliers(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteCurrencyMultipliers</Endpoint_Name>
             <summary>
             This API is used to DELETE list of currency multiplier model
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.CurrencyMultiplierController.BatchDeleteCurrencyMultipliers(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteCurrencyMultipliers</Endpoint_Name>
             <summary>
             ThiS API method is used to batch DELETE currency multipliers.
             </summary>
             <param name="ids">The ids.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.EmployeeControlController">
            <API>
            <API_Name>Employee Control</API_Name>
            <API_Description>
            Employee Control is a powerful feature in Core that allows you to control every employee's access to activities,
            expenses and projects throughout the program. It ensures that confidential data is not accessible to employees who should not see it.
            Allows you to retrieve project assigned,activities assigned and expenses assigned to employee control
            Allows you to retrieve available projects, activities and expenses to employee control
            Allows you to create employee activity, employee expenses and employee project
            Allows you to update employee activity model, employee expense model and project control model
            Allows you to delete employee control model
             </API_Description>
             <summary>
             Class EmployeeControlController.
             </summary>
             </API>
             <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.AssignedProject(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>AssignedProject</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE all assigned projects  to employee control
             </summary>
             <param name="parameters">Represents BQEParameters -with argumentList expecting optional -ProjectGroup_ID</param>
             <returns>Assigned Project List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.AssignedActivity(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>AssignedActivity</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all assigned activities to employee control
             </summary>
             <param name="parameters">BQEParameters -with argumentList expecting optional -ActivityGroup_ID</param>
             <returns>Assigned Activity List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.AssignedExpense(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>AssignedExpense</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE list of assigned expenses to employee control
             </summary>
             <param name="parameters">Represents BQEParameters -with argumentList expecting optional -ExpenseGroup_ID</param>
             <returns>Assigned Expense List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.AvailableProject(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>AvailableProject</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE list of available projects to employee control
             </summary>
             <param name="parameters">Represents BQEParameters -with argumentList expecting required -Employee_ID- and optional -ProjectGroup_ID</param>
             <returns>Available Project List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.AvailableActivity(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb></Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             GetAvailableActivity : This Api is used to RETRIEVE list of available activities to employee control
             </summary>
             <param name="parameters">Represents BQEParameters -with argumentList expecting required -Employee_ID- and optional -ActivityGroup_ID</param>
             <returns>Available Activity List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.AvailableExpense(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>AvailableExpense</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE list of available expenses to employee control
             </summary>
             <param name="parameters">Represents BQEParameters -with argumentList expecting required -Employee_ID- and optional -ExpenseGroup_ID</param>
             <returns>Available Expense List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.EmployeeControlSettingList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EmployeeControlSettingList</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE filtered employee control settings based on BQEParameters
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>Employee Control settings List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.EmployeeControlQuery(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EmployeeControlQuery</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE filtered employee control settings based BQEParameters
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>Employee Control settings List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.AvailableGroups(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>AvailableGroups</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE available groups of employee control
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>Available Group List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.GetEmployeeControl(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmployeeControl</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific employee control setting.
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>EmployeeControl Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.PostEmployeeActivity(BQECore.Model.EmployeeActivity)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEmployeeActivity</Endpoint_Name>
             <summary>
             This API method is used to CREATE employee activity.
             </summary>
             <param name="employeeActivity">Represents the project activity parameter.</param>
             <returns>EmployeeActivity.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.PostEmployeeExpense(BQECore.Model.EmployeeExpense)">
            <Endpoint></Endpoint>
            <Verb></Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             Posts the Employee expense.
             </summary>
             <param name="employeeExpense">The project expense.</param>
             <returns>EmployeeExpense.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.PostEmployeeProject(BQECore.Model.EmployeeProject)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEmployeeProject</Endpoint_Name>
             <summary>
             This API method is used to CREATE employee project.
             </summary>
             <param name="employeeProject">Represents the project member parameter.</param>
             <returns>EmployeeProject.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.PutEmployeeActivity">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEmployeeActivity</Endpoint_Name>
             <summary>
             This API method is used to UPDATE project control model
             </summary>
             <returns>OK if successful</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.PutEmployeeExpense">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEmployeeExpense</Endpoint_Name>
             <summary>
             This API method is used to UPDATE employee expense.
             </summary>
             <returns>EmployeeExpense.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.PutEmployeeProject">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEmployeeProject</Endpoint_Name>
             <summary>
             This API method is used to UPDATE employee project.
             </summary>
             <returns>EmployeeProject.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.Update``1">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>Update</Endpoint_Name>
             <summary>
             This API method is used to UPDATE this instance.
             </summary>
             <typeparam name="T"></typeparam>
             <returns>T.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.DeleteEmployeeControl(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeletEmployeeControl</Endpoint_Name>
             <summary>
             This API method is used to UPDATE employee control model list
             </summary>
             <param name="id">Represents the EmployeeControl_ID paramter</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.DeleteEmployeeControls(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmployeeControls</Endpoint_Name>
             <summary>
             This API method is used to DELETE list of employee control model
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.BatchDeleteEmployeeControl(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteEmployeeControl</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE employee control.
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.CopyEmployeeControl(BQECore.Model.CopyEmployeeControlArgs)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>CopyEmployeeControl</Endpoint_Name>
             <summary>
             This API method is used to clone existing employee control setting into a new employee or group.
             </summary>
             <param name="args">REpresents the arguments parameter.</param>
             <returns>OK if successfull</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeControlController.EmployeeControlList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EmployeeControlList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a list of employees/vendor along with HasEmployeeControl field.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable&lt;EmployeeControlList&gt;.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.ExpenseLogController">
            <summary>
            ExpenseLogController Inherits ApiController
            This class Controls all API Calls for ExpenseLog
            Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.ExpenseLog}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.ExpenseLogController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BQECore.Api.Controllers.ExpenseLogController"/> class.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.ExpenseLogs(BQECore.Model.BQEParameters)">
            <summary>
            Gets a list of ExpenseLog entries
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>list of ExpenseLog entries matching the FilterCondition</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.PostCopyPasteExpenseLog(BQECore.Model.UpdateBatch)">
            <summary>
            Posts the copy paste expense log.
            </summary>
            <param name="Entities">The entities.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.ExpenseLogCompact(BQECore.Model.BQEParameters)">
            <summary>
            list of ExpenseLogForDropDown object matching filters
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{ExpenseLogForDropDown}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.ExpenseLogList(BQECore.Model.BQEParameters)">
            <summary>
            list of ExpenseLogForGrid object matching filters
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{ExpenseLogForGrid}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.ExpenseLogTotals(BQECore.Model.BQEParameters)">
            <summary>
            ExpenseLogTotals
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>ExpenseLog Totals.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.GetExpenseLog(System.Guid)">
            <summary>
            Gets a single ExpenseLog
            </summary>
            <param name="id">The ID of the ExpenseLog in the database.</param>
            <returns>ExpenseLog object when the ID exists in the database, or <see langword="null" /> otherwise.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.BatchUpdateExpenseLogs(BQECore.Model.ExpenseLogBatchUpdate)">
            <summary>
            Batches the update expense logs.
            </summary>
            <param name="batchUpdate">The batch update.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.FullBatchUpdateExpenseLogs(BQECore.Model.FullExpenseLogBatchUpdate)">
            <summary>
            Fulls the batch update expense logs.
            </summary>
            <param name="batchUpdate">The batch update.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.PostExpenseLog(BQECore.Model.ExpenseLog)">
            <summary>
            This Api is used to Add new  ExpenseLog .
            </summary>
            <param name="value">The updated ExpenseLog object</param>
            <returns>The updated ExpenseLog model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.PutExpenseLog">
            <summary>
            This Method is used to update ExpenseLog
            </summary>
            <returns>The updated ExpenseLog model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.DeleteExpenseLog(System.Guid)">
            <summary>
            This Method is used to delete ExpenseLog
            DELETE api/values/5
            </summary>
            <param name="id">The ID of the ExpenseLog in the database</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.DeleteExpenseLogs(System.Guid[])">
            <summary>
            This method is used to delete ExpenseLog model
            </summary>
            <param name="ID">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.BatchDeleteExpenseLog(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete expense log.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.PostSimpleExpenseLog(System.Collections.Generic.List{BQECore.Model.SimpleExpenseLog})">
            <summary>
            This Api is used to save/update Simple ExpenseLog Collection.
            </summary>
            <param name="value">SimpleExpenseLog Model</param>
            <returns>IEnumerable{SimpleExpenseLog}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.GetRatesAndDefaults(System.Collections.Generic.Dictionary{ModuleNames,System.Guid})">
            <summary>
            This Api is used to gets Rates
            as per BillQuick norms
            </summary>
            <param name="efsCombination">ProjectId, EmployeeId and ActivityId</param>
            <returns>Cost Markup List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.ExpenseLogSummaryInfo(BQECore.Model.BQEParameters)">
            <summary>
            This API is used to Get summary values for the list
            </summary>
            <param name="parameters">BQEParameters</param>
            <returns>Object of SummaryInfoExpenseLog</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.UpdateDefaults(BQECore.Model.ExpenseLog)">
            <summary>
            This API is used to Get Rates of a expense entry
            </summary>
            <param name="expenseLog">The expense log.</param>
            <returns>ExpenseLog Object</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.PutLineNumberOrder(System.Guid,EnumUpDown)">
            <summary>
            This Api is used to change LineNumber number of a ExpenseLog.
            </summary>
            <param name="id">The ExpenseLog identifier.</param>
            <param name="id1">Up down.</param>
            <returns>ResponseCode.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.PutLineNumberSortOrder(System.Guid,System.Int32)">
            <summary>
            This Api is used to update the sortorder of ExpenseLog line items.
            </summary>
            <param name="ExpenseLog_ID">The expense log identifier.</param>
            <param name="sortposition">The sortposition.</param>
            <returns>Boolean.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.CopyPasteSpecialExpenseLog(BQECore.Model.PasteSpecial)">
            <summary>
            This API is used to Copy paste entries.
            </summary>
            <param name="model">The model.</param>
            <returns>APIResponse</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseLogController.ExpensePageTotals(BQECore.Model.BQEParameters)">
            <summary>
            ExpenseEntryPageTotal.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>ExpenseEntryPageTotal.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:BQECore.Api.Controllers.GlobalSettingsController" -->
        <member name="M:BQECore.Api.Controllers.GlobalSettingsController.Settings(BQECore.Model.BQEParameters)">
            <Endpoint>
            <verb>POST</verb>
            <verb>GET</verb>
             </Endpoint>
             <summary>
             Settings: This API method is used to RETRIEVE a filtered list of GlobalSetting objects. We use BQE parameters as parameter.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>A list of GlobalSetting objects</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetSettings(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetSetting(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.SendTestEmail(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.SaveSetting(System.Collections.Generic.List{BQECore.Model.SettingCompact})" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.ResetSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.ResetIndividualSetting(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetMasterInformationSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetTimeExpenseSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetMonitorNotificationSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetBillingSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetTemplateSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetAccountingSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetIntegrationSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetTaxSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetFolderSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetUserInterfaceSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetEmailSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.EmailSettings(ReportTemplateType,System.Collections.Generic.List{BQECore.Model.Filter})" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetMerchantSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetSecuritySetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutSecuritySetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutMasterInformationSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutTimeExpenseSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutMonitorNotificationSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutBillingSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutGlobalSettingsForArchitectIndustry" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutTemplateSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutAccountingSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutIntegrationSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutTaxSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutFolderSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutUserInterfaceSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutEmailSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutMerchantSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutLEDESSetting" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.UpdateSetting``1" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.OnBoardSettings" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.UpdateSystemRecords(BQECore.Model.SystemAccounts)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.UpdateOtherAccounts(BQECore.Model.OtherAccounts)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.UpdateTaxAccounts(BQECore.Model.TaxAccounts)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutDCAAPassword(BQECore.Model.Setting.PasswordSetting)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.PutClosingDatePassword(BQECore.Model.Setting.PasswordSetting)" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetOnboardSettings" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetGlobalSettings" -->
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.GlobalSettingsController.GetLEDESSettings" -->
        <member name="T:BQECore.Api.Controllers.ProjectControlController">
            <summary>
            Class ProjectControlController.
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.AssignedEmployees(BQECore.Model.BQEParameters)">
            <summary>
            GetAssignedEmployee : This Api is used to get All Assigned Employees to Project Control
            </summary>
            <param name="bqeParameters">BQEParameters -with argumentList expecting optional -EmployeeGroup_ID</param>
            <returns>Assigned Project List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.AssignedActivities(BQECore.Model.BQEParameters)">
            <summary>
            GetAssignedActivity : This Api is used to get All Assigned Activities to Project Control
            </summary>
            <param name="bqeParameters">BQEParameters -with argumentList expecting optional -ActivityGroup_ID</param>
            <returns>Assigned Activity List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.AssignedExpenses(BQECore.Model.BQEParameters)">
            <summary>
            GetAssignedExpense : This Api is used to get All Assigned Expenses to Project Control
            </summary>
            <param name="bqeParameters">BQEParameters -with argumentList expecting optional -ExpenseGroup_ID</param>
            <returns>Assigned Expense List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.AvailableEmployees(BQECore.Model.BQEParameters)">
            <summary>
            GetAvailableProject : This API is used to get Available Employee to Project Control
            </summary>
            <param name="bqeParameters">BQEParameters -with argumentList expecting required -Project_ID- and optional -EmployeeGroup_ID</param>
            <returns>Available Project List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.AvailableActivities(BQECore.Model.BQEParameters)">
            <summary>
            GetAvailableActivity : This Api is used to get Available Activities to Project Control
            </summary>
            <param name="bqeParameters">BQEParameters -with argumentList expecting required -Project_ID- and optional -ActivityGroup_ID</param>
            <returns>Available Activity List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.AvailableExpenses(BQECore.Model.BQEParameters)">
            <summary>
            GetAvailableExpense : This Api is used to get Available Expenses to Project Control
            </summary>
            <param name="bqeParameters">BQEParameters -with argumentList expecting required -Project_ID- and optional -ExpenseGroup_ID</param>
            <returns>Available Expense List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.AvailableGroups(BQECore.Model.BQEParameters)">
            <summary>
            GetAvailableGroups : This Api is used to get Available Groups to Project Control
            </summary>
            <param name="id">The unique identifier of a project</param>
            <param name="entityType">The type of the Groups to Get {e.g, Employee Groups}</param>
            <returns>Available Group List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.PostProjectActivity(BQECore.Model.ProjectActivity)">
            <summary>
            Posts the project activity.
            </summary>
            <param name="projectActivity">The project activity.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.PostProjectExpense(BQECore.Model.ProjectExpense)">
            <summary>
            Posts the project expense.
            </summary>
            <param name="projectExpense">The project expense.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.PostProjectMember(BQECore.Model.ProjectMember)">
            <summary>
            Posts the project member.
            </summary>
            <param name="projectMember">The project member.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.PutProjectActivity">
            <summary>
            This Method is used to update ProjectControl Model
            </summary>
            <returns>OK if successful</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.PutProjectExpense">
            <summary>
            Puts the project expense.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.PutProjectMember">
            <summary>
            Puts the project member.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.Update``1">
            <summary>
            Updates this instance.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.DeleteProjectControl(System.Guid)">
            <summary>
            This Method is used to delete ProjectControl model
            </summary>
            <param name="ID">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.DeleteProjectControl(System.Guid[])">
            <summary>
            This API is used to DELETE a list of ProjectControl Model
            </summary>
            <param name="ids">The ProjectControl_IDs.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.BatchDeleteProjectControl(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete project control.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.CopyFromBudget(BQECore.Model.ProjectControlArgs)">
            <summary>
            Copies budgeted Employees, Activities and Expenses as project control settings to a particular project
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectControlController.CopyProjectControl(BQECore.Model.CopyControlArgs)">
            <summary>
            Clones an existing ProjectControl setting to a new project or project group.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:BQECore.Api.Controllers.PurchaseOrderController">
            <summary>
            PurchaseOrderController Inherits ApiController
            This class Controls all API Calls for PurchaseOrder Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.PurchaseOrder}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.PurchaseOrderController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BQECore.Api.Controllers.PurchaseOrderController"/> class.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.NewPurchaseOrder(BQECore.Model.POParameter)">
            <summary>
            Gets New Purchase Order based on vendor
            </summary>
            <param name="parameters">Purchase Order Parameters</param>
            <returns>PurchaseOrder object</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.GetNextAvailablePurchaseOrder">
            <summary>
            Gets the Next Available Purchase Order
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.PurchaseOrders(BQECore.Model.BQEParameters)">
            <summary>
            Purchases the orders.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;PurchaseOrderList&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.GetPurchaseOrder(System.Guid)">
            <summary>
            GetPurchaseOrder : This Api is used to get particular PurchaseOrder.
            </summary>
            <param name="id">PurchaseOrder_ID of the PurchaseOrder</param>
            <returns>PurchaseOrder Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.UpdateDefaults(BQECore.Model.PurchaseOrder)">
            <summary>
            Gets the default rates for the Item.
            </summary>
            <param name="order">PurchaseOrder</param>
            <returns>PurchaseOrder</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.PostPurchaseOrder(BQECore.Model.PurchaseOrder)">
            <summary>
            POST api/values
            This Api is used to save PurchaseOrder Model.
            it takes PurchaseOrder Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>PurchaseOrder.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.PutPurchaseOrder">
            <summary>
            PUT api/values/5
            This Method is used to update PurchaseOrder Model
            </summary>
            <returns>PurchaseOrder.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.DeletePurchaseOrder(System.Guid,System.String)">
            <summary>
            This Method is used to delete PurchaseOrder model
            DELETE api/values/5
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.DeletePurchaseOrder(System.Guid[],System.String)">
            <summary>
            This API is used to DELETE a list of PurchaseOrder Model.
            </summary>
            <param name="ids">The ids.</param>
            <param name="model">The model.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.BatchDeletePurchaseOrder(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete purchase order.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.GetPurchaseOrderHistory(BQECore.Model.BQEParameters)">
            <summary>
            GetPOReceivedItems : This Api is used to get particular PurchaseOrder's received item details.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>PurchaseOrder Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.GetShipToAddressList">
            <summary>
            ShipToAddress : This Api is used to get ShipToAddress List.
            </summary>
            <returns>ShipToAddress List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.PostPurchaseOrderReceivedItems(BQECore.Model.PurchaseOrderReceivedItem)">
            <summary>
            Saves received items for a purchase order.
            </summary>
            <param name="value">The value.</param>
            <returns>PurchaseOrderReceivedItem.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.PostPurchaseOrderClone(BQECore.Model.PurchaseOrderClone)">
            <summary>
            Posts the purchase order clone.
            </summary>
            <param name="value">The value.</param>
            <returns>PurchaseOrder.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.PurchaseOrdersSummary(BQECore.Model.BQEParameters)">
            <summary>
            Purchases the orders summary.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>PurchaseOrderSummary.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.GetPurchaseOrderEmailReport(System.Guid,System.Guid,ModuleNames)">
            <summary>
            Gets the Object containing Purchaseorder Report along with email properties
            </summary>
            <param name="vendorId">The vendor identifier.</param>
            <param name="purchaseOrderId">The purchase order identifier.</param>
            <param name="module">The module identifier.</param>
            <returns>EmailReport.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.UnBilledPurchaseOrderItems(BQECore.Model.BQEParameters)">
            <summary>
            Uns the billed purchase order items.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;PurchaseOrderDetail&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.PurchaseOrderController.UnBilledPurchaseOrders(BQECore.Model.BQEParameters)">
            <summary>
            Uns the billed purchase orders.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;PurchaseOrder&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.SecurityController">
            <summary>
            SecurityController Inherits ApiController
            This class Controls all API Calls for Security
            Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.SecurityModule}</cref>
            </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.Fill">
            <summary>
            Fills this instance.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.GetProfile(System.Guid)">
            <summary>
            GetSecurityList : This Api is used to get all the security for particular module
            </summary>
            <param name="id">The identifier.</param>
            <returns>ActivityList List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.GetUserProfile(System.Guid)">
            <summary>
            Gets the user profile.
            </summary>
            <param name="id">The identifier.</param>
            <returns>UserSecurityProfile.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.GetNewProfile">
            <summary>
            Gets the new profile.
            </summary>
            <returns>SecurityProfile.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.ProfileList(BQECore.Model.BQEParameters)">
            <summary>
            GetSecurityTemplateList : This Api is used to get list of Security Templates.
            </summary>
            <param name="param">The parameter.</param>
            <returns>List{System.Web.Mvc.SelectListItem}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.AssignSecurityProfile(BQECore.Model.AssignSecurityProfile)">
            <summary>
            Asigns the security profile.
            </summary>
            <param name="profile">The profile.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.PostProfile">
            <summary>
            Posts the security profile.
            </summary>
            <returns>SecurityProfile.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.PostUserProfile">
            <summary>
            Posts the user profile.
            </summary>
            <returns>SecurityProfile.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.PutProfile">
            <summary>
            the security profile.
            </summary>
            <returns>SecurityProfile.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.PutUserProfile">
            <summary>
            Puts the user profile.
            </summary>
            <returns>SecurityProfile.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.ProfileDelete(BQECore.Model.DeleteSecurityProfile)">
            <summary>
            Deletes a Security Profile.
            </summary>
            <param name="objSecurityTemplate">The DeleteSecurityProfile.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.DeleteProfile(System.Guid)">
            <summary>
            Deletes a Security Profile.
            </summary>
            <param name="id">The Profile_ID.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.DeleteProfiles(System.Guid[])">
            <summary>
            This API is used to DELETE a list of SecurityProfile Model.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.BatchDeleteDeleteProfiles(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete delete profiles.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.GetModuleSecurity(ModuleNames)">
            <summary>
            Gets the module security.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Security.SecurityModel.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.AssignSecurity(BQECore.Model.AssignSecurity)">
            <summary>
            This API is used for Assigning security.
            </summary>
            <param name="security">The security.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.AssignNewSecurity">
            <summary>
            Posts the Employee profile.
            </summary>
            <returns>SecurityProfile.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.GetModuleSecurity">
            <summary>
            Gets the list of all module security lists.
            </summary>
            <returns>IEnumerable&lt;Security.ModuleSecurity&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.ParseProfileRequest``1">
            <summary>
            Parses the profile request.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>T.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.CreateType(System.String)">
            <summary>
            Creates the type.
            </summary>
            <param name="typeName">Name of the type.</param>
            <returns>Type.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.SecurityController.AllChildren(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Alls the children.
            </summary>
            <param name="json">The json.</param>
            <returns>IEnumerable&lt;JToken&gt;.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:BQECore.Api.Controllers.EmployeeController" -->
        <member name="P:BQECore.Api.Controllers.EmployeeController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.Fill">
            <summary>
            Fills this instance.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.EmployeeCompact(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EmployeeCompact</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all or filtered employee compact list
             </summary>
             <param name="parameters">Represenst the parameters.</param>
             <returns>List of Employee Objects with lesser columns</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.ClientManagers(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>ClientManagers</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all or filtered client managers compact list
             </summary>
             <param name="parameters">Represen the parameters.</param>
             <returns>List of Employee Objects with lesser columns</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.ProjectManagers(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb></Verb>
            <Verb></Verb>
            <Endpoint_Name>ProjectManagers</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all or filtered project managers compact list
             </summary>
             <param name="parameters">Represenst the parameters.</param>
             <returns>List of Employee Objects with lesser columns</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.EmployeeList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb></Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all or filtered employee list
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable&lt;EmployeeList&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.GetEmployeeVendorList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmployeeVendorList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE employee vendor list.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable&lt;EmployeeVendorCompactList&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.EmployeeSecurityProfileList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EmployeeSecurityProfileList</Endpoint_Name>
             <summary>
             This API method is used to employee the security profile list.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable&lt;EmployeeSecurityProfileList&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.EmployeeVendorCompact(BQECore.Model.BQEParameters,EmployeeOrVendor)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>EmployeeVendorCompact</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all or filtered employee vendor compact list
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <param name="flagEmployeeOrVendor">Represents the flag employee or vendor parameter.</param>
             <returns>List of Employee Objects with lesser columns</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.SubmitToEmployeeVendorCompact(BQECore.Model.BQEParameters,EmployeeOrVendor)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>SubmitToEmployeeVendorCompact</Endpoint_Name>
             <summary>
             This API method is used to submit to employee vendor compact.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <param name="flagEmployeeOrVendor">Represents the flag employee or vendor parameter.</param>
             <returns>IEnumerable&lt;EmployeeVendorCompactBase&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.ConvertEmployeeIntoVendor(BQECore.Model.EmployeeCompact)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>ConverEmployeeIntoVendor</Endpoint_Name>
             <summary>
             This API method is used to convert an employee into a vendor.
             </summary>
             <param name="employee">Employee to convert</param>
             <returns>Vendor.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.GetSubmitTo(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetSubmitTo</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE the submit to.
             </summary>
             <param name="id">Represents the identifier parameter.</param>
             <returns>SubmitToOption.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.GetEmployee(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmployee</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific employee. We pass id of type string as parameter
             </summary>
             <param name="id">Represents Employee_ID or EmployeeID parameter</param>
             <returns>Employee model</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.Employees(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>Employees</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE employee list.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable{Employee}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.GetEmployeeRole">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmployeeRole</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE employee role.
             </summary>
             <returns>IEnumerable&lt;SelectListItem&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.GetEmployeeSubmitToList">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmployeeSubmitToList</Endpoint_Name>
             <summary>
              This API method is used to RETRIEVE submit to list.
             </summary>
             <returns>List{System.Web.Mvc.SelectListItem}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.PostEmployee(BQECore.Model.Employee)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostEmployee</Endpoint_Name>
             <summary>
            This API method is used to CREATE an employee
             </summary>
             <param name="value">The value.</param>
             <returns>Employee.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.PutEmployee">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutEmployee</Endpoint_Name>
             <summary>
             This API method is used to UPDATE an employee
             </summary>
             <returns>Employee.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.DeleteEmployee(System.Guid)">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmployee</Endpoint_Name>
             <summary>
             This API method is used to DELETE an employee
             </summary>
             <param name="id">Represents Employee_ID parameter</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.DeleteEmployees(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteEmployees</Endpoint_Name>
             <summary>
             This API is used to DELETE list of employee model
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.BatchDeleteEmployee(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteEmployee</Endpoint_Name>
             <summary>
             This API method is used to batch DELETE employee.
             </summary>
             <param name="ids">Represents the identifiers parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.PostCloneEmployee(BQECore.Model.MergeArgs)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostCloneEmployee</Endpoint_Name>
             <summary>
             This API method is used to clone an employee
             </summary>
             <param name="args">Represents the arguments parameter.</param>
             <returns>BQEResource.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.MergeEmployee(BQECore.Model.MergeArgs)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>MergeEmployee</Endpoint_Name>
             <summary>
             This API method is used to merge employee.
             </summary>
             <param name="args">Represents the arguments parameter.</param>
             <returns>System.String.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.BatchChange(BQECore.Model.EmployeeBatchChange)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchChange</Endpoint_Name>
             <summary>
             This API method is used to make batch change to employees
             </summary>
             <param name="value">Represents  BatchChange containing fields to batch update</param>
             <returns>BQEResource.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.FullBatchChange(BQECore.Model.FullEmployeeBatchChange)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>FullBatchChange</Endpoint_Name>
             <summary>
             This API method is used to make full batch change.
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.EmployeePerformance(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>EmployeePerformance</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE employee performance
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>EmployeePerformance.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.EmployeeHR(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>EmployeeHR</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE employee HR related information
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>EmployeeHRInfo.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.GetEmployeeDepartmentList">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmployeeDepartmentList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE employee department list.
             </summary>
             <returns>IEnumerable&lt;SingleValue&lt;System.String&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.GetEmployeeTitleList">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetEmployeeTitlelist</Endpoint_Name>
             <summary>
             Thi API method is used to RETRIEVE employee title list.
             </summary>
             <returns>IEnumerable&lt;SingleValue&lt;System.String&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.EmployeeDepartmentList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>EmployeeDepartmentList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all the employee departments
             </summary>
             <param name="parameters">Represenst the parameters.</param>
             <returns>IEnumerable&lt;ListItem&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.EmployeeTitleList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>EmployeeTitleList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE all available employee titles.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>IEnumerable&lt;ListItem&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.GetFederalStatusList">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetFedar</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE federal status list.
             </summary>
             <returns>IEnumerable&lt;SingleValue&lt;System.String&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.EmployeeSummaryInfo(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EmployeeSummaryInfo</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE employees summary information.
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>SummaryInfo.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.EmployeesSummary(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>EmployeeSummary</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE summarized information about employees income bar
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>EmployeeSummary.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.PermissibleHours(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PermissibleHours</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE summarized information about employees permissible hours
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>EmployeePerformance.EmployeePermissibleHours.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.GetLoggedInUser_ID">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetLoggedInUser</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE currently logged in user _ID
             </summary>
             <returns>Guid.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.ManagerCompact(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>ManagerCompact</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE list of employees/vendors for manager list
             </summary>
             <param name="parameters">Represents the parameters.</param>
             <returns>List of Employee Objects with lesser columns</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.EmployeeController.HasUnpaidReimbursables(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>HasUnpaidReimbursables</Endpoint_Name>
             <summary>
             This API is used to check whether a particular employee/vendor has any unpaid reimbursables.
             </summary>
             <param name="id">Represents Employee or Vendor ID</param>
             <returns><c>true</c> if [has unpaid reimbursables] [the specified identifier]; otherwise, <c>false</c>.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.ExpenseController">
            <summary>
            ExpenseController Inherits ApiController
            This class Controls all API Calls for Expense
            Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.Expense}</cref>
            </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseController.Fill">
            <summary>
            Fills this instance.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseController.Expenses(BQECore.Model.ExpenseListListParameter)">
            <summary>
            GetExpense : This Api is used to get all the Expenses
            in form of Expense List
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>Expense List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseController.ExpenseList(BQECore.Model.BQEParameters)">
            <summary>
            ExpenseListForGrid : This Api is used to get all the Expenses
            in the form of ExpenseForGrid List
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>ExpenseForGrid List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseController.ExpenseCompact(BQECore.Model.BQEParameters)">
            <summary>
            ExpenseListForDropdown : This Api is used to get all the Expenses
            with lesser fields that will be used for drop downs
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>ExpenseCompact List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseController.GetExpense(System.String)">
            <summary>
            GetExpense : This Api is used to get  a particular Expense.
            We pass Expense ID of type String as parameter
            </summary>
            <param name="id">id is Guid</param>
            <returns>Expense Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseController.PostExpense(BQECore.Model.Expense)">
            <summary>
            POST api/values
            This Api is used to save Expense Model.
            it takes Expense Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>Expense.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseController.PutExpense">
            <summary>
            PUT api/values/5
            This Method is used to update Expense Model
            </summary>
            <returns>Expense.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseController.BatchChange(BQECore.Model.ExpenseBatchChange)">
            <summary>
            This Api is used to do Batch Change to  Expenses
            </summary>
            <param name="value">of type BatchChange containing fields to batch update</param>
            <returns>ExpenseBatchChange.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseController.FullBatchChange(BQECore.Model.FullExpenseBatchChange)">
            <summary>
            This Api is used to do Batch Change to  Expenses
            </summary>
            <param name="value">of type BatchChange containing fields to batch update</param>
            <returns>FullExpenseBatchChange.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseController.MergeExpense(BQECore.Model.BatchMerge)">
            <summary>
            This API Handles merge for multiple ID's
            </summary>
            <param name="batchMerge">The batch merge.</param>
            <returns>List of APIResponse</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseController.DeleteExpense(System.Guid)">
            <summary>
            This Method is used to delete Expense model
            DELETE api/values/5
            </summary>
            <param name="id">The identifier.</param>
            DELETE api/expense/5
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseController.DeleteExpenses(System.Guid[])">
            <summary>
            Deletes the expenses.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseController.BatchDeleteExpense(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete expense.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseController.GetExpenseTypes">
            <summary>
            GetExpenseTypes : This Api is used to get Expense Types.
            </summary>
            <returns>List of Expense Types</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ExpenseController.GetExpenseSummaryInfo(BQECore.Model.BQEParameters)">
            <summary>
            Gets the expense summary information.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>SummaryInfo.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.FeeScheduleController">
            <summary>
            Class FeeScheduleController.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.FeeSchedule}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.FeeScheduleController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BQECore.Api.Controllers.FeeScheduleController"/> class.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.FeeSchedules(BQECore.Model.BQEParameters)">
            <summary>
            This API is used to get All or filtered SFS
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List of FeeSchedule Objects</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.FeeScheduleCompact(BQECore.Model.BQEParameters)">
            <summary>
            FeeScheduleListForDropdown : This Api is used to get all the FeeSchedules
            in the form of FeeScheduleForDropdown List
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>FeeScheduleForDropdown List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.GetFeeSchedule(System.Guid)">
            <summary>
            Gets a FeeSchedule Object Based on ID
            </summary>
            <param name="id">FeeSchedule_ID</param>
            <returns>FeeSchedule</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.GetIsFeeScheduleInUse(System.Guid)">
            <summary>
            This API is used to see if the SFS is in use.
            </summary>
            <param name="id">FeeSchedule_ID</param>
            <returns>true if in use</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.PostFeeSchedule(BQECore.Model.FeeSchedule,System.Nullable{System.Guid},FeeScheduleFrom)">
            <summary>
            This Api is used to save FeeSchedule.
            </summary>
            <param name="value">FeeSchedule Object to be saved</param>
            <param name="id">id = Based On FeeSchedule_ID</param>
            <param name="feeScheduleFrom">The fee schedule from.</param>
            <returns>FeeSchedule.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.PutFeeSchedule">
            <summary>
            This Method is used to update SFS
            </summary>
            <returns>FeeSchedule.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.DeleteFeeSchedule(System.Guid,System.Boolean)">
            <summary>
            This Method is used to delete SFS
            </summary>
            <param name="feeSchedule_ID">The fee schedule identifier.</param>
            <param name="deleteAssignedFeeSchedule">if set to <c>true</c> [delete assigned fee schedule].</param>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.DeleteFeeSchedules(System.Guid[],System.Boolean)">
            <summary>
            This API is used to DELETE a list of FeeSchedule Model
            </summary>
            <param name="ids">The ids.</param>
            <param name="deleteAssignedFeeSchedule">if set to <c>true</c> [delete assigned fee schedule].</param>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.BatchDeleteFeeSchedule(BQECore.Model.BatchDelete,System.Boolean)">
            <summary>
            Batches the delete fee schedule.
            </summary>
            <param name="ids">The ids.</param>
            <param name="deleteAssignedFeeSchedule">if set to <c>true</c> [delete assigned fee schedule].</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.CreateLineItemsFromBudget(BQECore.Model.MergeArgs)">
            <summary>
            POST api/values
            This Api is used to Create Line Items From Budget.
            </summary>
            <param name="args">args [FeeSchedule_ID, Budget_ID]</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.PutFeeScheduleOrder(System.Guid,System.Int32)">
            <summary>
            This Api is used to update the position of FeeSchedule line items.
            </summary>
            <param name="FeeScheduleDetail_ID">The fee schedule detail identifier.</param>
            <param name="priority">The priority.</param>
            <returns>Boolean.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.PutFeeScheduleExpenseOrder(System.Guid,System.Int32)">
            <summary>
            This Api is used to update the position of FeeSchedule line items.
            </summary>
            <param name="FeeScheduleDetail_ID">The fee schedule detail identifier.</param>
            <param name="priority">The priority.</param>
            <returns>Boolean.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.FeeScheduleServiceItems(BQECore.Model.BQEParameters)">
            <summary>
            This API is used to get Details of a SFS
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>FeeSchedule Details</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.GetFeeScheduleServiceItem(System.Guid)">
            <summary>
            Gets the fee schedule service item.
            </summary>
            <param name="id">The identifier.</param>
            <returns>FeeScheduleService.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.PostFeeScheduleServiceItem(BQECore.Model.FeeScheduleService)">
            <summary>
            This Api is used to save SFS Detail Line Item.
            </summary>
            <param name="value">The value.</param>
            <returns>FeeScheduleDetail.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.PutFeeScheduleServiceItem">
            <summary>
            This Method is used to update SFS Detail Line Item
            </summary>
            <returns>FeeScheduleDetail.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.DeleteFeeScheduleServiceItem(System.Guid)">
            <summary>
            This Method is used to delete SFS Detail Line Item
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.BatchDeleteFeeScheduleServiceItems(BQECore.Model.BatchDelete)">
            <summary>
            This API is used to DELETE a list of FeeScheduleServices items
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.DeleteFeeScheduleServiceItems(System.Guid[])">
            <summary>
            Deletes the fee schedule service items.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.ProcessFeeScheduleServiceItem(BQECore.Model.ProcessFeeScheduleService)">
            <summary>
            This Api is used to get Processed FeeScheduleDetail Line after user updates a field.
            </summary>
            <param name="feeScheduleService">Contains FieldChanged field which contains which field has user updated</param>
            <returns>FeeScheduleDetail Line</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.UpdateServiceDefaults(BQECore.Model.FeeScheduleService)">
            <summary>
            This api is used to set rates, taxes and memo for <see cref="T:BQECore.Model.FeeScheduleService" /> item.
            </summary>
            <param name="feeScheduleService">Object to update</param>
            <returns>FeeScheduleService.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.FeeScheduleExpenseItems(BQECore.Model.BQEParameters)">
            <summary>
            This API is used to get Fee Schedule Expense Details S
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>FeeSchedule Details</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.GetFeeScheduleExpenseItem(System.Guid)">
            <summary>
            Gets the fee schedule expense item.
            </summary>
            <param name="id">The identifier.</param>
            <returns>FeeScheduleExpense.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.PostFeeScheduleExpenseItem(BQECore.Model.FeeScheduleExpense)">
            <summary>
            This Api is used to save FeeScheduleExpense .
            </summary>
            <param name="value">The value.</param>
            <returns>FeeScheduleDetail.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.PutFeeScheduleExpenseItem">
            <summary>
            This Method is used to update FeeScheduleExpense
            </summary>
            <returns>FeeScheduleExpense.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.SetFeeScheduleOrder(BQECore.Model.PartialUpdate)">
            <summary>
            This API is used to set a line item order for Fee Schedule Service item.
            </summary>
            <param name="lineItems">The line items.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.SetFeeExpenseOrder(BQECore.Model.PartialUpdate)">
            <summary>
            This API is used to set a line item order for Fee Schdule expense.
            </summary>
            <param name="lineItems">The line items.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.DeleteFeeScheduleExpenseItem(System.Guid)">
            <summary>
            This Method is used to delete FeeScheduleExpense
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.BatchDeleteFeeScheduleExpenseItems(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete fee schedule expense items.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.DeleteFeeScheduleExpenseItems(System.Guid[])">
            <summary>
            This API is used to DELETE a list of FeeScheduleExpense Items
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.ProcessFeeScheduleExpenseItem(BQECore.Model.ProcessFeeScheduleExpense)">
            <summary>
            This Api is used to get Processed FeeScheduleExpense Line after user updates a field.
            </summary>
            <param name="myFeeScheduleDetail">Contains FieldChanged field which contains which field has user updated</param>
            <returns>FeeScheduleDetail Line</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.FeeScheduleController.UpdateExpenseDefaults(BQECore.Model.FeeScheduleExpense)">
            <summary>
            This api is used to set rates, taxes and memo for <see cref="T:BQECore.Model.FeeScheduleExpense" /> item.
            </summary>
            <param name="feeScheduleExpense">Object to update</param>
            <returns>FeeScheduleExpense.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.HomeApiController">
            <API>
            <API_Name>INDEX</API_Name>
            <API_Description>Indexes</API_Description>
             <summary>
             Class HomeAPIController.
             </summary>
             </API>
             <seealso cref="T:System.Web.Mvc.Controller" />
        </member>
        <member name="M:BQECore.Api.Controllers.HomeApiController.Index">
            <summary>
            Indexes this instance.
            </summary>
            <returns>ActionResult.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.ClientController">
            <API></API>
            <API_Name>Client</API_Name>
            <API_Description>
            Clients allows you to create and manage the profiles of your customers. 
            You can have a main contact as well as additional contacts for the client. 
            The client information is used on reports and invoices.
            Allows you to retrieve a specific or a list of clients
            Allows you to retrieve clients for grids and dropdowns
            Allows you to update client model
            Allows you to create client model
            Allows you to delete client model
             </API_Description>
             <summary>
             ClientController Inherits ApiController
             This class Controls all API Calls for Client
             Module.
             </summary>
             <seealso>
                 <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.Client}</cref>
             </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.ClientController.Module">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>Module</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE the module.
             </summary>
             <value>The module.</value>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.Fill">
            <Endpoint>
            <Verb></Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             Fills this instance.
             </summary>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.Clients(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE list of clients.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>Client List</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.GetNewClient">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetNewClient</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE client model with default global settings applied.
             </summary>
             <returns>Project.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.ClientList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name>ClientList</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE list of clients for grids.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>IEnumerable{Client}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.ClientCompact(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Verb>GET</Verb>
            <Endpoint_Name> ClientCompact</Endpoint_Name>
             <summary>
             This API method is usd to RETRIEVE list of clients for drop downs.
             </summary>
             <param name="parameters">Represennts the parameters passed.</param>
             <returns>IEnumerable{Client}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.GetClientListBase(System.Guid)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetClientListBase</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE list of Clients for Drop downs.
             </summary>
             <param name="id">The identifier.</param>
             <returns>IEnumerable{Client}.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.GetClient(System.String,System.Boolean)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetClient</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a specific client.
             We pass Client_ID or ClientID as parameter in for of Client List.
             </summary>
             <param name="id">Identifier represennts the first parameter passed.</param>
             <param name="skipControlCheck">The second parameter if set to <c>true</c> [skip control check].</param>
             <returns>Client Model</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.ClientSummary(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>ClientSummary</Endpoint_Name>
             <summary>
             This API method id used to RETRIEVE summarized information regarding clients income.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>ClientSummary.</returns>
             </Endpoint>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BQECore.Api.Controllers.ClientController.GetClientDetailSummary(BQECore.Model.BQEParameters)" -->
        <member name="M:BQECore.Api.Controllers.ClientController.PostClient(BQECore.Model.Client)">
             POST api/values
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PostClient</Endpoint_Name>
             <summary>
             This API method is used to CREATE a client model.
             It takes client model as parameter
             </summary>
             <param name="value">Represents the value passed.</param>
             <returns>Client.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.PutClient">
             PUT api/values/5
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>PutClient</Endpoint_Name>
             <summary>
             This API method is used to UPDATE client model.
             </summary>
             <returns>Client.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.DeleteClient(System.Guid)">
             DELETE api/values/5
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteClient</Endpoint_Name>
             <summary>
             This API method is used to DELETE a specific client model. We pass Client_ID as parameter.
             </summary>
             <param name="id">Represents the unique identifier passed.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.DeleteClients(System.Guid[])">
            <Endpoint>
            <Verb>DELETE</Verb>
            <Endpoint_Name>DeleteClients</Endpoint_Name>
             <summary>
             This API method is used to DELETE list of client model. We pass ids as parameter.
             </summary>
             <param name="ids">Represents the unique identifiers.</param>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.BatchDeleteClients(BQECore.Model.BatchDelete)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchDeleteClients</Endpoint_Name>
             <summary>
             This API methods is used to batch DELETE clients. We pass ids as parameter.
             </summary>
             <param name="ids">represents the unique identifiers.</param>
             <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.MergeClient(BQECore.Model.BatchClientMerge)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>MergeClient</Endpoint_Name>
             <summary>
             This API method is used to merge Client.
             </summary>
             <param name="batchClientMerge">The batch client merge.</param>
             <returns>BQEResource.</returns>
             </Endpoint>
             BatchMerge
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.Clone(BQECore.Model.CloneClient)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>Clone</Endpoint_Name>
             <summary>
             This API method is used to clone a specified value.
             </summary>
             <param name="value">Represents the value parameter.</param>
             <returns>Client.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.BatchChange(BQECore.Model.ClientBatchUpdate)">
            <Endpoint>
            <Verb>PUT</Verb>
            <Endpoint_Name>BatchChange</Endpoint_Name>
             <summary>
             This API method is used to do a batch UPDATE to clients
             </summary>
             <param name="batchUpdate">Represents the batch update parameter.</param>
             <returns>BQEResource.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.FullBatchChange(BQECore.Model.FullClientBatchUpdate)">
            <Endpoint>
            <Verb></Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API method is used to do a full batch UPDATE to clients
             </summary>
             <param name="batchUpdate">Represents the full batch update parameter.</param>
             <returns>BQEResource.</returns>
            </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.ClientSummaryInfo(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name>ClientSummaryInfo</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE clients information summary.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>Client summary info.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.ClientBalanceList(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>GET</Verb>
            <Verb>POST</Verb>
            <Endpoint_Name></Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE the statement list.
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>IEnumerable&lt;StatementList&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.Statements(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>Statements</Endpoint_Name>
             <summary>
             This API method is used to CREATE statements for a specified parameter.
             </summary>
             <param name="parameter">The parameter.</param>
             <returns>IEnumerable&lt;Statement&gt;.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.GetStatementReport(BQECore.Model.StatementType)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>GetStatementReport</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE the statement report .
             </summary>
             <param name="statement">represents the statement parameter.</param>
             <returns>Report Object</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.GetReport(System.String)">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetReport</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE a report.
             </summary>
             <param name="id">Represents the unique identifier passed.</param>
             <returns>Report.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.GetStatementOptions">
            <Endpoint>
            <Verb>GET</Verb>
            <Endpoint_Name>GetStatementOptions</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE the statement type .
             </summary>
             <returns>StatementType.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.ClientPerformance(BQECore.Model.BQEParameters)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>ClientPerformance</Endpoint_Name>
             <summary>
             This API method is used to RETRIEVE the performance of the client
             </summary>
             <param name="parameters">Represents the parameters passed.</param>
             <returns>ClientPerformance.</returns>
             </Endpoint>
        </member>
        <member name="M:BQECore.Api.Controllers.ClientController.PerformanceMargins(BQECore.Model.PerformanceMarginParameter)">
            <Endpoint>
            <Verb>POST</Verb>
            <Endpoint_Name>PerformanceMargins</Endpoint_Name>
             <summary>
             This API method is used RETRIEVE performance margin for a client performance. 
             </summary>
             <param name="parameter">The parameter.</param>
             <returns>BasePerformance.PerformanceMargins.</returns>
             </Endpoint>
        </member>
        <member name="T:BQECore.Api.Controllers.ProjectController">
            <summary>
            ProjectController Inherits ApiController
            This class Controls all API Calls for Project
            Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.Project}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.ProjectController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.Fill">
            <summary>
            Fills this instance.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.Projects(BQECore.Model.ProjectListParameter)">
            <summary>
            Projects the list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{Project}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.ProjectList(BQECore.Model.BQEParameters)">
            <summary>
            Projects the list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{Project}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.ProjectCompactPlus(BQECore.Model.BQEParameters)">
            <summary>
            Gets the project compact plus.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;ProjectCompactPlus&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.ProjectCompact(BQECore.Model.BQEParameters)">
            <summary>
            Gets the list of Projects for Dropdowns.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{Project}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.ProjectCompactWithoutHierarchy(BQECore.Model.BQEParameters)">
            <summary>
            Gets the list of Projects for Dropdowns with RootProject.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{Project}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.GetProject(System.String)">
            <summary>
            Gets the project.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Project.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.GetProjectPhases(System.Guid)">
            <summary>
            GetProjectPhases : This Api is used to get set of Projects (Phases).
            We pass Project_ID
            to get list of Phases of the Project
            </summary>
            <param name="id">The identifier.</param>
            <returns>Project List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.GetProjectPhasesAllLevels(System.Guid)">
            <summary>
            GetProjectPhasesAllLevels : This Api is used to get set of Projects (Phases).
            We pass Project_ID
            to get list of Phases of all the levels of the Project
            </summary>
            <param name="id">The identifier.</param>
            <returns>Project List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.PostProject(BQECore.Model.PartialProject)">
            <summary>
            POST api/values
            This Api is used to save Project Model.
            it takes Project Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>Project.</returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
            <exception cref="T:System.Net.Http.HttpResponseMessage"></exception>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.PostDetailProject(BQECore.Model.Project)">
            <summary>
            Posts a detail project.
            </summary>
            <param name="value">The value.</param>
            <returns>A Project.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.PutProject">
            <summary>
            PUT api/values/5
            This Method is used to update Project Model
            </summary>
            <returns>Project.</returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
            <exception cref="T:System.Net.Http.HttpResponseMessage"></exception>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.PutStructure">
            <summary>
            Puts the structure.
            </summary>
            <returns>ProjectStructure.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.DeleteProject(System.Guid)">
            <summary>
            This Method is used to delete Project model
            DELETE api/values/5
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.DeleteProjects(System.Guid[])">
            <summary>
            This API is used to DELETE a list of Project Model
            </summary>
            <param name="ids">The Project_IDs.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.BatchDeleteProjects(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete projects.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.ProjectSummary(BQECore.Model.BQEParameters)">
            <summary>
            Gets summarized information about project income
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>ProjectSummary.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.ChangeProjectHierarchy(BQECore.Model.ProjectHierarchyArgs)">
            <summary>
            ChangeProjectHierarchy: This API is used to change a project's hierarchy.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.GetProjectTypes">
            <summary>
            GetProjectTypes : This Api is used to get Types of projects.
            </summary>
            <returns>List of Project Types</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.GetProjectStatusList">
            <summary>
            GetProjectStatusList : This Api is used to get list of Project status.
            </summary>
            <returns>List of Project Status</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.PostProjectPhase(BQECore.Model.ProjectPhaseModel)">
            <summary>
            This Api is used to Create a  Project Phase.
            it takes CreatePhase Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>ProjectPhaseModel.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.PostClone(BQECore.Model.CloneProject)">
            <summary>
            This Api is used to Clone a Project.
            it takes ProjectClone Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.PostMergeProject(BQECore.Model.MergeProject)">
            <summary>
            This Api is used to Merge Project
            </summary>
            <param name="value">of type MergeProject containing options for Merging the Project</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.PutBatchChange(BQECore.Model.ProjectBatchChange)">
            <summary>
            This Api is used to do Batch Change to  Projects
            </summary>
            <param name="value">of type BatchChange containing fields to batch update</param>
            <returns>ProjectBatchChange.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.PutFullBatchChange(BQECore.Model.FullProjectBatchChange)">
            <summary>
            This Api is used to do Batch Change to  Projects
            </summary>
            <param name="value">of type BatchChange containing fields to batch update</param>
            <returns>FullProjectBatchChange.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.ProjectAssignUnassign(BQECore.Model.ProjectBatchAssigment)">
            <summary>
            This Api is used to do assign unassign budgets, fee schedules and estimates
            </summary>
            <param name="value">of type ProjectBatchAssigment containing fields to batch update</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.GetProjectFrequencyList">
            <summary>
            GetProjectFrequencyList : This Api is used to get Frequency List for Recurring Projects.
            </summary>
            <returns>List of Frequency Oprion for Recurring Projects</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.GetProjectTriggerTypeList">
            <summary>
            GetProjectTriggerTypeList : This Api is used to get Trigger Types for Delayed-SFS.
            </summary>
            <returns>List of Frequency Options for Recurring Projects</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.AutoAddNewProject(BQECore.Model.AutoAddNewProject)">
            <summary>
            This API is for adding a Project on the fly from Client Screen
            </summary>
            <param name="autoAddNewProject">The automatic add new project.</param>
            <returns>Boolean.</returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
            <exception cref="T:System.Net.Http.HttpResponseMessage"></exception>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.GetNewProject">
            <summary>
            This Api is used to Get Project Model with default Global Settings Applied
            </summary>
            <returns>Project.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.GetNewPhase(System.Guid)">
            <summary>
            This Api is used to Get Project Model with default Global Settings Applied
            for the parent project.
            </summary>
            <param name="parent_Id">The parent identifier.</param>
            <returns>Project.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.ProjectSummaryInfo(BQECore.Model.BQEParameters)">
            <summary>
            Projects the summary information.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>SummaryInfo.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.GetProjectStructure(System.Guid)">
            <summary>
            Gets the project structure.
            </summary>
            <param name="id">The Project identifier.</param>
            <returns>ProjectStructure.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.ProjectStructure(BQECore.Model.BQEParameters)">
            <summary>
            Gets the Projects structure.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;ProjectStructure&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.PutPhaseOrder(System.Guid,EnumUpDown)">
            <summary>
            This Api is used to change Phase Order number of Phases of a Project.
            </summary>
            <param name="Project_ID">The Project  identifier.</param>
            <param name="upDown">Up down.</param>
            <returns>ResponseCode.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.DragDropProject(BQECore.Model.DragDropProject)">
            <summary>
            This API is used to drag drop a Phases.
            </summary>
            <param name="dragDrop">The drag drop.</param>
            <returns>ResponseCode.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.OpeningBalance(BQECore.Model.OpeningBalance)">
            <summary>
            This API is used to post Opening balance for a project.
            </summary>
            <param name="balance">The balance.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.ProjectPerformance(BQECore.Model.BQEParameters)">
            <summary>
            Projects the performance.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>ProjectPerformance.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.PerformanceMargins(BQECore.Model.PerformanceMarginParameter)">
            <summary>
            five Minutes
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>BasePerformance.PerformanceMargins.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.GetOpeningBalance(System.String)">
            <summary>
            Gets the opening balance.
            </summary>
            <param name="id">The identifier.</param>
            <returns>OpeningBalance.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.PutOpeningBalance(BQECore.Model.OpeningBalance)">
            <summary>
            Updates Opening Balance of a Project
            </summary>
            <param name="openingBalance">The opening balance.</param>
            <returns>OpeningBalance.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.GetProjectWithGroupCompact(BQECore.Model.BQEParameters)">
            <summary>
            Gets the project with group compact.
            </summary>
            <param name="param">The parameter.</param>
            <returns>List&lt;ProjectWithGroupCompact&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.ChangeProjectInvoiceTemplate(BQECore.Model.ChangeInvoiceTemplate)">
            <summary>
            Changes the project invoice template.
            </summary>
            <param name="param">The parameter.</param>
            <returns>ResponseCode.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.GetAllPhasesOfProject(System.Guid)">
            <summary>
            Changes the project invoice template.
            </summary>
            <param name="param">The parameter.</param>
            <returns>ResponseCode.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.ProjectController.TransactionHistory(BQECore.Model.TransactionHistoryParameters)">
            <summary>
            Gets the transaction history.
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:BQECore.Api.Controllers.TermController">
            <summary>
            ActivityController Inherits ApiController
            This class Controls all API Calls for Activity
            Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.TermsTable}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.TermController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.TermController.Terms(BQECore.Model.BQEParameters)">
            <summary>
            Termses the list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{TermsTable}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TermController.TermsList(BQECore.Model.BQEParameters)">
            <summary>
            Returns the terms list and checks the user security as well.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{TermsTable}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TermController.GetTerm(System.String)">
            <summary>
            GetTerm : is used for getting particular terms entry by sending TermsTable_id as Guid
            </summary>
            <param name="id">TermsTable_id as Guid</param>
            <returns>TermsTable.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TermController.PostTerm(BQECore.Model.TermsTable)">
            <summary>
            POST api/values
            This Api is used to carete new Term Entry.
            it takes TermsTable Model as parameter
            </summary>
            <param name="value">The value.</param>
            <returns>TermsTable.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TermController.PutTerm">
            <summary>
            PUT api/values/5
            This Method is used to update Term Model
            </summary>
            <returns>TermsTable.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TermController.DeleteTerm(System.String)">
            <summary>
            This Method is used to delete Terms model
            DELETE api/values/5
            </summary>
            <param name="id">The identifier.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TermController.DeleteTerms(System.Guid[])">
            <summary>
            This API is used to DELETE a list of Terms Model.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.TermController.BatchDeleteTerms(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete terms.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.TimeEntryController">
            <summary>
            TimeEntryController Inherits ApiController
            This class Controls all API Calls for TimeEntry
            Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.TimeEntry}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.TimeEntryController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.Fill">
            <summary>
            Fills this instance.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.TeAmount(BQECore.Model.BQEParameters)">
            <summary>
            This Api is used to Get TimeEntry Amount based on filters
            </summary>
            <param name="parameters">Filter Parameters</param>
            <returns>Decimal value</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.TimeEntries(BQECore.Model.BQEParameters)">
            <summary>
            API provides list of TimeEntry.
            </summary>
            <param name="parameters">BQEParameters</param>
            <returns>TimeEntry List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.TimeEntryTotals(BQECore.Model.BQEParameters)">
            <summary>
            TimeEntryTotals.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>TimeEntry Totals.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.TimeEntryCompact(BQECore.Model.BQEParameters)">
            <summary>
            list of TimeEntryForDropDown object matching filters
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{TimeEntryForDropDown}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.PostUpdateTimeentryRates(BQECore.Model.UpdateBatch)">
            <summary>
            Post : This API call updaterates
            </summary>
            <param name="updateRates">The update rates.</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.PostCopyPasteTimeEntry(BQECore.Model.UpdateBatch)">
            <summary>
            Posts the copy paste time entry.
            </summary>
            <param name="Entities">The entities.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.CopyPasteSpecialTimeEntry(BQECore.Model.PasteSpecial)">
            <summary>
            Copies the paste special time entry.
            </summary>
            <param name="model">The model.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.TimeEntryList(BQECore.Model.BQEParameters)">
            <summary>
            list of TimeEntryForDropDown object matching filters
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{TimeEntryForDropDown}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.GetSimpleTimeEntries(BQECore.Model.BQEParameters)">
            <summary>
            Gets the simple time entry list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{SimpleTimeEntry}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.PostSimpleTimeEntries(System.Collections.Generic.List{BQECore.Model.SimpleTimeEntry})">
            <summary>
            This Api is used to save/update Simple TimeEntry Collection.
            </summary>
            <param name="value">Time Entry model</param>
            <returns>IEnumerable{SimpleTimeEntry}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.GetTimeEntry(System.Guid)">
            <summary>
            This API gets an existing Time Entry Record
            </summary>
            <param name="id">Time Entry ID</param>
            <returns>TimeEntry Model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.PostTimeEntry(BQECore.Model.TimeEntry)">
            <summary>
            This Api is used to save TimeEntry .
            </summary>
            <param name="value">Time Entry model</param>
            <returns>TimeEntry.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.UpdateRates(BQECore.Model.QuickUpdate)">
            <summary>
            Updates the rates.
            </summary>
            <param name="value">The value.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.PostTimeEntries(System.Collections.Generic.IEnumerable{BQECore.Model.TimeEntry})">
            <summary>
            This Api is used to save a list of TimeEntry Models.
            </summary>
            <param name="timeEntryList">A list of timeEntry models</param>
            <returns>IEnumerable{BQEResponseObject{TimeEntry}}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.PutTimeEntry">
            <summary>
            This method is used to update TimeEntry
            </summary>
            <returns>TimeEntry.</returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
            <exception cref="T:System.Net.Http.HttpResponseMessage"></exception>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.DeleteTimeEntry(System.Guid)">
            <summary>
            This method is used to delete one TimeEntry
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.DeleteTimeEntries(System.Guid[])">
            <summary>
            This method is used to delete TimeEntry model
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.BatchDeleteTimeEntries(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete time entries.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.GetStartStopTimeList(System.Nullable{System.UInt16},System.Nullable{System.UInt16})">
            <summary>
            This Api is used to get All the times of the day based on interval or global settings.
            </summary>
            <param name="interval">Interval in minutes</param>
            <param name="startTime">The start time.</param>
            <returns>Gets Start and Stop Time List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.BatchUpdateTimeEntries(BQECore.Model.TimeEntryBatchUpdate)">
            <summary>
            This Api is used to do Batch Change to Activities
            </summary>
            <param name="value">of type BatchChange containing fields to batch update</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.FullBatchUpdateTimeEntries(BQECore.Model.FullTimeEntryBatchUpdate)">
            <summary>
            This Api is used to do Batch Change to Activities
            </summary>
            <param name="value">of type BatchChange containing fields to batch update</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.GetTimeEntrySummaryInfo(BQECore.Model.BQEParameters)">
            <summary>
            This API is used to Get summary values for the list
            </summary>
            <param name="parameters">BQEParameters</param>
            <returns>Object of SummaryInfoTimeEntry</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.UpdateDefaults(BQECore.Model.TimeEntry)">
            <summary>
            This API is used to Get Rates of a time entry
            </summary>
            <param name="timeEntry">TimeEntry Object</param>
            <returns>TimeEntry Object</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.PutLineNumberOrder(System.Guid,EnumUpDown)">
            <summary>
            This Api is used to change LineNumber number of a TimeEntry.
            </summary>
            <param name="id">The TimeEntry identifier.</param>
            <param name="id1">Up down.</param>
            <returns>ResponseCode.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.PutLineNumberSortOrder(System.Guid,System.Int32)">
            <summary>
            This Api is used to update the sortorder of TimeEntry line items.
            </summary>
            <param name="TimeEntry_ID">The time entry identifier.</param>
            <param name="sortposition">The sortposition.</param>
            <returns>TimeEntry.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.CalculateOvertime(BQECore.Model.OTCalculator,BQECore.Model.BQEParameters)">
            <summary>
            This Api is used to Calculate OverTime of TimeEntry.
            </summary>
            <param name="otCalculator">The ot calculator.</param>
            <param name="myparam">The myparam.</param>
            <returns>List&lt;APIResponse&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.TimeEntryController.TimePageTotals(BQECore.Model.BQEParameters)">
            <summary>
            TimeEntryPageTotal.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>TimeEntryPageTotal.</returns>
        </member>
        <member name="T:BQECore.Api.Controllers.VendorController">
            <summary>
            Class VendorController.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.Vendor}</cref>
            </seealso>
        </member>
        <member name="P:BQECore.Api.Controllers.VendorController.Module">
            <summary>
            Gets the module.
            </summary>
            <value>The module.</value>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.Fill">
            <summary>
            Fills this instance.
            </summary>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.VendorCompact(BQECore.Model.EmployeeVendorParameter)">
            <summary>
            This Api is used to get All or filtered Vendor Compact List
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List of Vendor Objects with lesser columns</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.VendorList(BQECore.Model.BQEParameters)">
            <summary>
            Get All or filtered Vendor List
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;VendorList&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.VendorSecurityProfileList(BQECore.Model.BQEParameters)">
            <summary>
            Vendors the security profile list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable&lt;VendorSecurityProfileList&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.GetVendor(System.String)">
            <summary>
            GetVendor : This Api is used to get a particular Vendors.
            We pass id of type string as parameter
            </summary>
            <param name="id">id is Vendor_ID or VendorID</param>
            <returns>Vendor model</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.MergeVendor(BQECore.Model.MergeArgs)">
            <summary>
            MergeVendor : This API is used to Merge one Vendor into other.
            </summary>
            <param name="args">The arguments.</param>
            <returns>string</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.GetVendorRole">
            <summary>
            GetVendorRole : This Api is used to get roles for vendor.
            </summary>
            <returns>List of Roles</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.GetVendorType">
            <summary>
            GetVendorTypes : This Api is used to get VendorTypes of Vendor.
            </summary>
            <returns>List of VendorTypes</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.GetVendorSubmitToList">
            <summary>
            GetVendorSubmitToList : This Api is used to get Submit-to list.
            </summary>
            <returns>List</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.PostVendor(BQECore.Model.Vendor)">
            <summary>
            Post : This Api call saves a Vendor
            </summary>
            <param name="value">The value.</param>
            <returns>Vendor.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.PutVendor">
            <summary>
            PUT : This Api call updates a vendor
            </summary>
            <returns>Vendor.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.DeleteVendor(System.Guid)">
            <summary>
            DELETE: This Api call deletes a vendor
            </summary>
            <param name="id">id is Employee_ID</param>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.DeleteVendors(System.Guid[])">
            <summary>
            This API is used to DELETE a list of Vendor Model.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.BatchDeleteVendors(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete vendors.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.CloneVendor(BQECore.Model.MergeArgs)">
            <summary>
            PostCloneVendor : This API call Clones an Vendor
            </summary>
            <param name="args">The arguments.</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.ConvertVendorIntoEmployee(BQECore.Model.VendorCompact)">
            <summary>
            PostConvertVendorIntoEmployee : This API call converts a Vendor to Employee
            </summary>
            <param name="vendor">The vendor.</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.Vendors(BQECore.Model.BQEParameters)">
            <summary>
            Vendors the list.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>IEnumerable{Vendor}.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.VendorSummaryInfo(BQECore.Model.BQEParameters)">
            <summary>
            Vendors the summary information.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>SummaryInfo.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.GetVendorSummary(System.Guid)">
            <summary>
            Gets summarized information of particular Vendor's income Bar.
            </summary>
            <param name="id">The Vendor identifier.</param>
            <returns>VendorSummary.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.VendorsSummary(BQECore.Model.BQEParameters)">
            <summary>
            Gets summarized information about Vendors income Bar
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>VendorSummary.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.VendorPerformance(BQECore.Model.BQEParameters)">
            <summary>
            Gets Vendor Performance screen data.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>VendorPerformance.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.BatchChange(BQECore.Model.EmployeeBatchChange)">
            <summary>
            This Api is used to do Batch Change to Vendors
            </summary>
            <param name="value">of type BatchChange containing fields to batch update</param>
            <returns>BQEResource.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.FullBatchChange(BQECore.Model.FullEmployeeBatchChange)">
            <summary>
            Fulls the batch change.
            </summary>
            <param name="value">The value.</param>
            <returns>List&lt;APIResponse&lt;PartialEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.VendorController.TransactionHistory(BQECore.Model.TransactionHistoryParameters)">
            <summary>
            Gets the transaction history.
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:BQECore.Api.Controllers.XeroController">
            <summary>
            XeroController Inherits ApiController
            This class Controls all API Calls for Xero Sync
            Module.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.Integration}</cref>
            </seealso>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetXeroConsumerAppToken">
            <summary>
            Gets the xero consumer application token.
            </summary>
            <returns>OAuthToken.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.DeleteOAuthInfo(System.String)">
            <summary>
            Deletes the o authentication information.
            </summary>
            <param name="value">The value.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetActivity(BQECore.Model.BQEParameters)">
            <summary>
            Gets the activity.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetExpense(BQECore.Model.BQEParameters)">
            <summary>
            Gets the expense.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetEmployees(BQECore.Model.BQEParameters)">
            <summary>
            Gets the employees.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetClients(BQECore.Model.BQEParameters)">
            <summary>
            Gets the clients.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetVendors(BQECore.Model.BQEParameters)">
            <summary>
            Gets the vendors.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetInvoices(BQECore.Model.BQEParameters)">
            <summary>
            Gets the invoices.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetPayments(BQECore.Model.BQEParameters)">
            <summary>
            Gets the payments.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetVendorBills(BQECore.Model.BQEParameters)">
            <summary>
            Gets the vendor bills.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetVendorCredits(BQECore.Model.BQEParameters)">
            <summary>
            Gets the vendor credits.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetAccounts(BQECore.Model.BQEParameters)">
            <summary>
            Gets the accounts.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetAccountsListfromXero(BQECore.Model.BQEParameters)">
            <summary>
            Gets the accounts listfrom xero.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetTaxRatesfromXero(BQECore.Model.BQEParameters)">
            <summary>
            Gets the tax ratesfrom xero.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetItemListfromXero(BQECore.Model.BQEParameters)">
            <summary>
            Gets the item listfrom xero.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetEmployeeListFromXero(BQECore.Model.BQEParameters)">
            <summary>
            Gets the employee list from xero.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetClientListFromXero(BQECore.Model.BQEParameters)">
            <summary>
            Gets the client list from xero.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetVendorListFromXero(BQECore.Model.BQEParameters)">
            <summary>
            Gets the vendor list from xero.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.GetPurchaseOrders(BQECore.Model.BQEParameters)">
            <summary>
            Gets the purchase orders.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.CancelSync">
            <summary>
            Cancels the synchronize.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.SendActivity(BQECore.Model.BQEParameters)">
            <summary>
            Sends the activity.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.SendExpense(BQECore.Model.BQEParameters)">
            <summary>
            Sends the expense.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.SendEmployee(BQECore.Model.BQEParameters)">
            <summary>
            Sends the employee.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.SendClients(BQECore.Model.BQEParameters)">
            <summary>
            Sends the clients.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.SendVendors(BQECore.Model.BQEParameters)">
            <summary>
            Sends the vendors.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.SendInvoices(BQECore.Model.BQEParameters)">
            <summary>
            Sends the invoices.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.SendPayments(BQECore.Model.BQEParameters)">
            <summary>
            Sends the payments.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.SendVendorBills(BQECore.Model.BQEParameters)">
            <summary>
            Sends the vendor bills.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.SendVendorCredits(BQECore.Model.BQEParameters)">
            <summary>
            Sends the vendor credits.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.SendPurchaseOrders(BQECore.Model.BQEParameters)">
            <summary>
            Sends the purchase orders.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.Controllers.XeroController.SendAccounts(BQECore.Model.BQEParameters)">
            <summary>
            Sends the accounts.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>List&lt;APIResponse&lt;IntegrationLink&gt;&gt;.</returns>
        </member>
        <member name="T:BQECore.Api.ThirdPartySettingController">
            <summary>
            Class ThirdPartySettingController.
            </summary>
            <seealso>
                <cref>BQECore.Api.Controllers.ApiSecurityController{BQECore.Model.Security.Integration}</cref>
            </seealso>
        </member>
        <member name="M:BQECore.Api.ThirdPartySettingController.GetCloudStorageConsumerAppInfo(System.Int32)">
            <summary>
            Gets the cloud storage consumer application information.
            </summary>
            <param name="storageType">Type of the storage.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:BQECore.Api.ThirdPartySettingController.ThirdPartySettings(BQECore.Model.TemplateParameter)">
            <summary>
            GetList: is used for getting the list of ThirdPartySettings.
            </summary>
            <param name="parameters">BQEParameters</param>
            <returns>IEnumerable&lt;Model.ThirdPartySetting&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.ThirdPartySettingController.GetItem(System.Guid)">
            <summary>
            GetItem: is used for getting an item of ThirdPartySetting.
            </summary>
            <param name="id">The identifier.</param>
            <returns>ThirdPartySetting.</returns>
        </member>
        <member name="M:BQECore.Api.ThirdPartySettingController.GetDefaultStorage">
            <summary>
            GetItem: is used for getting GetDefaultStorage.
            </summary>
            <returns>ThirdPartySetting</returns>
        </member>
        <member name="M:BQECore.Api.ThirdPartySettingController.GetStorage(ThirdPartySettings,System.String)">
            <summary>
            GetItem: is used for getting GetStorage.
            </summary>
            <param name="type">The type.</param>
            <param name="alias">The alias.</param>
            <returns>ThirdPartySetting</returns>
        </member>
        <member name="M:BQECore.Api.ThirdPartySettingController.PostThirdPartySetting(BQECore.Model.ThirdPartySetting)">
            <summary>
            PostThirdPartySetting: is used for saving an item of ThirdPartySetting.
            </summary>
            <param name="setting">The setting.</param>
            <returns>No. Of Records Affected</returns>
        </member>
        <member name="M:BQECore.Api.ThirdPartySettingController.PutThirdPartySetting">
            <summary>
            PutThirdPartySetting: is used for updating an item of ThirdPartySetting.
            </summary>
            <returns>No. Of Records Affected</returns>
        </member>
        <member name="M:BQECore.Api.ThirdPartySettingController.DeleteThirdPartySetting(System.Guid)">
            <summary>
            DeleteThirdPartySetting: is used for deleting an item of ThirdPartySetting.
            </summary>
            <param name="id">ThirdPartySetting_ID</param>
            <returns>No. Of Records Affected</returns>
        </member>
        <member name="M:BQECore.Api.ThirdPartySettingController.DeleteThirdPartySettings(System.Guid[])">
            <summary>
            This API is used to DELETE a list of ThirdPartySetting Model.
            </summary>
            <param name="ids">The ThirdPartySetting_IDs.</param>
        </member>
        <member name="M:BQECore.Api.ThirdPartySettingController.BatchDeleteThirdPartySettings(BQECore.Model.BatchDelete)">
            <summary>
            Batches the delete third party settings.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List&lt;APIResponse&lt;PartialDeleteEntity&gt;&gt;.</returns>
        </member>
        <member name="M:BQECore.Api.ThirdPartySettingController.DeleteThirdPartySetting(System.String,ThirdPartySettings)">
            <summary>
            PutThirdPartySetting: is used for deleting an item of ThirdPartySetting.
            </summary>
            <param name="AccountID">The account identifier.</param>
            <param name="type">The type.</param>
            <returns>No. Of Records Affected</returns>
        </member>
        <member name="T:BQECore.Api.BQECredentials">
            <summary>
            
            </summary>
        </member>
        <member name="P:BQECore.Api.BQECredentials.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:BQECore.Api.BQECredentials.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:BQECore.Api.BQECredentials.DeveloperId">
            <summary>
            
            </summary>
        </member>
        <member name="P:BQECore.Api.BQECredentials.AppId">
            <summary>
            
            </summary>
        </member>
        <member name="P:BQECore.Api.BQECredentials.Token">
            <summary>
            
            </summary>
        </member>
        <member name="P:BQECore.Api.BQECredentials.accountType">
            <summary>
            
            </summary>
        </member>
        <member name="P:BQECore.Api.BQECredentials.expirationDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:BQECore.Api.BQECredentials.AccountID">
            <summary>
            
            </summary>
        </member>
        <member name="P:BQECore.Api.BQECredentials.ownerAccountId">
            <summary>
            
            </summary>
        </member>
        <member name="M:BQECore.Api.DashboardController.UserDashboards(BQECore.Model.BQEParameters)">
            <summary>
            This Api gets the minimal List of Dashboard(without the baseProperties)
            it takes BQEParameters Model as parameter
            </summary>
            <param name="parameters"></param>
            <returns> returns List of UiDashboard Model </returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.Dashboards(BQECore.Model.BQEParameters)">
            <summary>
            GET api/values
            This Api is used to GET Dashboard List.
            it takes BQEParameters Model as parameter
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>Dashboard List.</returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.GetDashboard(System.Guid)">
            <summary>
            GET api/values
            This Api is used to GET Dashboard Model.
            it takes Dashboard_ID as parameter
            </summary>
            <param name="id">The Dashboard identifier.</param>
            <returns>Dashboard.</returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.PostDashboard(BQECore.Model.Dashboard)">
            <summary>
            POST api/values
            This Api is used to save Dashboard Model.
            it takes Dashboard Model as parameter
            </summary>
            <param name="dashboard">The dashboard model.</param>
        </member>
        <member name="M:BQECore.Api.DashboardController.PutDashboard">
            <summary>
            PUT api/values
            This Api is used to Update Dashboard Model.
            it takes Dashboard Model as parameter
            </summary>
            <param name="dashboard">The dashboard model.</param>
        </member>
        <member name="M:BQECore.Api.DashboardController.PutDashboardWidget">
            <summary>
            PUT api/values
            This Api is used to Update Dashboard Widget.
            it takes Dashboard Model as parameter
            </summary>
            <param name="dashboard">The dashboard model.</param>
        </member>
        <member name="M:BQECore.Api.DashboardController.DeleteDashboard(System.Guid)">
            <summary>
            DELETE api/values
            This Api is used to DELETE Dashboard .
            it takes Dashboard_ID as parameter
            </summary>
            <param name="id">The Dashboard Identifier.</param>
        </member>
        <member name="M:BQECore.Api.DashboardController.DeleteDashboards(System.Guid[])">
            <summary>
            This Api is used to DELETE list of CustomList Dashboard        
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:BQECore.Api.DashboardController.GetDashboardCompactList(BQECore.Model.BQEParameters)">
            <summary>
            This Api is used to get  dashboard Compact List
            it takes BQEParameters as parameter
            </summary>
            <param name="widget"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.PostDashboardWidget(BQECore.Model.DashboardWidget)">
            <summary>
            This api saves Dashboard Widget
            This api takes DashboardWidget Model as Parameter
            </summary>
            <param name="widget"></param>
            <returns>This api returs DashboardWidget Model </returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.GetDashboardWidgets(System.Guid)">
            <summary>
            GET api/values
            This Api is used to save GetDashboardWidgets .
            it takes Dashboard_ID as parameter
            </summary>
            <param name="id">The Dashboard Identifer.</param>
            <returns>DashboardWidget List.</returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.AccountReceivable(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            This api gets data for CashFlow,Billing,Aging,IncomeVsExpenses,Income,Expenses Wudgets
            it takes  as widgetHelper parameter
            </summary>
            <param name="widgetHelper"></param>
            <returns> returns reult as list of WidgetType.AccountEntity Model  </returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.Hours(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            This api gets data  for Hours Widget
            it takes  as widgetHelper as parameter
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.UnbilledTime(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            This api gets data  for UnbilledTime Widget
            it takes  as widgetHelper as parameter
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.StaffWorkload(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.PerformanceAnalysis(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.StaffUtilizationRate(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.StaffRealizationRate(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.EntityTimeOff(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.WeeklyPerformance(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.ClientRetainers(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.AgedReceivables(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.MoneyOwed(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.Todos(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.EarnedValues(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.Notes(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.Documents(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.Reimbursables(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.GrossMargin(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.EmployeeAllocation(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            
            </summary>
            <param name="widgetHelper"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.WorkFlowWidget(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            This api gets data  for WorkFlow Widget
            it takes  as widgetHelper as parameter
            </summary>
            <param name="widgetHelper"></param>
            <returns>this api returns List of WorkFlowWidget Model </returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.ProjectStatus(BQECore.Model.WidgetType.WidgetHelper)">
            <summary>
            This Api is used to Get  Data for Project Status Widget
            It takes Widget Helper Model as parameter
            </summary>
            <param name="widgetHelper"></param>
            <returns> List of Project Status Model </returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.Widgets(BQECore.Model.BQEParameters)">
            <summary>
            GET api/values
            This Api is used to GET Widget List.
            it takes BQEParameters Model as parameter
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>Widget List.</returns>
        </member>
        <member name="M:BQECore.Api.DashboardController.GetWidgetFilters(WidgetName)">
            <summary>
            GET api/values
            This Api is used to GET WidgetFilters .
            it takes Dashboard_ID as parameter
            </summary>
            <param name="WidgetID">The Dashboard Identifier.</param>
        </member>
        <member name="M:BQECore.Api.DashboardController.GetWidgetParameters(WidgetName)">
            <summary>
            GET api/values
            This Api is used to GET WidgetParameters .
            it takes WidgetName as parameter
            </summary>
            <param name="widgetId">The Dashboard Widget identifier.</param>
        </member>
        <member name="M:BQECore.Api.DashboardController.GetDashboardWidgetFilters(System.Guid)">
            <summary>
            GET api/values
            This Api is used to GET Dashboard Widget Filters.
            </summary>
            <param name="dashboardWidgetId">The Dashboard Widget identifier.</param>
        </member>
        <member name="T:BQECore.Api.WebApiApplication">
            <summary>
            
            </summary>
        </member>
        <member name="M:BQECore.Api.WebApiApplication.Application_Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:BQECore.Api.WebApiApplication.Application_Error">
            <summary>
            
            </summary>
        </member>
        <member name="T:BQECore.Api.IGalaxyProvidePrincipal">
            <summary>
            
            </summary>
        </member>
        <member name="M:BQECore.Api.IGalaxyProvidePrincipal.CreatePrincipal(System.String,System.String,System.String,System.String,System.String,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="developerId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:BQECore.Api.IProvidePrincipal.CreatePrincipal(System.String@,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="developerId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
    </members>
</doc>
